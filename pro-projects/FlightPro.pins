; Thu Feb 23 00:38:53 MSK 2017
; 
;+ (version "3.5")
;+ (build "Build 663")

([FlightPro_Class0] of  CloVar

	(source "(volatile! {:view \"FORWARD\"\n                        :pitch -20\n                        :roll 0})")
	(title "CAMERA"))

([FlightPro_Class1] of  CloNamespace

	(source "(:require\n  [calc.dynamic :as dyn]\n  [calc.geo :as geo])")
	(title "czm.core"))

([FlightPro_Class10000] of  ShareOnto

	(but-deep-copy "Deep Copy Instance/share.onto/deep-copy")
	(but-del-fil "Delete Filtered Instances/share.onto/delfil")
	(but-del-unref "Delete Unreferenced/share.onto/delete-unref")
	(but-find-unref "Find Unreferenced/share.onto/find-unref")
	(but-load-prj "Load Source Project/share.onto/load-src-prj")
	(but-shal-copy "Shallow Copy Instances/share.onto/shal-copy")
	(source-project "DefaultKnowledgeBase(ProServer)"))

([FlightPro_Class100000] of  WorkingPrograms

	(cloPrograms
		[FlightPro_Class390002]
		[FlightPro_Class230004]
		[FlightPro_Class70002]
		[FlightPro_Class20025]
		[FlightPro_Class480000]
		[FlightPro_Class180002]
		[RuleEngine_Class30000]
		[Example_Class10000]
		[GeoNamesWikipedia_Class0]
		[FlightPro_Class670000]
		[FlightPro_Class400000]
		[FlightPro_Class20000]
		[FlightPro_Class280000])
	(title "FlightPro Programs"))

([FlightPro_Class10001] of  CloFunction

	(source ";;(println [:CZ-FLY-TO lat lon alt crs per])\n(let [pitch (condp = (:view @CAMERA)\n                \"UP\" 90\n                \"DOWN\" -90\n                (:pitch @CAMERA))\n        roll (:roll @CAMERA)\n        head (geo/norm-crs (condp = (:view @CAMERA)\n                         \"BACKWARD\" (+ crs 180)\n                         \"RIGHT\" (+ crs 90)\n                         \"LEFT\" (- crs 90)\n                         \"FORWARD-RIGHT\" (+ crs 45)\n                         \"FORWARD-LEFT\" (- crs 45)\n                         \"BACKWARD-RIGHT\" (+ crs 135)\n                         \"BACKWARD-LEFT\" (- crs 135)\n                         crs))]\n    (fly-control lat lon alt head pitch roll per))")
	(title "fly-to [lat lon alt crs per]"))

([FlightPro_Class10002] of  CloFunction

	(source "(cond\n   (> x 360) (- x 360)\n   (< x 0) (+ x 360)\n   true x)")
	(title "norm-crs [x]"))

([FlightPro_Class100023] of  ClsRequired

	(cloFunctions
		[FlightPro_Class100026]
		[FlightPro_Class100027]
		[FlightPro_Class240001]
		[FlightPro_Class240002]
		[FlightPro_Class80000]
		[FlightPro_Class100028]
		[FlightPro_Class30026]
		[FlightPro_Class30027]
		[FlightPro_Class140027])
	(cloNamespace [FlightPro_Class100024])
	(cloVars
		[FlightPro_Class100029]
		[FlightPro_Class240000])
	(title "Carrier Movement"))

([FlightPro_Class100024] of  CloNamespace

	(source "(:require\n  [calc.dynamic :refer \n	[equalize\n	 course-closer\n	 step-closer]])")
	(title "carr.move"))

([FlightPro_Class100025] of  CloVar

	(source "(volatile! {:mode \"?\"\n               :coord [0 0]\n               :altitude 0\n               :speed 0\n               :course 0\n               :step-hrs (double (/ (:carrier TIO) 3600000))\n               :bank-params [16 16 64 2]\n               :rudder {:target 0\n                            :step 3\n	    :accel 1\n                            :time-out 1017}\n               :elevator {:target 0\n                            :step 4\n	    :accel 1\n                            :time-out 997}\n               :propeller {:target 0\n                            :step 1\n	    :accel 1\n                            :time-out 2003}})")
	(title "CARRIER"))

([FlightPro_Class100026] of  CloFunction

	(source "(let [cosphi1 (js/Math.cos phi1)\n       sinphi1 (js/Math.sin phi1)\n       cosaz (js/Math.cos az)\n       sinaz (js/Math.sin az)\n       sinc (js/Math.sin c)\n       cosc (js/Math.cos c)\n       phi2 (js/Math.asin (+ (* sinphi1 cosc) (* cosphi1 sinc cosaz)))\n       lam2 (+ (js/Math.atan2 (* sinc sinaz) (- (* cosphi1 cosc) (* sinphi1 sinc cosaz))) lambda0)]\n  [phi2 lam2])")
	(title "spherical-between-js [phi1 lambda0 c az]"))

([FlightPro_Class100027] of  CloFunction

	(source "([carr]\n  (let [car @carr]\n    (set-turn-point carr (:coord car) (:course car) (:speed car))))\n([carr [lat lon] crs spd]\n  (vswap! carr assoc :turn-point\n    {:phi (* lat PID180)\n     :lam (* lon PID180)\n     :dir (* crs PID180)\n     :rdh (* spd NMRAD)\n     :clk 0}))")
	(title "set-turn-point"))

([FlightPro_Class100028] of  CloFunction

	(source "(let [car @carr\n       tur (:turn-point car)\n       hrs (:step-hrs car)\n       elt (+ (:clk tur) hrs)\n       way (* (:rdh tur) elt)\n       [phi lam] (spherical-between-js (:phi tur) (:lam tur) way (:dir tur))]\n  (vswap! carr assoc :coord [(/ phi PID180) (/ lam PID180)]\n                                :turn-point (assoc tur :clk elt)))")
	(title "move [carr]"))

([FlightPro_Class100029] of  CloVar

	(source "(/ Math.PI 180)")
	(title "PID180"))

([FlightPro_Class10003] of  CloFunction

	(source "(if (= terra \"yes\")\n  (set! (.-terrainProvider VIEWER) TERR-PROV))\n(.add (.-dataSources VIEWER) CZM-SRC)\n(.addEventListener (js/EventSource. (str base-url \"czml/\")) \"czml\" cz-processor false)\n(println [:INIT-3D-VIEW :BASE base-url :TERRA terra])")
	(title "init-3D-view [base-url terra]"))

([FlightPro_Class110000] of  CloFunction

	(source "(letfn [(turn-right? [from to]\n	(let [dif (- to from)]\n	  (cond\n	    (> dif 0)\n	      (<= dif 180)\n	    (< dif 0) \n	      (< dif -180))))]\n  (let [arc (calc/abs (- old-crs new-crs))\n         arc (if (> arc 180)\n                 (- 360 arc)\n                 arc)\n         bnk (cond\n                  (< arc small-arc) (int (/ right-bank factor)) \n                  (> arc big-arc) (* right-bank factor)\n                  true right-bank)]\n    (if (turn-right? old-crs new-crs)\n        bnk\n        (- bnk))))")
	(title "bank [old-crs new-crs [right-bank small-arc big-arc factor]]"))

([FlightPro_Class120000] of  CSS

	(source "#autopilot {\n  position:fixed;\n  bottom:160px;\n  right:40px;\n  padding:5px;\n  z-index:100;\n  color:yellow\n}\n#accel {\n  position:fixed;\n  bottom:150px;\n  right:24px;\n  padding:5px;\n  z-index:100;\n  color:yellow\n}\n#course {\n  position:fixed;\n  bottom:150px;\n  right:114px;\n  padding:5px;\n  z-index:100;\n  color:yellow\n}\n#speed {\n  position:fixed;\n  bottom:130px;\n  right:114px;\n  padding:5px;\n  z-index:100;\n  color:yellow\n}\n#altitude {\n  position:fixed;\n  bottom:110px;\n  right:114px;\n  padding:5px;\n  z-index:100;\n  color:yellow\n}\n#lat {\n  position:fixed;\n  bottom:90px;\n  right:114px;\n  padding:5px;\n  z-index:100;\n  color:yellow\n}\n#lon {\n  position:fixed;\n  bottom:70px;\n  right:114px;\n  padding:5px;\n  z-index:100;\n  color:yellow\n}\n#course-fld {\n  position:fixed;\n  bottom:150px;\n  right:66px;\n  padding:5px;\n  z-index:100;\n}\n#speed-fld {\n  position:fixed;\n  bottom:130px;\n  right:66px;\n  padding:5px;\n  z-index:100;\n  color:yellow\n}\n#altitude-fld {\n  position:fixed;\n  bottom:110px;\n  right:66px;\n  padding:5px;\n  z-index:100;\n}\n#speed-acl {\n  position:fixed;\n  bottom:130px;\n  right:20px;\n  padding:5px;\n  z-index:100;\n  color:yellow\n}\n#altitude-acl {\n  position:fixed;\n  bottom:110px;\n  right:20px;\n  padding:5px;\n  z-index:100;\n}\n#latitude-fld {\n  position:fixed;\n  bottom:90px;\n  right:20px;\n  padding:5px;\n  z-index:100;\n}\n#longitude-fld {\n  position:fixed;\n  bottom:70px;\n  right:20px;\n  padding:5px;\n  z-index:100;\n}\n#camera {\n  position:fixed;\n  bottom:140px;\n  left:60px;\n  padding:5px;\n  z-index:100;\n  color:yellow\n}\n#onboard {\n  position:fixed;\n  bottom:130px;\n  left:20px;\n  padding:5px;\n  z-index:100;\n  color:yellow\n}\n#onboard-fld {\n  position:fixed;\n  bottom:130px;\n  left:84px;\n  padding:5px;\n  z-index:100;\n}\n#view {\n  position:fixed;\n  bottom:110px;\n  left:42px;\n  padding:5px;\n  z-index:100;\n  color:yellow\n}\n#view-fld {\n  position:fixed;\n  bottom:110px;\n  left:84px;\n  padding:5px;\n  z-index:100;\n}\n#pitch {\n  position:fixed;\n  bottom:90px;\n  left:42px;\n  padding:5px;\n  z-index:100;\n  color:yellow\n}\n#pitch-fld {\n  position:fixed;\n  bottom:90px;\n  left:84px;\n  padding:5px;\n  z-index:100;\n}\n#roll {\n  position:fixed;\n  bottom:70px;\n  left:48px;\n  padding:5px;\n  z-index:100;\n  color:yellow\n}\n#roll-fld {\n  position:fixed;\n  bottom:70px;\n  left:84px;\n  padding:5px;\n  z-index:100;\n}")
	(store-in "resources/public/css")
	(title "cesium"))

([FlightPro_Class120002] of  CloProgram

	(cloFunctions [FlightPro_Class260000])
	(cloNamespace [Clojure_Class300001])
	(title "Clojure Work"))

([FlightPro_Class130000] of  HTML

	(source "<!DOCTYPE html>\n<html>\n<head>\n  <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n  <link rel=\"stylesheet\" href=\"css/leaflet.css\" />\n  <link rel=\"stylesheet\" href=\"leaflet/leaflet.css\"/>\n  <script src=\"leaflet/leaflet.js\"></script>\n  <script src=\"js/RotatedMarker.js\"></script>\n</head>\n<body>\n  <div id=\"map\"></div>\n  <div id=\"mousepos\"></div>\n  <div id=\"commands-header\"></div>\n  <div id=\"commands\"></div>\n  <div id=\"element1\"></div>\n  <div id=\"element2\"></div>\n  <div id=\"element3\"></div>\n  <div id=\"element4\"></div>\n  <div id=\"element5\"></div>\n  <div id=\"element6\"></div>\n  <div id=\"questions-header\"></div>\n  <div id=\"questions\"></div>\n  <script src=\"js/chart.js\"></script>\n</body>\n</html>")
	(store-in "resources/public")
	(title "leaflet"))

([FlightPro_Class130001] of  CloFunction

	(source "(let [[rb sa ba fa :as bps] (:bank-params @carr)\n       bnk (dyn/bank (:course @carr) course bps)\n       spd (:speed @carr)]\n  (if (or (< spd 90) (= bnk 0))\n    (mov/turn carr course 1)\n    (let [accel (if (> (calc/abs bnk) rb) 2 1)]\n      (czm/camera :roll bnk)\n      (mov/turn carr course accel)\n      (dyn/check-diff-and-do carr\n        [:rudder :target]\n        [:course]\n        (get-in @carr [:rudder :step])\n        [:rudder :time-out]\n        #(czm/camera :roll 0)))))")
	(title "turn-and-bank [carr course]"))

([FlightPro_Class130003] of  CloFunction

	(source "(if (< x 0) (- x) x)")
	(title "abs [x]"))

([FlightPro_Class130004] of  CloFunction

	(source "(letfn [(proc-fn [cr]\n             (let [c @cr]\n               (if (<= (calc/abs (- (get-in c path1)\n                                           (get-in c path2))) limit)\n                 (do (final-fn) false)\n                 true)))]\n  (vswap! carr assoc :cdad-status (volatile! \"STOP\"))\n  (asp/start-process (:cdad-status @carr) \n                                 #(proc-fn carr)\n                                 (get-in @carr tio-pth)))")
	(title "check-diff-and-do [carr path1 path2 limit tio-pth final-fn]"))

([FlightPro_Class140000] of  CloVar

	(source "(volatile! {})")
	(title "VEHICLES"))

([FlightPro_Class140001] of  ClsRequired

	(cloFunctions
		[FlightPro_Class140008]
		[FlightPro_Class140005]
		[FlightPro_Class330006]
		[FlightPro_Class330005]
		[FlightPro_Class140004]
		[FlightPro_Class730000]
		[FlightPro_Class140003]
		[FlightPro_Class730001]
		[FlightPro_Class140007]
		[FlightPro_Class270001])
	(cloNamespace [FlightPro_Class140002])
	(title "Viev 3D Controls"))

([FlightPro_Class140002] of  CloNamespace

	(source "(:require\n [goog.string :as gstring]\n [goog.string.format])")
	(title "view3d.controls"))

([FlightPro_Class140003] of  CloFunction

	(source "(set-html! \"autopilot\" \"<h4>Autopilot</h4>\")\n(set-html! \"accel\" \"accel\")\n(set-html! \"course\" \"Course: 000\")\n(set-html! \"course-fld\" \n  \"<input value='180' style='width:38px' id='input-crs'\n                     onchange='javascript:view3d.client.course(this.value)'>\")\n(set-html! \"speed\" \"Speed: 000\")\n(set-html! \"speed-fld\" \n  \"<input value='210' style='width:38px' id='input-spd'\n               onchange='javascript:view3d.client.speed(this.value)'>\")\n(set-html! \"speed-acl\" \n  (str \"<select style='width:44px'\n                onchange='javascript:view3d.client.accel_speed(this.value)'>\"\n         (apply str (for [n (range 1 11)]\n                           (str \"<option value='\" n \"'>\" n \"</option>\")))))\n(set-html! \"altitude\" \"Altitude: 00000\")\n(set-html! \"altitude-fld\" \n  \"<input value='4000' style='width:38px' id='input-alt'\n               onchange='javascript:view3d.client.altitude(this.value)'>\")\n(set-html! \"altitude-acl\" \n  (str \"<select style='width:44px'\n                onchange='javascript:view3d.client.accel_altitude(this.value)'>\"\n         (apply str (for [n (range 1 11)]\n                           (str \"<option value='\" n \"'>\" n \"</option>\")))))\n(set-html! \"lat\" \"Latitude: 00.0000\")\n(set-html! \"latitude-fld\" \n  \"<input value='40.8' style='width:84px' id='input-lat'\n               onchange='javascript:view3d.client.latitude(this.value)'>\")\n(set-html! \"lon\" \"Longitude: 00.0000\")\n(set-html! \"longitude-fld\" \n  \"<input value='-74.0' style='width:84px' id='input-lon'\n               onchange='javascript:view3d.client.longitude(this.value)'>\")")
	(title "right-controls []"))

([FlightPro_Class140004] of  CloFunction

	(source "(set! (.-innerHTML (by-id id)) msg)")
	(title "set-html! [id msg]"))

([FlightPro_Class140005] of  CloFunction

	(source "(.getElementById js/document id)")
	(title "by-id  [id]"))

([FlightPro_Class140007] of  CloFunction

	(source "(let [{:keys [coord course speed altitude]} @carr]\n  (set-html! \"course\" (str \"Course: \" course))\n  (set-html! \"speed\" (str \"Speed: \" speed))\n  (set-html! \"altitude\" (str \"Altitude: \" altitude))\n  (set-html! \"lat\" (str \"Latitude: \" (format \"%.4f\" (first coord))))\n  (set-html! \"lon\" (str \"Longitude: \" (format \"%.4f\" (second coord)))))")
	(title "show-flight-data [carr]"))

([FlightPro_Class140008] of  CloFunction

	(source "(apply gstring/format fmt args)")
	(title "format [fmt & args]"))

([FlightPro_Class140019] of  CloFunction

	(source "(if (= (:mode @CARRIER) \"MANUAL\")\n  (let [crs (num-val crs)]\n    (if (<= 0 crs 360)\n      (turn-and-bank CARRIER crs))))")
	(title "course [crs]"))

([FlightPro_Class140020] of  CloFunction

	(source "(if (= call \"manual\")\n  (asp/stop-process CAM-PROC))\n(GET (str (:command URL) \"onboard?callsign=\" call)\n  {:handler (fn [response])\n   :error-handler error-handler})")
	(title "onboard [call]"))

([FlightPro_Class140021] of  CloFunction

	(source "(czm/camera :view dir)")
	(title "view [dir]"))

([FlightPro_Class140022] of  CloFunction

	(source "(let [deg (num-val deg)]\n  (if (<= -180 deg 180)\n    (czm/camera :pitch deg)))")
	(title "pitch [deg]"))

([FlightPro_Class140023] of  CloFunction

	(source "(let [deg (num-val deg)]\n  (if (<= -180 deg 180)\n    (czm/camera :roll deg)))")
	(title "roll [deg]"))

([FlightPro_Class140024] of  CloFunction

	(source "(if (= (:mode @CARRIER) \"MANUAL\")\n  (mov/accel CARRIER (num-val spd)))")
	(title "speed [spd]"))

([FlightPro_Class140025] of  CloFunction

	(source "(if (= (:mode @CARRIER) \"MANUAL\")\n  (mov/elevate CARRIER (num-val alt)))")
	(title "altitude [alt]"))

([FlightPro_Class140027] of  CloFunction

	(source "([carr altitude]\n  (vswap! carr assoc-in [:elevator :target] altitude)\n  (equalize carr :elevator set-altitude :altitude step-closer))\n([carr altitude accel]\n  (vswap! carr assoc-in [:elevator :accel] accel)\n  (elevate carr altitude))")
	(title "elevate"))

([FlightPro_Class150000] of  ClsRequired

	(cloFunctions
		[FlightPro_Class140008]
		[FlightPro_Class140005]
		[FlightPro_Class140004]
		[FlightPro_Class160012]
		[FlightPro_Class220026])
	(cloNamespace [FlightPro_Class180001])
	(title "Chart Controls"))

([FlightPro_Class150001] of  CSS

	(source "#map {\n    position: absolute;\n    top: 0px;\n    bottom: 0;\n    left: 0;\n    right: 0;\n}\n#mousepos {\n  position:fixed;\n  bottom:10px;\n  left:10px;\n  padding:5px;\n  z-index:100;\n}\n#commands-header {\n  position:fixed;\n  bottom:50px;\n  left:10px;\n  padding:5px;\n  z-index:100;\n}\n#commands {\n  position:fixed;\n  bottom:40px;\n  left:10px;\n  padding:5px;\n  z-index:100;\n}\n#element1 {\n  position:fixed;\n  bottom:40px;\n  left:160px;\n  padding:5px;\n  z-index:100;\n}\n#element2 {\n  position:fixed;\n  bottom:60px;\n  left:160px;\n  padding:5px;\n  z-index:100;\n}\n#element3 {\n  position:fixed;\n  bottom:80px;\n  left:160px;\n  padding:5px;\n  z-index:100;\n}\n#element4 {\n  position:fixed;\n  bottom:100px;\n  left:160px;\n  padding:5px;\n  z-index:100;\n}\n#element5 {\n  position:fixed;\n  bottom:120px;\n  left:160px;\n  padding:5px;\n  z-index:100;\n}#element6 {\n  position:fixed;\n  bottom:140px;\n  left:160px;\n  padding:5px;\n  z-index:100;\n}\n#questions-header {\n  position:fixed;\n  bottom:50px;\n  right:10px;\n  padding:5px;\n  z-index:100;\n}\n#questions {\n  position:fixed;\n  bottom:40px;\n  right:10px;\n  padding:5px;\n  z-index:100;\n}")
	(store-in "resources/public/css")
	(title "leaflet"))

([FlightPro_Class150002] of  ClsMain

	(asset-path "js/out")
	(butt-build "Build/cljs.compile/build")
	(cloFunctions
		[FlightPro_Class80004]
		[FlightPro_Class160003]
		[FlightPro_Class160007]
		[FlightPro_Class220000]
		[FlightPro_Class160010]
		[FlightPro_Class160008]
		[FlightPro_Class160004]
		[FlightPro_Class670311]
		[FlightPro_Class670313]
		[FlightPro_Class310002]
		[FlightPro_Class360000]
		[FlightPro_Class380003]
		[FlightPro_Class370001]
		[FlightPro_Class370000]
		[FlightPro_Class690014]
		[FlightPro_Class690015]
		[FlightPro_Class690013]
		[FlightPro_Class170005]
		[FlightPro_Class170004]
		[FlightPro_Class430000]
		[FlightPro_Class440000]
		[FlightPro_Class220027]
		[FlightPro_Class160011]
		[FlightPro_Class160002]
		[FlightPro_Class180000]
		[FlightPro_Class380000]
		[FlightPro_Class380001]
		[FlightPro_Class690008])
	(cloNamespace [FlightPro_Class150003])
	(cloVars
		[FlightPro_Class70000]
		[FlightPro_Class20005]
		[FlightPro_Class330003]
		[FlightPro_Class330004]
		[FlightPro_Class160009]
		[FlightPro_Class160005]
		[FlightPro_Class140000]
		[FlightPro_Class670312]
		[FlightPro_Class690012]
		[FlightPro_Class80002]
		[FlightPro_Class200000])
	(css [FlightPro_Class150001])
	(epilogue "(set! (.-onload js/window) (on-load-chart))")
	(html [FlightPro_Class130000])
	(options "{:verbose false}")
	(output-dir "resources/public/js/out")
	(output-to "resources/public/js/chart.js")
	(required
		[FlightPro_Class70008]
		[FlightPro_Class100023]
		[FlightPro_Class230004]
		[FlightPro_Class390002]
		[FlightPro_Class30001]
		[FlightPro_Class150000]
		[FlightPro_Class420008])
	(store-in "src/cljs")
	(title "Chart Client"))

([FlightPro_Class150003] of  CloNamespace

	(source "(:require\n  [goog.string :as gstring]\n  [goog.string.format]\n  [csasync.proc :as asp]\n  [chart.controls :as ctl]\n  [carr.move :as mov]\n  [cognitect.transit :as t]\n  [ajax.core :refer [GET]]\n  [ask.master :as am])")
	(title "chart.client"))

([FlightPro_Class160000] of  CloFunction

	(source "(let [[n s w e] @BBX]\n  (if-let [ff (json-web-data (str (:url-flights F24) \"?bounds=\" n \",\" s \",\" w \",\" e))]\n    (vreset! FLIGHTS \n      (->> ff\n        (filter #(vector? (second %)))\n        ;;(filter #(not (empty? (callsign (second %)))))\n        (apply concat)\n        (apply hash-map)\n        (merge-my-flights @mfs/CARRIERS)\n        (merge-my-flights @MANUAL-DATA)))))")
	(title "flights-in-bbx []"))

([FlightPro_Class160002] of  CloFunction

	(source "(enable-console-print!)\n(init-chart)\n(asp/repeater receive-instructions (:instructions TIO))\n(ctl/show-chart-controls)")
	(title "on-load-chart []"))

([FlightPro_Class160003] of  CloFunction

	(source "(when-let [vmp (@VEHICLES id)]\n  (mov/move vmp)\n  (let [mp @vmp\n         mrk (:marker mp)\n         [lat lon] (:coord mp)\n         pos (js/L.LatLng. lat lon)]\n    (.setLatLng mrk pos))\n  (vswap! VEHICLES assoc id vmp))")
	(title "move-vehicle [id]"))

([FlightPro_Class160004] of  CloFunction

	(source "(delete-vehicle id)\n(let [ms (volatile! \"START\")\n       mp (assoc mp :marker (create-update-marker nil mp)\n                              :step-hrs (double (/ (:vehicles TIO) 3600000))\n	      :movst ms\n                              :mover (asp/start-process ms #(move-vehicle id) (:vehicles TIO)))\n         carr (volatile! mp)]\n    (mov/set-turn-point carr)\n    (vswap! VEHICLES assoc id carr))")
	(title "create-update-vehicle [id mp]"))

([FlightPro_Class160005] of  CloVar

	(source "(volatile! {})")
	(title "CHART"))

([FlightPro_Class160007] of  CloFunction

	(source "(when-let [veh (@VEHICLES id)]\n  (asp/stop-process (:movst @veh))\n  (.removeLayer @CHART (:marker @veh))\n  (vswap! VEHICLES dissoc id))")
	(title "delete-vehicle [id]"))

([FlightPro_Class160008] of  CloFunction

	(source "(if mrk\n  (.removeLayer @CHART mrk))\n(let [[lat lon] (:coord mp)\n       pos (js/L.LatLng. lat lon)\n       ico (js/L.icon #js{:iconUrl (URL-ICO (:status mp)) \n                                  :iconSize #js[32, 32]})\n       opt #js{:icon ico \n                   :draggable true}\n       mrk (-> js/L (.rotatedMarker pos opt))]\n    (.on mrk \"click\"\n         (fn [e]\n           (info (ffirst (filter #(= (:marker @(second %)) (.-target e)) \n                                      (seq @VEHICLES))))))\n    (.addTo mrk @CHART)\n    (set! (.. mrk -options -angle) (:course mp))\n    mrk)")
	(title "create-update-marker [mrk mp]"))

([FlightPro_Class160009] of  CloVar

	(source "{\"INTERSECT\" 	(str HOST PORT \"/img/redpln32.png\")\n \"DESCEND\" 	(str HOST PORT \"/img/greenpln32.png\")\n \"CLIMB\" 	(str HOST PORT \"/img/bluepln32.png\")\n \"LEVEL\" 	(str HOST PORT \"/img/purplepln32.png\")\n \"GROUND\" 	(str HOST PORT \"/img/greypln32.png\")\n \"COUNTER\"	(str HOST PORT \"/img/b.png\")\n \"FOLLOWING\"	(str HOST PORT \"/img/r.png\")\n \"default\"	(str HOST PORT \"/img/info.png\")\n \"landmark\"	(str HOST PORT \"/img/landmark.png\")\n \"edu\"	(str HOST PORT \"/img/edu.png\")\n \"mountain\"	(str HOST PORT \"/img/mountain.png\")\n \"river\"	(str HOST PORT \"/img/river.png\")\n \"railwaystation\" (str HOST PORT \"/img/railwaystation.png\")\n \"event\"	(str HOST PORT \"/img/event.png\")\n \"waterbody\"	(str HOST PORT \"/img/waterbody.png\")\n \"isle\"	(str HOST PORT \"/img/isle.png\")\n \"airport\"	(str HOST PORT \"/img/airport.png\")\n \"city\"	(str HOST PORT \"/img/city.png\")}")
	(title "URL-ICO"))

([FlightPro_Class160010] of  CloFunction

	(source "(GET (str (:command URL) \"info?id=\" id)\n  {:handler (fn [response])\n   :error-handler error-handler})")
	(title "info [id]"))

([FlightPro_Class160011] of  CloFunction

	(source "(println :INIT-CHART)\n(let [m (-> js/L\n              (.map \"map\")\n              (.setView (array 60.3, 25.0) 10)) ;; New York 40.8, -74.0\n        tile1 (-> js/L (.tileLayer \"http://{s}.tile.osm.org/{z}/{x}/{y}.png\"\n                                   #js{:maxZoom 16\n                                       :attribution \"Ru, OpenStreetMap &copy;\"}))\n        tile2 (-> js/L (.tileLayer \"http://{s}.google.com/vt/lyrs=s&x={x}&y={y}&z={z}\"\n                                   #js{:maxZoom 20\n                                       :subdomains #js[\"mt0\" \"mt1\" \"mt2\" \"mt3\"]\n                                       :attribution \"Ru, Google &copy;\"}))\n        tile3 (-> js/L (.tileLayer \"http://{s}.google.com/vt/lyrs=m&x={x}&y={y}&z={z}\"\n                                   #js{:maxZoom 20\n                                       :subdomains #js[\"mt0\" \"mt1\" \"mt2\" \"mt3\"]\n                                       :attribution \"Ru, Google &copy;\"}))\n        tile4 (-> js/L (.tileLayer \"http://{s}.google.com/vt/lyrs=s,h&x={x}&y={y}&z={z}\"\n                                   #js{:maxZoom 20\n                                       :subdomains #js[\"mt0\" \"mt1\" \"mt2\" \"mt3\"]\n                                       :attribution \"Ru, Google &copy;\"}))\n        tile5 (-> js/L (.tileLayer \"http://{s}.google.com/vt/lyrs=p&x={x}&y={y}&z={z}\"\n                                   #js{:maxZoom 20\n                                       :subdomains #js[\"mt0\" \"mt1\" \"mt2\" \"mt3\"]\n                                       :attribution \"Ru, Google &copy;\"}))\n        base (clj->js {\"OpenStreetMap\" tile1\n                       \"Google Satellite\" tile2\n                       \"Google Streets\" tile3\n                       \"Google Hybrid\" tile4\n                       \"Google Terrain\" tile5})\n        ctrl (-> js/L (.control.layers base nil))]\n  (.addTo tile1 m)\n  (.addTo ctrl m)\n  (.on m \"mousemove\"\n         (fn [e] (ctl/mouse-move (.. e -latlng -lat) (.. e -latlng -lng))))\n  (vreset! CHART m))")
	(title "init-chart []"))

([FlightPro_Class160012] of  CloFunction

	(source "(set-html! \"mousepos\" (str \"lat \" (format \"%.4f\" lat) \" lon \" (format \"%.4f\" lng)))")
	(title "mouse-move [lat lng]"))

([FlightPro_Class160018] of  CloFunction

	(source "(close! chn)")
	(title "close-chan [chn]"))

([FlightPro_Class170000] of  CloVar

	(source "(volatile! nil)")
	(title "AIRPORTS"))

([FlightPro_Class170004] of  CloFunction

	(source "(GET (:instructions URL) {:handler instructions-handler\n                       :error-handler error-handler})")
	(title "receive-instructions []"))

([FlightPro_Class170005] of  CloFunction

	(source "(doseq [{:keys [instruct] :as ins} (read-transit response)]\n  ;;(println [:INSTRUCT ins])\n  (condp = instruct\n    :create-update (let [{:keys [id vehicle]} ins]\n	(create-update-vehicle id vehicle))\n    :delete (let [{:keys [id]} ins]\n	(delete-vehicle id))\n    :clear (clear-vehicles)\n    :popup (let [{:keys [id lat lon html time]} ins]\n	(cond\n	  id (popup id html time)\n	  (and lat lon) (popup lat lon html time)))\n    :trail (let [{:keys [id points options time]} ins]\n	(add-trail id points options time))\n    :map-center (let [{:keys [coord]} ins]\n	(map-center coord))\n    :create-placemark (let [{:keys [iname lat lon feature]} ins]\n                      (create-placemark iname lat lon feature))\n    :clear-placemarks (clear-placemarks)\n    :add-link (let [{:keys [ids options]} ins]\n                  (add-link ids options))\n    (println (str \"Unknown instruction: \" [instruct ins]))))")
	(title "instructions-handler [response]"))

([FlightPro_Class180000] of  CloFunction

	(source "(GET (str (:command URL) \"follow?id=\" id)\n  {:handler (fn [response])\n   :error-handler error-handler})")
	(title "follow [id]"))

([FlightPro_Class180001] of  CloNamespace

	(source "(:require\n [goog.string :as gstring]\n [goog.string.format])")
	(title "chart.controls"))

([FlightPro_Class180002] of  CloProgram

	(cloFunctions
		[FlightPro_Class190007]
		[FlightPro_Class200007]
		[FlightPro_Class200010]
		[FlightPro_Class200011]
		[FlightPro_Class200012]
		[FlightPro_Class200013]
		[FlightPro_Class200014]
		[FlightPro_Class480005]
		[FlightPro_Class160000]
		[FlightPro_Class200015]
		[FlightPro_Class200016]
		[FlightPro_Class200002]
		[FlightPro_Class220007]
		[FlightPro_Class200017]
		[FlightPro_Class210008]
		[FlightPro_Class210009]
		[FlightPro_Class210012]
		[FlightPro_Class210013]
		[FlightPro_Class260002])
	(cloNamespace [FlightPro_Class180003])
	(cloVars
		[FlightPro_Class210011]
		[FlightPro_Class210007]
		[FlightPro_Class190001]
		[FlightPro_Class170000]
		[FlightPro_Class220008]
		[FlightPro_Class210010]
		[FlightPro_Class620001])
	(title "FlightRadar24 Client"))

([FlightPro_Class180003] of  CloNamespace

	(source "(:require\n  [org.httpkit.client :as client]\n  [clj-json.core :as json]\n  [async.proc :as asp]\n  [my.flights.move :as mfs])")
	(title "fr24.client"))

([FlightPro_Class190000] of  CloFunction

	(source "(let [crt (current-time)\n       fls (seq @fls)]\n  (println \"t:\" crt \"flights:\" (count fls))\n  (doseq [[k v] fls]\n    (let [alt (fr24/altitude v)\n           [lat lon :as crd] (fr24/coord v)]\n      (rete/assert-frame \n	['Flight\n	'id k\n	'callsign (fr24/callsign v)\n	'coord crd\n	'course (fr24/course v)\n	'speed (fr24/speed v)\n	'altitude alt\n	'time crt\n	'point4d [lat lon (int (/ alt 3.28084)) (iso8601curt)]\n	'age \"NEW\"\n	'status (if (> alt APT-ALT)\n                                     \"LEVEL\"\n                                     \"GROUND\")])))\n  (rete/fire)\n  true)")
	(title "process-flights [fls]"))

([FlightPro_Class190001] of  CloVar

	(source "(volatile! {})")
	(title "FLIGHTS"))

([FlightPro_Class190007] of  CloFunction

	(source "(let [r @(client/get url)\n       s (:status r)]\n  (if (= s 200)\n    (try\n      (json/parse-string (:body r))\n      (catch Exception e\n        (println [:JSON-WEB-DATA :EXCEPTION e])\n        nil))\n    (do\n      (println [:JSON-WEB-DATA :STATUS s])\n      nil)))")
	(title "json-web-data [url]"))

([FlightPro_Class2] of  ClsMain

	(asset-path "js/out")
	(butt-build "Build/cljs.compile/build")
	(cloFunctions
		[FlightPro_Class310006]
		[FlightPro_Class80004]
		[FlightPro_Class130001]
		[FlightPro_Class140020]
		[FlightPro_Class300006]
		[FlightPro_Class140021]
		[FlightPro_Class140022]
		[FlightPro_Class140023]
		[FlightPro_Class140019]
		[FlightPro_Class140024]
		[FlightPro_Class140025]
		[FlightPro_Class90001]
		[FlightPro_Class90002]
		[FlightPro_Class300000]
		[FlightPro_Class320001]
		[FlightPro_Class290000]
		[FlightPro_Class320000]
		[FlightPro_Class80003]
		[FlightPro_Class80001]
		[FlightPro_Class600003]
		[FlightPro_Class70001])
	(cloNamespace [FlightPro_Class60001])
	(cloVars
		[FlightPro_Class70000]
		[FlightPro_Class20005]
		[FlightPro_Class330003]
		[FlightPro_Class330004]
		[FlightPro_Class100025]
		[FlightPro_Class330002]
		[FlightPro_Class80002])
	(css [FlightPro_Class120000])
	(epilogue "(set! (.-onload js/window) (on-load))")
	(html [FlightPro_Class40000])
	(options "{:verbose false}")
	(output-dir "resources/public/js/out")
	(output-to "resources/public/js/main.js")
	(required
		[FlightPro_Class70008]
		[FlightPro_Class50001]
		[FlightPro_Class100023]
		[FlightPro_Class230004]
		[FlightPro_Class390002]
		[FlightPro_Class30001]
		[FlightPro_Class140001])
	(store-in "src/cljs")
	(title "View 3D Client"))

([FlightPro_Class20000] of  CloProgram

	(cloFunctions
		[FlightPro_Class20013]
		[FlightPro_Class20017]
		[FlightPro_Class20014]
		[FlightPro_Class20024]
		[FlightPro_Class20021]
		[FlightPro_Class20022]
		[FlightPro_Class20023])
	(cloNamespace [FlightPro_Class20001])
	(cloVars
		[FlightPro_Class70000]
		[FlightPro_Class20005]
		[FlightPro_Class20002]
		[FlightPro_Class20006]
		[FlightPro_Class20007])
	(title "Pro Server"))

([FlightPro_Class200000] of  CloVar

	(source "{:handler (fn [response])\n :error-handler error-handler}")
	(title "no-handler"))

([FlightPro_Class200001] of  CloFunction

	(source "(asp/pump-in (:instructions  cmd/CHN)\n	{:instruct :delete\n	 :id id})")
	(title "put-off-map [id]"))

([FlightPro_Class200002] of  CloFunction

	(source "(letfn [(mk-airports [rows]\n            (reduce #(assoc %1\n                            (get %2 \"country\")\n                            (assoc (or (get %1 (get %2 \"country\")) {})\n                              (get %2 \"name\") \n                              %2)) \n                        {} \n                        rows))]\n  (or @AIRPORTS\n       (let [aps (json-web-data (:url-airports F24))\n              aps (mk-airports (get aps \"rows\"))]\n         (vreset! AIRPORTS aps)\n         aps)))")
	(title "airports-by-country []"))

([FlightPro_Class200007] of  CloFunction

	(source "(if (string? iod)\n  (@FLIGHTS iod)\n  iod)")
	(title "dat [iod]"))

([FlightPro_Class20001] of  CloNamespace

	(source "(:require [ring.adapter.jetty :as jetty]\n              [ring.util.response :as r]\n              [compojure.core :refer [defroutes GET]]\n              [compojure.handler :as handler]\n              [compojure.route :as route]\n              [cognitect.transit :as t]\n              [async.proc :as asp]\n              [cesium.core :as czs]\n              [pro.commands :as cmd])\n(:import java.io.ByteArrayOutputStream)")
	(title "pro.server"))

([FlightPro_Class200010] of  CloFunction

	(source "(let [dd (dat iod)]\n  [(nth dd 1) (nth dd 2)])")
	(title "coord [iod]"))

([FlightPro_Class200011] of  CloFunction

	(source "(nth (dat iod) 3)")
	(title "course [iod]"))

([FlightPro_Class200012] of  CloFunction

	(source "(nth (dat iod) 5)")
	(title "speed [iod]"))

([FlightPro_Class200013] of  CloFunction

	(source "(nth (dat iod) 4)")
	(title "altitude [iod]"))

([FlightPro_Class200014] of  CloFunction

	(source "(nth (dat iod) 16)")
	(title "callsign [iod]"))

([FlightPro_Class200015] of  CloFunction

	(source "(if-let [flt (filter #(= cs (callsign (second %)))\n                         @FLIGHTS)]\n  (first flt))")
	(title "by-call [cs]"))

([FlightPro_Class200016] of  CloFunction

	(source "(if-let [[id dat] (by-call cs)]\n  id)")
	(title "id-by-call [cs]"))

([FlightPro_Class200017] of  CloFunction

	(source "(if-let [[id dat] (by-call cs)]\n  dat)")
	(title "dat-by-call [cs]"))

([FlightPro_Class20002] of  CloVar

	(source "(str (System/getProperty \"user.dir\") \"/resources/public/\")")
	(title "ROOT"))

([FlightPro_Class20004] of  CloVar

	(source "{:answer (asp/mk-chan)\n :directives (asp/mk-chan)\n :instructions (asp/mk-chan)}")
	(title "CHN"))

([FlightPro_Class20005] of  CloVar

	(source "4444")
	(title "PORT"))

([FlightPro_Class20006] of  CloVar

	(source "nil")
	(title "APP"))

([FlightPro_Class20007] of  CloVar

	(source "nil")
	(title "SERV"))

([FlightPro_Class20010] of  CloFunction

	(source "(loop [[bit ch] (alts!! [chn] :default :none) bits []]\n  (if (= bit :none)\n    bits\n    (recur (alts!! [chn] :default :none) (conj bits bit))))")
	(title "pump-out [chn]"))

([FlightPro_Class20013] of  CloFunction

	(source "(let [baos (ByteArrayOutputStream.)\n        w    (t/writer baos :json)\n        _    (t/write w x)\n        ret  (.toString baos)]\n    (.reset baos)\n    ret)")
	(title "write-transit [x]"))

([FlightPro_Class20014] of  CloFunction

	(source "(-> (r/response (write-transit (deref (future (asp/pump-out chn)))))\n       (r/header \"Access-Control-Allow-Origin\" \"*\"))")
	(title "responseN [chn]"))

([FlightPro_Class20017] of  CloFunction

	(source "(-> (r/response (write-transit (deref (future (asp/one-out chn)))))\n       (r/header \"Access-Control-Allow-Origin\" \"*\"))")
	(title "response1 [chn]"))

([FlightPro_Class20021] of  CloFunction

	(source "(defroutes app-routes\n  (GET \"/\" [] (slurp (str ROOT \"cezium.html\")))\n  (GET \"/chart\" [] (slurp (str ROOT \"leaflet.html\")))\n  (GET \"/czml/\" [] (czs/events))\n  (GET \"/question/\" [& params] (cmd/question params))\n  (GET \"/answer/\" [] (response1 (:answer cmd/CHN)))\n  (GET \"/directives/\" [] (responseN (:directives cmd/CHN)))\n  (GET \"/instructions/\" [] (responseN (:instructions cmd/CHN)))\n  (GET \"/manual-data/\" [& params] (cmd/get-manual-data params))\n  (GET \"/command/:cmd\" [cmd & params] \n    ((resolve (symbol (str \"pro.commands/\" cmd))) params))\n  (route/files \"/\" (do (println [:ROOT-FILES ROOT]) {:root ROOT}))\n  (route/resources \"/\")\n  (route/not-found \"Not Found\"))\n\n(def APP\n  (handler/site app-routes))")
	(title "init-server []"))

([FlightPro_Class20022] of  CloFunction

	(source "([]\n    (start-server PORT))\n([port]\n  (if (nil? APP)\n    (init-server))\n  (def SERV (jetty/run-jetty APP {:port port :join? false})))")
	(title "start-server"))

([FlightPro_Class20023] of  CloFunction

	(source "(when-let [serv SERV]\n  (.stop serv)\n  (def SERV nil)\n  (println \"Server stopped!\"))")
	(title "stop-server []"))

([FlightPro_Class20024] of  CloFunction

	(source "(let [address (str HOST PORT)]\n  (println \"Location:\" address)\n  (when (java.awt.Desktop/isDesktopSupported)\n    (.browse (java.awt.Desktop/getDesktop) (java.net.URI. address))))")
	(title "view3D-in-browser []"))

([FlightPro_Class20025] of  CloProgram

	(cloFunctions
		[FlightPro_Class20029]
		[FlightPro_Class20031]
		[FlightPro_Class20032]
		[FlightPro_Class20033]
		[FlightPro_Class20034]
		[FlightPro_Class20035]
		[FlightPro_Class20036]
		[FlightPro_Class20037])
	(cloNamespace [FlightPro_Class20026])
	(cloVars
		[FlightPro_Class20027]
		[FlightPro_Class20028])
	(title "Cesium Server"))

([FlightPro_Class20026] of  CloNamespace

	(source "(:require\n    [ring.util.response :as r]\n    [async.proc :as asp])\n(:import java.util.Calendar)")
	(title "cesium.core"))

([FlightPro_Class20027] of  CloVar

	(source "(asp/mk-chan)")
	(title "CZ-CHAN"))

([FlightPro_Class20028] of  CloVar

	(source "true")
	(title "DOC-SND"))

([FlightPro_Class20029] of  CloFunction

	(source ";;(println [:CZ-EVT typ dat])\n(asp/pump-in CZ-CHAN [typ (.trim dat)])")
	(title "send-event [typ dat]"))

([FlightPro_Class20031] of  CloFunction

	(source "(let [evt-hr (fn [[typ dat]]\n                   (str \"event: \" typ \"\\ndata: \" dat \"\\n\\n\"))\n       ee (deref (future (asp/pump-out CZ-CHAN)))\n       resp (if (seq ee)\n                 (apply str (map evt-hr ee))\n                 \"\")]\n  (-> (r/response resp)\n         (r/header \"Access-Control-Allow-Origin\" \"*\")\n         (r/header \"Content-Type\" \"text/event-stream;charset=utf-8\")))")
	(title "events []"))

([FlightPro_Class20032] of  CloFunction

	(source "(let [cld (Calendar/getInstance)\n       yar (.get cld Calendar/YEAR )\n       mon (inc (.get cld Calendar/MONTH))\n       dat (.get cld Calendar/DATE)\n       hor (.get cld Calendar/HOUR_OF_DAY)\n       min (.get cld Calendar/MINUTE)\n       sec (.get cld Calendar/SECOND)]\n    (format \"%04d-%02d-%02dT%02d:%02d:%02dZ\" yar mon dat hor min sec))")
	(title "iso8601curt []"))

([FlightPro_Class20033] of  CloFunction

	(source "(let [cld (Calendar/getInstance)\n       mil (.getTimeInMillis cld)\n       _ (.setTimeInMillis cld (+ mil (* sec 1000)))\n        yar (.get cld Calendar/YEAR )\n        mon (inc (.get cld Calendar/MONTH))\n        dat (.get cld Calendar/DATE)\n        hor (.get cld Calendar/HOUR_OF_DAY)\n        min (.get cld Calendar/MINUTE)\n        sec (.get cld Calendar/SECOND)]\n    (format \"%04d-%02d-%02dT%02d:%02d:%02dZ\" yar mon dat hor min sec))")
	(title "iso8601futt [sec]"))

([FlightPro_Class20034] of  CloFunction

	(source "(str \"{\\\"id\\\":\\\"document\\\",\\\"version\\\":\\\"1.0\\\",\\\"clock\\\":{\\\"currentTime\\\":\\\"\" (iso8601futt -16) \"\\\"}}\")")
	(title "doc []"))

([FlightPro_Class20035] of  CloFunction

	(source "(when DOC-SND\n    (send-event \"czml\" (doc))\n    (def DOC-SND false))\n  (let [p (str \"{\\\"id\\\":\\\"\"\n               label\n               \"\\\",\\\"availability\\\":\\\"\"\n               (iso8601curt) \"/\" (iso8601futt span-sec)\n               \"\\\",\\\"label\\\":{\\\"scale\\\":\" \n               scale\n               \" ,\\\"pixelOffset\\\":{\\\"cartesian2\\\":[8, -24]},\\\"text\\\":\\\"\"\n               label\n               \"\\\"},\\\"billboard\\\":{\\\"scale\\\":\"\n               scale\n               \",\\\"image\\\":\\\"\"\n               img-url\n               \"\\\"},\\\"position\\\":{\\\"cartographicDegrees\\\":[\"\n               lon\n               \", \"\n               lat\n               \", \"\n               alt\n               \"]}}\")]\n    (send-event \"czml\" p))")
	(title "location [label scale img-url lat lon alt span-sec]"))

([FlightPro_Class20036] of  CloFunction

	(source "(when DOC-SND\n    (send-event \"czml\" (doc))\n    (def DOC-SND false))\n  (let [p (str \"{\\\"id\\\":\\\"\"\n               label\n               \"\\\",\\\"label\\\":{\\\"scale\\\":\"\n               (/ scale 2)\n               \",\\\"pixelOffset\\\":{\\\"cartesian2\\\":[8, -8]},\\\"text\\\":\\\"\"\n               label\n               \"\\\"},\\\"billboard\\\":{\\\"scale\\\":\"\n               scale\n               \",\\\"image\\\":\\\"\"\n               img-url\n               \"\\\"},\\\"position\\\":{\\\"cartographicDegrees\\\":[\\\"\"\n               tim1\n               \"\\\", \"\n               lon1\n               \", \"\n               lat1\n               \", \"\n               alt1\n               \",\\\"\"\n               tim2\n               \"\\\", \"\n               lon2\n               \", \"\n               lat2\n               \", \"\n               alt2\n               \"]}}\")]\n    (send-event \"czml\" p))")
	(title "leg [label img-url scale [lat1 lon1 alt1 tim1] [lat2 lon2 alt2 tim2]]"))

([FlightPro_Class20037] of  CloFunction

	(source "(let [min-scl 0.25\n       scl (+ min-scl (* (- 1 min-scl) (- 1 (/ dist max-dist))))]\n  (location txt scl \"img/arrdn.png\" lat lon 100 40))")
	(title "point-out [txt [lat lon] dist max-dist]"))

([FlightPro_Class210000] of  CloFunction

	(source "(let [cosphi1 (Math/cos phi1)\n       sinphi1 (Math/sin phi1)\n       cosaz (Math/cos az)\n       sinaz (Math/sin az)\n       sinc (Math/sin c)\n       cosc (Math/cos c)\n       phi2 (Math/asin (+ (* sinphi1 cosc) (* cosphi1 sinc cosaz)))\n       lam2 (+ (Math/atan2 (* sinc sinaz) (- (* cosphi1 cosc) (* sinphi1 sinc cosaz))) lambda0)]\n   [phi2 lam2])")
	(title "spherical-between [^double phi1 ^double lambda0 ^double c ^double az]"))

([FlightPro_Class210001] of  CloFunction

	(source "([params]\n  (clear))\n([]\n  (fr24/stop)\n  (fr24/clear-flights)\n  (rete/reset)\n  (asp/pump-in (:instructions CHN)\n      {:instruct :clear})\n  \"\")")
	(title "clear"))

([FlightPro_Class210007] of  CloVar

	(source "(volatile! [0 0 0 0])")
	(title "BBX"))

([FlightPro_Class210008] of  CloFunction

	(source "(vreset! BBX [n s w e])")
	(title "set-bbx [n s w e]"))

([FlightPro_Class210009] of  CloFunction

	(source "(println [:FLIGHTS-PROCESS \n  (asp/start-process STATUS \n                               #(do (flights-in-bbx) (process-fn FLIGHTS) true)\n                               (:time-out F24))])")
	(title "start [process-fn]"))

([FlightPro_Class210010] of  CloVar

	(source "(volatile! \"START\")")
	(title "STATUS"))

([FlightPro_Class210011] of  CloVar

	(source "{:url-flights \"http://data-live.flightradar24.com/zones/fcgi/feed.js\"\n :url-airports \"http://www.flightradar24.com/_json/airports.php\"\n :url-flight-data \"http://data-live.flightradar24.com/clickhandler/?version=1.5&flight=\"\n :time-out 12000}")
	(title "F24"))

([FlightPro_Class210012] of  CloFunction

	(source "(asp/stop-process STATUS)")
	(title "stop []"))

([FlightPro_Class210013] of  CloFunction

	(source "(asp/running? STATUS)")
	(title "running? []"))

([FlightPro_Class220000] of  CloFunction

	(source "(doseq [veh (vals @VEHICLES)]\n  (asp/stop-process (:movst @veh))\n  (.removeLayer @CHART (:marker @veh)))\n(vreset! VEHICLES {})")
	(title "clear-vehicles []"))

([FlightPro_Class220001] of  Rule

	(lhs "(Flight time ?t\n           callsign ?cs\n           coord ?crd \n           course ?crs\n           speed ?spd\n           altitude ?alt)\n?ob1 (Onboard)\n?ob2 (Onboard callsign ?cs time 0\n	(not= ?cs \"STOP\"))")
	(rhs "(retract ?ob1)\n(modify ?ob2 time ?t)\n(es/go-onboard ?cs ?crd ?crs ?spd ?alt)")
	(salience 0)
	(title "af:SwitchOnboard"))

([FlightPro_Class220007] of  CloFunction

	(source "(json-web-data (str (:url-flight-data F24) id))")
	(title "fl-info [id]"))

([FlightPro_Class220008] of  CloVar

	(source "(volatile! {})")
	(title "FL-INFOS"))

([FlightPro_Class220026] of  CloFunction

	(source "(set-html! \"commands-header\" \"<h4>Commands</h4>\")\n(set-html! \"commands\"\n  \"<select onchange='javascript:chart.client.command(this.value)'>\n   <option value='commands'>Commands</option>\n   <option value='watch-visible'>Watch visible area</option>\n   <option value='intersect'>Intersections</option>\n   <option value='move-to'>Move to Airport</option>\n   <option value='schedule'>Schedule Flight</option>\n   <option value='wikipedia'>Toggle Wikipedia</option>\n   <option value='clear'>Clear</option>\n   </select>\")\n(set-html! \"questions-header\" \"<h4>Questions</h4>\")\n(set-html! \"questions\"\n  \"<select onchange='javascript:chart.client.question(this.value)'>\n   <option value='questions'>Questions</option>\n   <option value='intersect'>Intersections</option>\n   <option value='weather'>Weather</option>\n   </select>\")")
	(title "show-chart-controls []"))

([FlightPro_Class220027] of  CloFunction

	(source "(condp = cmd\n  \"commands\" nil\n  \"watch-visible\" (let [bnd (.getBounds @CHART)\n	          prm (str \"?n=\" (.getNorth bnd)\n		\"&s=\" (.getSouth bnd)\n		\"&w=\" (.getWest bnd)\n		\"&e=\" (.getEast bnd))]\n	       (GET (str (:command URL) cmd prm) no-handler))\n  \"move-to\" (move-to)\n  \"schedule\" (schedule)\n  (GET (str (:command URL) cmd) no-handler))")
	(title "command [cmd]"))

([FlightPro_Class220030] of  CloFunction

	(source "([]\n  (let [[n s w e] @fr24/BBX]\n    (watch-visible {:n n :s s :w w :e e})))\n([params]\n  (println [:WATCH-VISIBLE params])\n  (let [{:keys [n s w e]} params]\n    (clear)\n    (fr24/set-bbx n s w e)\n    (fr24/start process-flights)\n    \"\"))")
	(title "watch-visible"))

([FlightPro_Class230000] of  CloFuncall

	(source "(ru.rules/pp 'Flight)"))

([FlightPro_Class230001] of  CloFunction

	(source "(let [ldiff (- lambda lambda0)\n       cosphi (Math/cos phi)]\n  (Math/atan2 (* cosphi (Math/sin ldiff))\n                      (- (* (Math/cos phi1) (Math/sin phi)) \n                          (* (Math/sin phi1) cosphi (Math/cos ldiff)))))")
	(title "spherical-azimuth [^double phi1 ^double lambda0 ^double phi ^double lambda]"))

([FlightPro_Class230003] of  Rule

	(lhs "(Flight time ?t\n           callsign ?cs\n           coord ?crd \n           course ?crs\n           speed ?spd\n           altitude ?alt)\n?ob (Onboard callsign ?cs time 0)\n(not Onboard)")
	(rhs "(modify ?ob time ?t)\n(es/go-onboard ?cs ?crd ?crs ?spd ?alt)")
	(salience 0)
	(title "af:StartOnboard"))

([FlightPro_Class230004] of  ClsRequired

	(cloFunctions
		[FlightPro_Class210000]
		[FlightPro_Class240006]
		[FlightPro_Class230001]
		[FlightPro_Class250002]
		[FlightPro_Class250003]
		[FlightPro_Class250004]
		[FlightPro_Class250005]
		[FlightPro_Class250006]
		[FlightPro_Class250007]
		[FlightPro_Class250008]
		[FlightPro_Class250009]
		[FlightPro_Class390001]
		[FlightPro_Class10002]
		[FlightPro_Class730004])
	(cloNamespace [FlightPro_Class240005])
	(title "Geo"))

([FlightPro_Class230005] of  CloFunction

	(source "(if (= @fr24/STATUS \"RUN\")\n  (watch-visible))")
	(title "update-watch-area []"))

([FlightPro_Class240000] of  CloVar

	(source "(/ Math.PI 10800)")
	(title "NMRAD"))

([FlightPro_Class240001] of  CloFunction

	(source "(let [car @carr]\n  (set-turn-point carr (:coord car) crs (:speed car))\n  (vswap! carr assoc :course crs))")
	(title "set-course [carr crs]"))

([FlightPro_Class240002] of  CloFunction

	(source "(let [car @carr]\n  (set-turn-point carr (:coord car) (:course car) spd)\n  (vswap! carr assoc :speed spd))")
	(title "set-speed [carr spd]"))

([FlightPro_Class240005] of  CloNamespace

	(title "calc.geo"))

([FlightPro_Class240006] of  CloFunction

	(source "(let [pdiff (Math/sin (/ (- phi phi1) 2.0))\n       ldiff (Math/sin (/ (- lambda lambda0) 2.0))\n       rval (Math/sqrt (+ (* pdiff pdiff) (* (Math/cos phi1) (Math/cos phi) ldiff ldiff)))]\n   (* 2.0 (Math/asin rval)))")
	(title "spherical-distance [^double phi1 ^double lambda0 ^double phi ^double lambda]"))

([FlightPro_Class250000] of  CloFunction

	(source ";; Calculates end point of turn\n(if (not= crs1 crs2)\n  (let [step (* crs-stp crs-acl)\n         tioh (/ crs-tio 3600000)]\n    (loop [crs crs1 point ipoint]\n      (if (< (Math/abs (- crs crs2)) step)\n        point\n        (recur (geo/norm-crs (course-closer crs crs2 step)) \n                  (geo/future-pos point crs spd tioh)))))\n  ipoint)")
	(title "turn-end-point [ipoint spd crs1 [crs2 crs-acl] crs-stp crs-tio]"))

([FlightPro_Class250001] of  CloFunction

	(source "(let [lnd (:landing spp)\n       tcrd (:finish-crd spp)\n       crs (:finish-run spp)		;; landing course\n       rcrs (geo/rev-bear crs)		;; reverse landing course\n       rgen (geo/rev-bear (:general-crs spp))	;; reverse general course\n       [x crsa] (:final-turn-course lnd)	;; landing course accel\n       [spd y spda] (:speed lnd)		;; final turn speed\n       omd (:outer-marker-distance lnd)\n       rudd (:rudder @mfs/CARRIER)\n       ftcrd (mfs/turn-end-point 	\n	(geo/future-pos tcrd rcrs omd 1) ;; outer-marker coordinates\n	spd \n	rcrs	\n	[rgen crsa] \n	(:step rudd) \n	(:time-out rudd))] \n    (merge lnd  {:final-turn-crd	ftcrd\n	:landing-crs	[crs crsa] 	\n     	:lannding-spd	[spd spda]}))")
	(title "landing-plan [spp]"))

([FlightPro_Class250002] of  CloFunction

	(source "(let [phi (Math/toRadians lat)\n       lam (Math/toRadians lon)\n       dir (Math/toRadians crs)\n       way (* spd tim)\n       way (Math/toRadians (/ way 60))\n       [phi2 lam2] (spherical-between phi lam way dir)]\n   [(Math/toDegrees phi2) (Math/toDegrees lam2)])")
	(title "future-pos [[lat lon] crs spd tim]"))

([FlightPro_Class250003] of  CloFunction

	(source "(let [fi1 (Math/toRadians la1)\n       ld1 (Math/toRadians lo1)\n       fi2 (Math/toRadians la2)\n       ld2 (Math/toRadians lo2)\n       rad (spherical-distance fi1 ld1 fi2 ld2)]\n   (* (Math/toDegrees rad) 60))")
	(title "distance-nm [[la1 lo1] [la2 lo2]]"))

([FlightPro_Class250004] of  CloFunction

	(source "(let [fi1 (Math/toRadians la1)\n       ld1 (Math/toRadians lo1)\n       fi2 (Math/toRadians la2)\n       ld2 (Math/toRadians lo2)\n       rad (spherical-azimuth fi1 ld1 fi2 ld2)\n       deg (Math/toDegrees rad)]\n  (cond\n    (< deg 0) (+ deg 360.0)\n    (> deg 360.0) (- deg 360.0)\n    true deg))")
	(title "bear-deg [[la1 lo1] [la2 lo2]]"))

([FlightPro_Class250005] of  CloFunction

	(source "(let [denom (- (* (- y4 y3) (- x2 x1)) (* (- x4 x3) (- y2 y1)))]\n  (if (not (== denom 0.0))\n      (let [ua (/ (- (* (- x4 x3) (- y1 y3)) (* (- y4 y3) (- x1 x3))) denom)\n             ub (/ (- (* (- x2 x1) (- y1 y3)) (* (- y2 y1) (- x1 x3))) denom)]\n        (if (and (<= 0.0 ua 1.0) (<= 0.0 ub 1.0))\n            [(+ y1 (* ua (- y2 y1))) (+ x1 (* ua (- x2 x1)))]))))")
	(title "seg-intersect [x1 y1 x2 y2 x3 y3 x4 y4]"))

([FlightPro_Class250006] of  CloFunction

	(source "(let [[la3 lo3] (future-pos [la1 lo1] crs1 spd1 tim)\n       [la4 lo4] (future-pos [la2 lo2] crs2 spd2 tim)]\n   (seg-intersect lo1 la1 lo3 la3 lo2 la2 lo4 la4))")
	(title "future-intersect [[la1 lo1] crs1 spd1 [la2 lo2] crs2 spd2 tim]"))

([FlightPro_Class250007] of  CloFunction

	(source "(let [rb (+ b 180)]\n  (if (> rb 360) (- rb 360) rb))")
	(title "rev-bear [b]"))

([FlightPro_Class250008] of  CloFunction

	(source "(let [bea (bear-deg [lat1 lon1] [lat2 lon2])\n       ca1 (- bea crs)]\n  (cond\n    (> ca1 180) (- ca1 360)\n    (< ca1 -180) (+ ca1 360)\n    true ca1))")
	(title "course-angle [crs [lat1 lon1] [lat2 lon2]]"))

([FlightPro_Class250009] of  CloFunction

	(source "(let [ca (course-angle crs crd1 crd2)]\n   (or (> ca 90) (< ca -90)))")
	(title "abaft [crs crd1 crd2]"))

([FlightPro_Class250010] of  Rule

	(lhs "?ob (Onboard time ?t0 callsign ?cs)\n(Flight age \"CURRENT\" time ?t1 callsign ?cs\n	(<= ?t0 ?t1))\n(Flight age \"NEW\"\n           callsign ?cs\n           course ?crs2 \n           coord ?crd2 \n           speed ?spd2 \n           altitude ?alt2\n           status ?s2\n           time ?t2)")
	(rhs "(modify ?ob time ?t2)\n(es/fly-onboard-to ?cs ?crs2 ?crd2 ?spd2 ?alt2 (- ?t2 ?t1))")
	(salience 0)
	(title "af:FlyOnboardTo"))

([FlightPro_Class250011] of  CloFunction

	(source "(if (not ONB-PAUSE)\n  (let [crd3 (geo/future-pos crd2 crs2 spd2 (/ per 3600))\n         per3 (* 2 per)]\n    (asp/pump-in (:directives cmd/CHN)\n	{:directive :fly-onboard\n	 :callsign csn\n	 :vehicle {\n	   :coord crd2\n	   :altitude (if (= alt2 0) cmd/APT-ALT alt2)\n	   :speed spd2\n	   :course crs2}\n	 :period per3})))")
	(title "fly-onboard-to [csn crs2 crd2 spd2 alt2 per]"))

([FlightPro_Class260000] of  CloFunction

	(source "(println \"Loading Clojure Programs...\")\n(if-let [wps (ClojureTab/findAnnotated (cls-instances \"WorkingPrograms\") nil)]\n  (loop [i 1 pins (svs wps \"cloPrograms\")]\n    (when (seq pins)\n      (println (str \" 1.\" i \" \" (sv (first pins) \"title\") \" = \" (ClojureTab/loadProgram (first pins)) ))\n      (recur (inc i) (rest pins))))\n  (println \"  Annotated instance of WorkingPrograms not found!\"))\n(println\"Starting Pro Server...\")\n(eval '(pro.server/start-server))\n(println\"Starting My Flights Movement...\")\n(eval '(my.flights.move/start-movement))\n(println\"Starting Expert System...\")\n(eval '(ru.rules/run-engine \"Flights Pro Run\"))\n(println\"Go Initial Airport...\")\n(eval '(pro.commands/go-initial-airport))")
	(title "clojure-work []"))

([FlightPro_Class260001] of  CloFuncall

	(source "(pro.commands/follow {:id \"R6\"})"))

([FlightPro_Class260002] of  CloFunction

	(source "(vreset! FLIGHTS {})")
	(title "clear-flights []"))

([FlightPro_Class260003] of  CloFunction

	(source "(def ONB-PAUSE true)\n(asp/delayer #(def ONB-PAUSE false) 8000)\n(asp/pump-in (:directives cmd/CHN)\n	{:directive :carrier\n	 :callsign csg\n	 :vehicle {:coord crd\n	               :course crs\n	               :speed spd\n	               :altitude (if (= alt 0) cmd/APT-ALT alt)}})")
	(title "go-onboard [csg crd crs spd alt]"))

([FlightPro_Class270000] of  CloFunction

	(source "(println [:CMD-ONBOARD params])\n(let [cls (:callsign params)]\n  (condp = cls\n    \"manual\" (do (asp/pump-in (:directives CHN)\n	{:directive :manual})\n                     (rete/assert-frame ['Onboard 'callsign \"STOP\"]))\n   \"select\" (let [lst (vec (sort (map fr24/callsign (keys @fr24/FLIGHTS))))\n                       lst (filter #(not (empty? %)) lst)]\n                  (asp/pump-in (:directives CHN)\n	{:directive :callsigns\n	 :list lst}))\n    (rete/assert-frame ['Onboard 'callsign cls 'time 0])))\n\"\"")
	(title "onboard [params]"))

([FlightPro_Class270001] of  CloFunction

	(source "(set-html! \"onboard-fld\" \n  (str \"<select onchange='javascript:view3d.client.onboard(this.value)' style='width:96px'>\"\n          (if (empty? list)\n            (str \"<option value='callsign'>callsign</option>\n                   <option value='select'>select</option>\")\n            (str \"<option value='select'>select</option>\"\n              (apply str (for [e list]\n                                (str \"<option value='\" e \"'>\" e \"</option>\")))))\n        \"</select>\"))")
	(title "callsigns [list]"))

([FlightPro_Class270002] of  Rule

	(lhs "?fp (FlightPlan id ?id\n	status \"CRUISE\"\n	vertical-status \"OFF\"\n	cruise ?cru)")
	(rhs "(println [:ClimbStart ?id ?cru])\n(my.flights.move/control ?id my.flights.move/elevate (:altitude ?cru))\n(my.flights.move/control ?id my.flights.move/accel (:speed ?cru))\n(modify ?fp vertical-status \"CLIMB\")")
	(salience 0)
	(title "mf:ClimbStart"))

([FlightPro_Class270003] of  Rule

	(lhs "?fp (FlightPlan id ?id\n	vertical-status \"CLIMB\"\n	cruise ?cru)\n(Flight age \"CURRENT\" \n	id ?id\n	altitude ?alt\n	speed ?spd\n	((= ?alt (:altitude ?cru))\n	 (= ?spd (:spdeed ?cru))))")
	(rhs "(println [:ClimbDone ?id ?alt])\n(modify ?fp vertical-status \"LEVEL\")")
	(salience 0)
	(title "mf:ClimbDone"))

([FlightPro_Class280000] of  CloProgram

	(cloFunctions
		[FlightPro_Class620010]
		[FlightPro_Class290006]
		[FlightPro_Class200001]
		[FlightPro_Class250011]
		[FlightPro_Class260003]
		[FlightPro_Class90005]
		[FlightPro_Class490000]
		[FlightPro_Class530000]
		[FlightPro_Class500000]
		[FlightPro_Class520001]
		[FlightPro_Class620004]
		[FlightPro_Class620003]
		[FlightPro_Class490002]
		[FlightPro_Class540017]
		[FlightPro_Class250001]
		[FlightPro_Class690004]
		[FlightPro_Class690009]
		[FlightPro_Class690010])
	(cloNamespace [FlightPro_Class280001])
	(cloVars
		[FlightPro_Class70000]
		[FlightPro_Class20005]
		[FlightPro_Class160009]
		[FlightPro_Class550000]
		[FlightPro_Class590001]
		[FlightPro_Class690005]
		[FlightPro_Class690006])
	(title "ES Functions"))

([FlightPro_Class280001] of  CloNamespace

	(source "(:use protege.core)\n(:require\n  [pro.commands :as cmd]\n  [async.proc :as asp]\n  [cesium.core :as czs]\n  [calc.core :as calc]\n  [calc.geo :as geo]\n  [fr24.client :as fr24]\n  [my.flights.move :as mfs])\n(:import\n  java.util.Calendar)")
	(title "es"))

([FlightPro_Class280002] of  CloFuncall

	(source "(my.flights.move/rem-my-flight \"R1\")"))

([FlightPro_Class280003] of  CloFuncall

	(source "(my.flights.move/rem-my-flight \"R6\")"))

([FlightPro_Class280004] of  CloFuncall

	(source "(my.flights.move/rem-my-flight \"R881\")"))

([FlightPro_Class290000] of  CloFunction

	(source "([carr]\n  (camera-move carr (/ (:camera TIO) 1000)))\n([carr period]\n  (let [car @carr\n         [lat lon] (:coord car)\n         crs (:course car)\n         alt (int (/ (:altitude car) 3.28084))\n         alt (if (< alt 20) 20 alt)]\n      (czm/fly-to lat lon alt crs period))\n  true)")
	(title "camera-move"))

([FlightPro_Class290001] of  CloFunction

	(source "(println [:CMD-FOLLOW params])\n(let [id (:id params)]\n  (if (fr24/dat id)\n    (rete/assert-frame ['Follow 'id id 'time 0])))")
	(title "follow [params]"))

([FlightPro_Class290003] of  %3AINSTANCE-ANNOTATION

	(%3ACREATION-TIMESTAMP "2016.11.24 18:22:25.919 MSK")
	(%3ACREATOR "ru"))

([FlightPro_Class290004] of  %3AINSTANCE-ANNOTATION

	(%3AANNOTATED-INSTANCE [FlightPro_Class100000])
	(%3ACREATION-TIMESTAMP "2016.11.24 18:24:16.125 MSK")
	(%3ACREATOR "ru"))

([FlightPro_Class290005] of  Rule

	(lhs "(Flight id ?id\n           coord ?crd\n           course ?crs\n           speed ?spd\n           status ?sts\n           age \"NEW\")")
	(rhs "(es/put-on-map ?id ?crd ?crs ?spd ?sts)")
	(salience 0)
	(title "af:PutFlightOnMap"))

([FlightPro_Class290006] of  CloFunction

	(source "(asp/pump-in (:instructions  cmd/CHN)\n	{:instruct :create-update\n	 :id id\n	 :vehicle {:coord crd\n	               :course crs\n	               :speed spd\n	               :status sts}})")
	(title "put-on-map [id crd crs spd sts]"))

([FlightPro_Class3] of  CloVar

	(source "(js/Cesium.CesiumTerrainProvider.\n  #js{:url \"//assets.agi.com/stk-terrain/world\"\n        :requestWaterMask false\n        :requestVertexNormals false})")
	(title "TERR-PROV"))

([FlightPro_Class30000] of  CloFunction

	(source "(letfn [(proc-fn [cr]\n                      (let [c @cr\n                             g (get c gear)\n                             target (:target g)\n                             step (* (:accel g) (:step g))]\n                        (if (calc/approx= (param c) target step)\n                            (do (param-fn cr target)\n                                  false)\n                            (do (param-fn cr (closer (param c) target step))\n                                  true))))]\n  (vswap! carr assoc-in [gear :eqz-status] (volatile! \"STOP\"))\n  (let [g (get @carr gear)]\n    (asp/start-process (:eqz-status g) \n                                   #(proc-fn carr) \n                                   (:time-out g))))")
	(title "equalize [carr gear param-fn param closer]"))

([FlightPro_Class300000] of  CloFunction

	(source "(if (= (:mode @CARRIER) \"MANUAL\")\n  (let [car @CARRIER\n         lat (num-val lat)\n         [_ lon] (:coord car)]\n    (mov/set-turn-point CARRIER [lat lon] (:course car) (:speed car))))")
	(title "latitude [lat]"))

([FlightPro_Class300001] of  RuleSet

	(rules
		[FlightPro_Class690000]
		[FlightPro_Class690007]
		[FlightPro_Class730002])
	(templates [Question])
	(title "Questions"))

([FlightPro_Class300006] of  CloFunction

	(source "(if (not= callsign (:mode @CARRIER))\n  (vswap! CARRIER assoc :mode callsign))\n(let [old-crs (:course @CARRIER)\n       new-crs (:course vehicle)]\n  (vswap! CARRIER merge vehicle)\n  (mov/set-turn-point CARRIER)\n  (if (not= new-crs old-crs)\n    (turn-and-bank CARRIER new-crs)))")
	(title "carrier [callsign vehicle]"))

([FlightPro_Class30001] of  ClsRequired

	(cloFunctions
		[FlightPro_Class30007]
		[FlightPro_Class30011]
		[FlightPro_Class30000]
		[FlightPro_Class130004]
		[FlightPro_Class110000])
	(cloNamespace [FlightPro_Class30002])
	(title "Dynamic"))

([FlightPro_Class30002] of  CloNamespace

	(source "(:require\n  [csasync.proc :as asp]\n  [calc.core :as calc]\n  [calc.geo :as geo])")
	(title "calc.dynamic"))

([FlightPro_Class30003] of  CloFunction

	(source "(float (+ y1 (/ (* (- y2 y1) (- x x1)) (- x2 x1))))")
	(title "linint [x [x1 y1] [x2 y2]]"))

([FlightPro_Class30004] of  CloFunction

	(source ";; left and right borders in table are exclusive\n(let [[lo hi] (split-with #(< (first %) x) table)]\n  (if (seq lo)\n    (if (seq hi)\n      (linint x (last lo) (first hi))\n      [:UB (second (last table))])\n    [:LB (second (first table))]))")
	(title "tabfun [x table]"))

([FlightPro_Class30005] of  CloFunction

	(source ";; inverse function, only for monotone(!!!) functions\n(tabfun y (map #(vector (second %)(first %)) table))")
	(title "i-mono-tabfun [y table]"))

([FlightPro_Class30006] of  CloFunction

	(source "(let [res (tabfun x table)]\n  (if (vector? res) (second res) res))")
	(title "smooth-tabfun [x table]"))

([FlightPro_Class30007] of  CloFunction

	(source "(cond\n (< from to) (+ from step)\n (> from to) (- from step)\n true to)")
	(title "step-closer [from to step]"))

([FlightPro_Class30011] of  CloFunction

	(source "(let [dif (- to from)]\n  (cond \n    (> dif 0)\n      (if (<= dif 180)\n        (+ from step)\n        (geo/norm-crs (- from step)))\n    (< dif 0) \n      (if (>= dif -180)\n        (- from step)\n        (geo/norm-crs (+ from step)))\n    true to))")
	(title "course-closer [from to step]"))

([FlightPro_Class30025] of  CloFunction

	(source "(cond\n  (> x y) (< (- x y) eps)\n  (< x y) (< (- y x) eps)\n  true true)")
	(title "approx= [x y eps]"))

([FlightPro_Class30026] of  CloFunction

	(source "([carr course]\n  (vswap! carr assoc-in [:rudder :target] course)\n  (equalize carr :rudder set-course :course course-closer))\n([carr course accel]\n  (vswap! carr assoc-in [:rudder :accel] accel)\n  (turn carr course))")
	(title "turn"))

([FlightPro_Class30027] of  CloFunction

	(source "([carr speed]\n  (vswap! carr assoc-in [:propeller :target] speed)\n  (equalize carr :propeller set-speed :speed step-closer))\n([carr speed acl]\n  (vswap! carr assoc-in [:propeller :accel] acl)\n  (accel carr speed))")
	(title "accel"))

([FlightPro_Class310000] of  CloFunction

	(source "(println [:CMD-INFO params])\n(let [id (:id params)]\n  (if (.startsWith id \"pm\")\n    (when-let [dati (.getInstance *kb* (.substring id 2))]\n      (exd/point-out-place dati @WIKI)\n      (asp/pump-in (:instructions CHN) \n        (exd/placemark-popup-instruct dati)))\n    (let [inf (or (get @MY-INFOS id) (fr24/fl-info id))\n           cal (if-let[d (fr24/dat id)]\n                   (fr24/callsign d)\n                   id)]\n      (if inf\n        (let [apt (inf \"airport\")\n               acr (inf \"aircraft\")\n               tim (inf \"time\")\n               img (get (first (get-in acr [\"images\" \"thumbnails\"])) \"src\")\n               [lat lon] (fr24/coord id)\n               dat   [[\"from\" (or (get-in apt [\"origin\" \"name\"]) \"-\")]\n	[\"to\" (or (get-in apt [\"destination\" \"name\"]) \"-\")]\n	[\"airline\" (or (get-in inf [\"airline\" \"short\"]) \"-\")]\n	[\"real-departure\" (or (get-in tim [\"real\" \"departure\"]) \"-\")]\n	[\"scheduled-arrival\" (or (get-in tim [\"scheduled\" \"arrival\"]) \"-\")]\n	[\"aircraft\" (or (get-in acr [\"model\" \"text\"]) \"-\")]\n	[\"latitude\" (or lat \"-\")]\n	[\"longitude\" (or lon \"-\")]\n	[\"course\" (or (fr24/course id) \"-\")]\n	[\"speed\" (or (fr24/speed id) \"-\")]\n	[\"altitude\" (or (fr24/altitude id) \"-\")]\n	[(str \"<input type='button' style='color:purple' value='Trail'\n		onclick='chart.client.trail(\\\"\" id \"\\\")' >\")\n	 (str \"<input type='button' style='color:blue' value='Follow'\n		onclick='chart.client.follow(\\\"\" id \"\\\")' >\")]\n	[\"\"\n	 \"<input type='button' style='color:red' value='Stop'\n		onclick='chart.client.stopfollow()' >\"]]\n                       htm (make-info-html cal img dat)]\n          (asp/pump-in (:instructions CHN)\n            {:instruct :popup\n             :id (:id params)\n             :html htm\n             :time (:popup TIM)}))))))\n\"\"")
	(title "info [params]"))

([FlightPro_Class310001] of  CloVar

	(source "{:popup 30000\n :trail 30000}")
	(title "TIM"))

([FlightPro_Class310002] of  CloFunction

	(source "([id html time]\n  (let [vmp (@VEHICLES id)\n         [lat lon] (:coord @vmp)]\n    (popup lat lon html time)))\n([lat lon html time]\n  (let [pop (-> js/L (.popup {:maxWidth 600 :maxHeight 800 })\n                (.setLatLng (array lat lon))\n                (.setContent html))]\n    (.addLayer @CHART pop)\n    (if (> time 0)\n        (asp/delayer #(.removeLayer @CHART pop) time))))")
	(title "popup"))

([FlightPro_Class310003] of  CloFunction

	(source "(go (<! (timeout time))\n  (func))")
	(title "delayer [func time]"))

([FlightPro_Class310005] of  CloFunction

	(source "(let [head (str \"<h3>\" call \"</h3>\")\n       itag (str \"<img src=\\\"\" img \"\\\">\")\n       rows (for [[k v] dat]\n                 (str \"<tr><td>\" k \"</td><td>\" v \"</td></tr>\"))\n      rows (apply str rows)]\n  (str head itag \"<table>\" rows \"</table>\"))")
	(title "make-info-html [call img dat]"))

([FlightPro_Class310006] of  CloFunction

	(source "(if (number? x) x (rdr/read-string x))")
	(title "num-val [x]"))

([FlightPro_Class320000] of  CloFunction

	(source "{:coord   [(num-val (ctl/get-value \"input-lat\"))\n               (num-val (ctl/get-value \"input-lon\"))]\n :course   (num-val (ctl/get-value \"input-crs\"))\n :speed    (num-val (ctl/get-value \"input-spd\"))\n :altitude (num-val (ctl/get-value \"input-alt\"))}")
	(title "manual-vehicle []"))

([FlightPro_Class320001] of  CloFunction

	(source "(if (= (:mode @CARRIER) \"MANUAL\")\n  (let [car @CARRIER\n         lon (num-val lon)\n         [lat _] (:coord car)]\n    (mov/set-turn-point CARRIER [lat lon] (:course car) (:speed car))))")
	(title "longitude [lon]"))

([FlightPro_Class320010] of  RuleSet

	(rules
		[FlightPro_Class320011]
		[FlightPro_Class410002]
		[FlightPro_Class410001]
		[FlightPro_Class430010]
		[FlightPro_Class290005]
		[FlightPro_Class320013]
		[FlightPro_Class320012]
		[FlightPro_Class320013]
		[FlightPro_Class350001]
		[FlightPro_Class370003]
		[FlightPro_Class230003]
		[FlightPro_Class370002]
		[FlightPro_Class220001]
		[FlightPro_Class250010]
		[FlightPro_Class390000])
	(templates
		[Flight]
		[Onboard]
		[Follow])
	(title "All Flights"))

([FlightPro_Class320011] of  Rule

	(lhs "?of1 (Flight id ?id age \"OLD\" time ?t1)\n?of2 (Flight id ?id age \"OLD\" time ?t2\n	(> ?t2 ?t1))")
	(rhs "(retract ?of1)")
	(salience 1)
	(title "af:FlightHistory3"))

([FlightPro_Class320012] of  Rule

	(lhs "(Flight id ?id altitude ?a1 age \"OLD\")\n(Flight id ?id altitude ?a2 age \"CURRENT\")\n?fl (Flight id ?id altitude ?a3 age \"NEW\"\n	status ?s3 \n	coord ?crd3 \n	course ?crs3\n	speed ?spd3\n	((not= ?s3 \"DESCEND\")\n	 (> ?a1 ?a2 ?a3)))")
	(rhs "(modify ?fl status \"DESCEND\")\n(es/put-on-map ?id ?crd3 ?crs3 ?spd3 ?s3)")
	(salience 0)
	(title "af:DescendMark"))

([FlightPro_Class320013] of  Rule

	(lhs "(Flight id ?id altitude ?a1 age \"OLD\")\n(Flight id ?id altitude ?a2 age \"CURRENT\")\n?fl (Flight id ?id altitude ?a3 age \"NEW\"\n	status ?s3 \n	coord ?crd3 \n	course ?crs3\n	speed ?spd3\n	((not= ?s3 \"CLIMB\")\n	 (< ?a1 ?a2 ?a3)))")
	(rhs "(modify ?fl status \"CLIMB\")\n(es/put-on-map ?id ?crd3 ?crs3 ?spd3 ?s3)")
	(salience 0)
	(title "af:ClimbMark"))

([FlightPro_Class320014] of  Run

	(butt-ass-inss "Assert Instances/ru.rules/ass-inss")
	(butt-fire "Fire/ru.rules/fire-all-rules")
	(butt-run "Run/ru.rules/run-engine")
	(butt-step "Step/ru.rules/step-engine")
	(mode run)
	(rule-sets
		[FlightPro_Class320010]
		[FlightPro_Class410000]
		[FlightPro_Class300001])
	(steps 1)
	(title "Flights Pro Run"))

([FlightPro_Class320015] of  %3AINSTANCE-ANNOTATION

	(%3AANNOTATED-INSTANCE [FlightPro_Class320014])
	(%3ACREATION-TIMESTAMP "2016.11.23 17:10:20.165 MSK")
	(%3ACREATOR "ru"))

([FlightPro_Class320016] of  CloFunction

	(source "(let [cal @CALLS\n       onb @ONBOARD]\n  (doseq [[k v] (seq @fls)]\n    (let [cls (fr24/callsign v)\n           veh {:coord (fr24/coord v)\n                   :course (fr24/course v)\n                   :speed (fr24/speed v)\n                   :altitude (fr24/altitude v)\n                   :status \"LEVEL\"}]\n      (if (= cls onb)\n        (asp/pump-in DIR-CHN\n          {:directive :carrier\n           :callsign cls\n           :vehicle veh}))\n      (asp/pump-in INS-CHN\n        {:instruct :create-update\n         :id k\n         :vehicle veh})))\n  (if (and (empty? cal) (= onb \"select\"))\n    (let [cal (map fr24/callsign (keys @fls))]\n      (vreset! CALLS cal)\n      (async.proc/pump-in DIR-CHN \n        {:directive :callsigns :list cal}))))")
	(title "process-flights0 [fls]"))

([FlightPro_Class320022] of  CloFunction

	(source "(int (/ (System/currentTimeMillis) 1000))")
	(title "current-time []"))

([FlightPro_Class330000] of  Rule

	(lhs "?fp (FlightPlan id ?id\n	status \"INITIAL-TURN\"\n	takeoff ?tof)\n(Flight age \"CURRENT\" \n	id ?id\n	course ?crs\n	(= ?crs (first (:to-crs ?tof))))")
	(rhs "(println [:TakeoffDone ?id ?crs])\n(modify ?fp takeoff \"DONE\"\n	status \"CRUISE\")")
	(salience 0)
	(title "mf:TakeoffDone"))

([FlightPro_Class330001] of  Rule

	(lhs "?fp (FlightPlan id ?id\n	start-time ?stm\n	takeoff ?tof\n	((number? ?stm)\n	 (map? ?tof)))\n(Flight age \"CURRENT\"\n	id ?id\n	time ?tim\n	(>= ?tim ?stm))")
	(rhs "(println [:TakeoffStart ?id ?tof])\n(my.flights.move/control ?id my.flights.move/elevate (:altitude ?tof))\n(my.flights.move/control ?id my.flights.move/accel (:speed ?tof))\n(modify ?fp start-time \"PASSED\"\n	status \"TAKEOFF\")")
	(salience 0)
	(title "mf:TakeoffStart"))

([FlightPro_Class330002] of  CloVar

	(source "(volatile! \"STOP\")")
	(title "CAM-PROC"))

([FlightPro_Class330003] of  CloVar

	(source "{:base (str HOST PORT \"/\")\n :chart (str HOST PORT \"/chart/\")\n :directives (str HOST PORT \"/directives/\")\n :instructions (str HOST PORT \"/instructions/\")\n :command (str HOST PORT \"/command/\")\n :question (str HOST PORT \"/question/\")\n :answer (str HOST PORT \"/answer/\")\n :manual-data (str HOST PORT \"/manual-data/\")}")
	(title "URL"))

([FlightPro_Class330004] of  CloVar

	(source "{:carrier 1000\n :camera 2222\n :directives 911\n :instructions 979\n :vehicles 200\n :display 831\n :manual-data 6000\n :ext-data 15000\n :ext-data-popup 60000}")
	(title "TIO"))

([FlightPro_Class330005] of  CloFunction

	(source "(.-innerHTML (by-id id))")
	(title "get-html [id]"))

([FlightPro_Class330006] of  CloFunction

	(source "(.-value (by-id id))")
	(title "get-value [id]"))

([FlightPro_Class340000] of  CloFunction

	(source "(println [:CMD-TERRAIN params])\n(println \"Terrain: \" TERRAIN)\nTERRAIN")
	(title "terrain [params]"))

([FlightPro_Class340002] of  Rule

	(lhs "?sd (Schedule callsign ?csn\n	time ?tim\n	from ?frm\n	to ?to)")
	(rhs "(if-let [stm (es/start-time ?tim)]\n  (let [spp (es/specific-plan es/GENPLAN ?frm ?to)]\n     (my.flights.move/add-my-flight \n	?csn ?csn (:start-crd spp) (:start-run spp) 0 (:start-alt spp))\n     (asser FlightPlan id ?csn\n	start-time stm\n	spec-plan spp\n	takeoff (es/takeoff-plan spp)\n	cruise (es/cruise-plan spp)\n	landing (es/landing-plan spp)\n	status \"READY\"\n	vertical-status \"OFF\")\n     (pro.commands/set-my-flight-info ?csn ?tim ?frm ?to)))")
	(salience 0)
	(title "mf:FlightPlan"))

([FlightPro_Class350000] of  CloFunction

	(source "(let [pts (if (not (empty? trail))\n               trail\n               (if-let [inf (fr24/fl-info id)]\n                   (mapcat #(list (% \"lat\") (% \"lng\") (% \"alt\")) (inf \"trail\"))))]\n  (if pts\n    (asp/pump-in (:instructions CHN)\n        {:instruct :trail\n         :id id\n         :points pts\n         :options {:weight 3\n                        :color \"purple\"}\n         :time (:trail TIM)})))")
	(title "do-trail [id trail]"))

([FlightPro_Class350001] of  Rule

	(lhs "?f (Follow id ?id time ?t0)\n(Flight id ?id coord ?crd1 altitude ?alt1 age \"OLD\" time ?t1\n	(<= ?t0 ?t1))\n(Flight id ?id coord ?crd2 altitude ?alt2 age \"CURRENT\")\n(Flight id ?id coord ?crd3 altitude ?alt3 age \"NEW\" time ?t3 callsign ?cs)")
	(rhs "(println [:FOLLOW ?cs])\n(let [[lat1 lon1] ?crd1\n       [lat2 lon2] ?crd2\n       [lat3 lon3] ?crd3]\n  (pro.commands/set-map-view ?crd3)\n  (pro.commands/do-trail ?id \n	[lat3 lon3 ?alt3\n	 lat2 lon2 ?alt2\n	 lat1 lon1 ?alt1])\n  (modify ?f time ?t3))")
	(salience 0)
	(title "af:FollowFlight"))

([FlightPro_Class360000] of  CloFunction

	(source "(let [ops (clj->js options)\n       pts (map #(js/L.LatLng. (first %) (second %)) (partition 3 points))\n       pts (clj->js pts)\n       trl (js/L.polyline pts ops)]\n    (.addLayer @CHART trl)\n    (if (> time 0)\n        (asp/delayer #(.removeLayer @CHART trl)\n                            time)))")
	(title "add-trail [id points options time]"))

([FlightPro_Class370000] of  CloFunction

	(source "(let [cen (js/L.LatLng. lat lon)\n        zom (.getZoom @CHART)]\n  (.setView @CHART cen zom {})\n  (new-visible))")
	(title "map-center [[lat lon]]"))

([FlightPro_Class370001] of  CloFunction

	(source "(let [[n s w e] (visible-map)\n        url (str (:command URL) \"visible?n=\" n \"&s=\" s \"&w=\" w \"&e=\" e)]\n    (GET url {:handler (fn [response])\n              :error-handler error-handler}))")
	(title "new-visible []"))

([FlightPro_Class370002] of  Rule

	(lhs "?ob1 (Onboard)\n?ob2 (Onboard callsign \"STOP\")")
	(rhs "(retract ?ob1 ?ob2)")
	(salience 0)
	(title "af:StopOnboard"))

([FlightPro_Class370003] of  Rule

	(lhs "?f1 (Follow  id ?id1 time ?t1)\n?f2 (Follow  id ?id2 time ?t2\n	((not= ?id1 ?id2)\n	 (= ?t2 0)))")
	(rhs "(retract ?f1)\n(if (= ?id2 \"STOP\")\n   (retract ?f2))")
	(salience 0)
	(title "af:StopOrSwitchFollow"))

([FlightPro_Class370004] of  CloFunction

	(source "(asp/pump-in (:instructions CHN)\n	{:instruct :map-center\n	 :coord coord})")
	(title "set-map-view [coord]"))

([FlightPro_Class380000] of  CloFunction

	(source "(GET (str (:command URL) \"stopfollow\")\n  {:handler (fn [response])\n   :error-handler error-handler})")
	(title "stopfollow []"))

([FlightPro_Class380001] of  CloFunction

	(source "(GET (str (:command URL) \"trail?id=\" id)\n  {:handler (fn [response])\n   :error-handler error-handler})")
	(title "trail [id]"))

([FlightPro_Class380002] of  CloFunction

	(source "(println [:CMD-TRAIL params])\n(do-trail (:id params) [])\n\"\"")
	(title "trail [params]"))

([FlightPro_Class380003] of  CloFunction

	(source "(let [bnd (.getBounds @CHART)]\n  [(.getNorth bnd)\n   (.getSouth bnd)\n   (.getWest bnd)\n   (.getEast bnd)])")
	(title "visible-map []"))

([FlightPro_Class380004] of  CloFunction

	(source "(println [:CMD-VISIBLE params])\n(let [{:keys [n s w e]} params]\n  (if (:on @WIKI)\n    (exd/pump-wiki [n s w e] (:instructions CHN) WIKI))\n  (fr24/set-bbx n s w e))\n\"\"")
	(title "visible [params]"))

([FlightPro_Class390000] of  Rule

	(lhs "(Onboard callsign ?cs1)\n(Flight callsign ?cs1 coord ?c1 course ?crs1 age \"NEW\")\n(Flight id ?id2 coord ?c2 altitude ?a2 age \"CURRENT\" point4d ?p2 callsign ?cs2)\n(Flight id ?id2 coord ?c3 altitude ?a3 age \"NEW\" point4d ?p3 course ?crs3 \n	(< (calc.geo/distance-nm ?c1 ?c3) 10)))")
	(rhs "(cesium.core/leg ?cs2\n	(if (calc.geo/following? ?crs1 ?crs3)\n	  (es/URL-ICO \"FOLLOWING\")\n	  (es/URL-ICO \"COUNTER\")) \n	(calc.core/smooth-tabfun (calc.geo/distance-nm ?c1 ?c3) [[0 1.0][20 0.1]])\n	?p2\n	?p3)")
	(salience 0)
	(title "af:CZML-LegGeneration"))

([FlightPro_Class390001] of  CloFunction

	(source "(let [dif (Math/abs (- crs2 crs1))]\n   (or (< dif 90) (> dif 270)))")
	(title "following? [crs1 crs2]"))

([FlightPro_Class390002] of  ClsRequired

	(cloFunctions
		[FlightPro_Class130003]
		[FlightPro_Class30025]
		[FlightPro_Class30003]
		[FlightPro_Class30004]
		[FlightPro_Class30005]
		[FlightPro_Class30006])
	(cloNamespace [FlightPro_Class400003])
	(title "Calculus"))

([FlightPro_Class390003] of  CloFunction

	(source "(println [:CMD-STOPFOLLOW params])\n(rete/assert-frame ['Follow 'id \"STOP\" 'time 0])\n\"\"")
	(title "stopfollow [params]"))

([FlightPro_Class4] of  CloVar

	(source "(js/Cesium.Viewer. \n  \"cesiumContainer\" \n  #js{:animation false})")
	(title "VIEWER"))

([FlightPro_Class40000] of  HTML

	(source "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <title>Cockpit View</title>\n    <link rel=\"stylesheet\" href=\"css/cesium.css\" />\n    <script src=\"Cesium/Cesium.js\"></script>\n    <style>\n      @import url(Cesium/Widgets/widgets.css);\n      #cesiumContainer {\n        position: absolute;\n        top: 0;\n        left: 0;\n        height: 100%;\n        width: 100%;\n        margin: 0;\n        overflow: hidden;\n        padding: 0;\n        font-family: sans-serif;\n      }\n      html {\n        height: 100%;\n      }\n      body {\n        padding: 0;\n        margin: 0;\n        overflow: hidden;\n        height: 100%;\n      }\n    </style>\n  </head>\n  <body>\n    <div id=\"cesiumContainer\"></div>\n    <div id=\"autopilot\"></div>\n    <div id=\"course\"></div><div id=\"course-fld\"></div><div id=\"accel\"></div>\n    <div id=\"speed\"></div><div id=\"speed-fld\"></div><div id=\"speed-acl\"></div>\n    <div id=\"altitude\"></div><div id=\"altitude-fld\"></div><div id=\"altitude-acl\"></div>\n    <div id=\"lat\"></div></div><div id=\"latitude-fld\"></div>\n    <div id=\"lon\"></div></div><div id=\"longitude-fld\"></div>\n    <div id=\"camera\"></div>\n    <div id=\"onboard\"></div><div id=\"onboard-fld\"></div>\n    <div id=\"view\"></div><div id=\"view-fld\"></div>\n    <div id=\"pitch\"></div><div id=\"pitch-fld\"></div>\n    <div id=\"roll\"></div><div id=\"roll-fld\"></div>\n    <script>\n      Cesium.BingMapsApi.defaultKey = 'Au5mRx6ODcM1h4EAWNyK8wWoyaTjeLuvGkacr7WRZgmAt4QtmyV03OrN1TYb-cr7';\n    </script>\n    <script type=\"text/javascript\" src=\"js/main.js\"></script>\n  </body>\n</html>")
	(store-in "resources/public")
	(title "cezium"))

([FlightPro_Class400000] of  CloProgram

	(cloFunctions
		[FlightPro_Class320022]
		[FlightPro_Class190000]
		[FlightPro_Class210001]
		[FlightPro_Class310005]
		[FlightPro_Class220030]
		[FlightPro_Class230005]
		[FlightPro_Class350000]
		[FlightPro_Class370004]
		[FlightPro_Class310000]
		[FlightPro_Class270000]
		[FlightPro_Class340000]
		[FlightPro_Class290001]
		[FlightPro_Class380004]
		[FlightPro_Class380002]
		[FlightPro_Class390003]
		[FlightPro_Class420001]
		[FlightPro_Class420000]
		[FlightPro_Class640008]
		[FlightPro_Class420021]
		[FlightPro_Class460002]
		[FlightPro_Class510000]
		[FlightPro_Class590000]
		[FlightPro_Class660024]
		[FlightPro_Class640001]
		[FlightPro_Class690508])
	(cloNamespace [FlightPro_Class400001])
	(cloVars
		[FlightPro_Class70000]
		[FlightPro_Class20005]
		[FlightPro_Class330003]
		[FlightPro_Class20004]
		[FlightPro_Class310001]
		[FlightPro_Class510001]
		[FlightPro_Class610000]
		[FlightPro_Class630000]
		[FlightPro_Class660025])
	(title "Pro Commands"))

([FlightPro_Class400001] of  CloNamespace

	(source "(:use protege.core)\n(:require \n  [compojure.core :refer [GET]]\n  [fr24.client :as fr24]\n  [async.proc :as asp]\n  [rete.core :as rete]\n  [cesium.core :refer [iso8601curt]]\n  [ext.data :as exd])")
	(title "pro.commands"))

([FlightPro_Class400003] of  CloNamespace

	(title "calc.core"))

([FlightPro_Class410000] of  RuleSet

	(rules
		[FlightPro_Class340002]
		[FlightPro_Class330001]
		[FlightPro_Class520003]
		[FlightPro_Class330000]
		[FlightPro_Class270002]
		[FlightPro_Class270003]
		[FlightPro_Class500001]
		[FlightPro_Class540000]
		[FlightPro_Class550002]
		[FlightPro_Class540018]
		[FlightPro_Class540019]
		[FlightPro_Class540020]
		[FlightPro_Class560000]
		[FlightPro_Class570001])
	(templates
		[Flight]
		[FlightPlan]
		[Schedule])
	(title "My Flights"))

([FlightPro_Class410001] of  Rule

	(lhs "?nf1 (Flight id ?id age \"NEW\" time ?t1)\n?nf2 (Flight id ?id age \"NEW\" time ?t2\n	(> ?t2 ?t1))")
	(rhs "(modify ?nf1 age \"CURRENT\")")
	(salience 1)
	(title "af:FlightHistory1"))

([FlightPro_Class410002] of  Rule

	(lhs "?cf1 (Flight id ?id age \"CURRENT\" time ?t1)\n?cf2 (Flight id ?id age \"CURRENT\" time ?t2\n	(> ?t2 ?t1))")
	(rhs "(modify ?cf1 age \"OLD\")")
	(salience 1)
	(title "af:FlightHistory2"))

([FlightPro_Class410020] of  Rule

	(lhs "(Flight id ?id age \"OLD\" time ?t1)\n?f (Follow id ?id time 0)\n(not Follow)")
	(rhs "(modify ?f time ?t1)")
	(salience 0)
	(title "af:StartFollow"))

([FlightPro_Class420000] of  CloFunction

	(source ";;(println [:QUESTION pp])\n(if (= (:whom pp) \"direct\")\n  (asp/pump-in (:answer CHN) (direct-question pp))\n  (do (rete/assert-frame \n	['Question\n	 'predicate (:predicate pp)\n	 'subject (:subject pp)\n	 'object (:object pp)])\n        (rete/fire)))\n{:status 204}")
	(title "question [pp]"))

([FlightPro_Class420001] of  CloFunction

	(source "(condp = (:question pp)\n  \"countries\" (->> (fr24/airports-by-country)\n	keys\n	sort)\n  \"airports\" (->> (get (fr24/airports-by-country) (:country pp))\n	keys\n	sort)\n  true \"\")")
	(title "direct-question [pp]"))

([FlightPro_Class420008] of  ClsRequired

	(cloFunctions
		[FlightPro_Class140005]
		[FlightPro_Class140004]
		[FlightPro_Class420010]
		[FlightPro_Class440001]
		[FlightPro_Class440002]
		[FlightPro_Class420011]
		[FlightPro_Class430001]
		[FlightPro_Class430002]
		[FlightPro_Class430003]
		[FlightPro_Class460000]
		[FlightPro_Class460001]
		[FlightPro_Class420019]
		[FlightPro_Class420020]
		[FlightPro_Class450000])
	(cloNamespace [FlightPro_Class420009])
	(cloVars
		[FlightPro_Class70000]
		[FlightPro_Class20005]
		[FlightPro_Class330003]
		[FlightPro_Class80002])
	(title "Ask Master"))

([FlightPro_Class420009] of  CloNamespace

	(source "(:require \n  [ajax.core :refer [GET]]\n  [chart.controls :refer [show-chart-controls]])")
	(title "ask.master"))

([FlightPro_Class420010] of  CloFunction

	(source "(condp = typ\n    :itself (apply str (for [e lst]\n                         (str \"<option value='\" e \"'>\" e \"</option>\")))\n    :count  (apply str (for [i (range (count lst))]\n                            (str \"<option value='\" i \"'>\" (nth lst i) \"</option>\"))))")
	(title "options [lst typ]"))

([FlightPro_Class420011] of  CloFunction

	(source "(let [sel (str \"<select onchange='javascript:\" ns \".handler1(this.value)' style='width:\" wid \"px'>\"\n                 \"<option value='-1'>\" header \"</option>\"\n                 (options lst typ)\n                 \"</select>\")]\n  (set-html! \"element1\" sel))")
	(title "selector1 [ns header lst typ wid]"))

([FlightPro_Class420019] of  CloFunction

	(source "(GET (:question URL) \n    {:params params\n     :error-handler error-handler\n     :response-format :transit})")
	(title "ask-server [params]"))

([FlightPro_Class420020] of  CloFunction

	(source "(GET (:answer URL) \n  {:handler handler\n   :error-handler error-handler\n   :response-format :transit})")
	(title "get-answer [handler]"))

([FlightPro_Class420021] of  CloFunction

	(source "(println [:CMD-MOVE-TO params])\n(let [{:keys [country airport]} params]\n  (if-let [apt (get-in (fr24/airports-by-country) [country airport])]\n    (let [iata (apt \"iata\")\n           alt (apt \"alt\")\n           crd [(apt \"lat\") (apt \"lon\")]]\n      (foc-apt-ins apt)\n      (if (= TERRAIN \"yes\")\n        (def APT-ALT alt)) \n      (set-map-view crd)\n      (println :Airport country airport iata crd alt))))\n\"\"")
	(title "move-to [params]"))

([FlightPro_Class430000] of  CloFunction

	(source "([]\n  (am/ask-server {:whom \"direct\"\n	    :question \"countries\"})\n  (am/get-answer move-to))\n([cns]\n  (am/selector1 \"chart.client\" \"countries\" cns :itself 130)\n  (defn handler1 [sel]\n    (am/ask-server {:whom \"direct\"\n	       :question \"airports\"\n	       :country sel})\n    (am/get-answer #(move-to sel %))))\n([cnt aps]\n  (am/selector2 \"chart.client\" \"airports\" aps :itself 130)\n  (defn handler2 [sel]\n    (let [prm (str \"?country=\" cnt\n	\"&airport=\" sel)]\n      (GET (str (:command URL) \"move-to\" prm) no-handler)\n      (am/clear-dialog))))")
	(title "move-to"))

([FlightPro_Class430001] of  CloFunction

	(source "(let [sel (str \"<select onchange='javascript:\" ns \".handler2(this.value)' style='width:\" wid \"px'>\"\n                 \"<option value='-1'>\" header \"</option>\"\n                 (options lst typ)\n                 \"</select>\")]\n    (set-html! \"element2\" sel))")
	(title "selector2 [ns header lst typ wid]"))

([FlightPro_Class430002] of  CloFunction

	(source "(let [sel (str \"<select onchange='javascript:\" ns \".handler3(this.value)' style='width:\" wid \"px'>\"\n                 \"<option value='-1'>\" header \"</option>\"\n                 (options lst typ)\n                 \"</select>\")]\n    (set-html! \"element3\" sel))")
	(title "selector3 [ns header lst typ wid]"))

([FlightPro_Class430003] of  CloFunction

	(source "(let [sel (str \"<select onchange='javascript:\" ns \".handler4(this.value)' style='width:\" wid \"px'>\"\n                 \"<option value='-1'>\" header \"</option>\"\n                 (options lst typ)\n                 \"</select>\")]\n    (set-html! \"element4\" sel))")
	(title "selector4 [ns header lst typ wid]"))

([FlightPro_Class430010] of  Rule

	(lhs "?f1 (Flight id ?id time ?t1)\n(Flight age \"NEW\" time ?t2\n	(> (- ?t2 ?t1) 120))")
	(rhs "(es/put-off-map ?id)\n(retract ?f1)")
	(salience 0)
	(title "af:ForgetOldFlight"))

([FlightPro_Class440000] of  CloFunction

	(source "([]\n  (am/input1 \"chart.client\" \"new callsign\" 80)\n  (defn handler1 [call]\n    (am/input2 \"chart.client\" \"hh:mm\" 80)\n      (defn handler2 [tim]\n        (schedule call tim))))\n([call tim]\n  (am/ask-server {:whom \"direct\"\n	    :question \"countries\"})\n  (am/get-answer #(schedule call tim %)))\n([call tim cns1]\n  (am/selector3 \"chart.client\" \"from country\" cns1 :itself 130)\n  (defn handler3 [sel]\n    (am/ask-server {:whom \"direct\"\n	       :question \"airports\"\n	       :country sel})\n    (am/get-answer #(schedule call tim sel %))))\n([call tim cnt1 aps1]\n  (am/selector4 \"chart.client\" \"from airport\" aps1 :itself 130)\n  (defn handler4 [sel]\n    (am/ask-server {:whom \"direct\"\n	    :question \"countries\"})\n    (am/get-answer #(schedule call tim cnt1 sel %))))\n([call tim cnt1 apt1 cns2]\n  (am/selector5 \"chart.client\" \"to county\" cns2 :itself 130)\n  (defn handler5 [sel]\n    (am/ask-server {:whom \"direct\"\n	       :question \"airports\"\n	       :country sel})\n    (am/get-answer #(schedule call tim cnt1 apt1 sel %))))\n([call tim cnt1 apt1 cnt2 aps2]\n  (am/selector6 \"chart.client\" \"to airport\" aps2 :itself 130)\n  (defn handler6 [sel]\n    (let [prm (str \"?callsign=\" call\n	\"&time=\" tim\n	\"&country1=\" cnt1\n	\"&airport1=\" apt1\n	\"&country2=\" cnt2\n	\"&airport2=\" sel)]\n      (GET (str (:command URL) \"schedule\" prm) no-handler)\n      (am/clear-dialog))))")
	(title "schedule"))

([FlightPro_Class440001] of  CloFunction

	(source "(let [inp (str \"<input type='text' onchange='javascript:\" ns \".handler1(this.value)'\n	style='width:\" wid \"px' \n	value='\" header \"'>\")]\n  (set-html! \"element1\" inp))")
	(title "input1 [ns header wid]"))

([FlightPro_Class440002] of  CloFunction

	(source "(let [inp (str \"<input type='text' onchange='javascript:\" ns \".handler2(this.value)'\n	style='width:\" wid \"px' \n	value='\" header \"'>\")]\n  (set-html! \"element2\" inp))")
	(title "input2 [ns header wid]"))

([FlightPro_Class450000] of  CloFunction

	(source "(set-html! \"element1\" \"\")\n(set-html! \"element2\" \"\")\n(set-html! \"element3\" \"\")\n(set-html! \"element4\" \"\")\n(set-html! \"element5\" \"\")\n(set-html! \"element6\" \"\")\n(show-chart-controls)")
	(title "clear-dialog []"))

([FlightPro_Class460000] of  CloFunction

	(source "(let [sel (str \"<select onchange='javascript:\" ns \".handler5(this.value)' style='width:\" wid \"px'>\"\n                 \"<option value='-1'>\" header \"</option>\"\n                 (options lst typ)\n                 \"</select>\")]\n    (set-html! \"element5\" sel))")
	(title "selector5 [ns header lst typ wid]"))

([FlightPro_Class460001] of  CloFunction

	(source "(let [sel (str \"<select onchange='javascript:\" ns \".handler6(this.value)' style='width:\" wid \"px'>\"\n                 \"<option value='-1'>\" header \"</option>\"\n                 (options lst typ)\n                 \"</select>\")]\n    (set-html! \"element6\" sel))")
	(title "selector6 [ns header lst typ wid]"))

([FlightPro_Class460002] of  CloFunction

	(source "(println [:CMD-SCHEDULE params])\n(let [{:keys [callsign time country1 airport1 country2 airport2]} params\n       abc (fr24/airports-by-country)\n       apf (get-in abc [country1 airport1])\n       apt (get-in abc [country2 airport2])\n       mes \"Airport not found: \"]\n  (if (and apf apt)\n    (do (foc-apt-ins apf)\n      (foc-apt-ins apt)\n      (rete/assert-frame ['Schedule \n	'callsign callsign\n	'time time\n	'from apf\n	'to apt]))\n    (do (if (nil? apf)\n            (println mes country1 airport1))\n          (if (nil? apt)\n            (println mes country2 airport2)))))\n\"\"")
	(title "schedule [params]"))

([FlightPro_Class470000] of  CloVar

	(source "(defonce CARRIERS (volatile! {}))")
	(title "defCARRIERS"))

([FlightPro_Class470001] of  CloFunction

	(source "(letfn [(move-all [carrs]\n	(doseq [carr (vals @carrs)]\n	  (move carr)))]\n  (asp/repeater move-all CARRIERS (:carrier TIO))\n  (println (str \"  My Flights Movement Interval: \" (:carrier TIO))))")
	(title "start-movement []"))

([FlightPro_Class470002] of  CloFunction

	(source "(let [carr (volatile! (assoc (merge {} @CARRIER)\n	:mode call\n   	:coord coord\n   	:course crs\n   	:speed spd\n   	:altitude alt))]\n  (set-turn-point carr)\n  (vswap! CARRIERS assoc id carr))")
	(title "add-my-flight [id call coord crs spd alt]"))

([FlightPro_Class470003] of  CloFunction

	(source "(vswap! CARRIERS dissoc id)")
	(title "rem-my-flight [id]"))

([FlightPro_Class470004] of  CloFunction

	(source "(if-let [carr (get @CARRIERS id)]\n  (if (vector? arg)\n    (func carr (first arg) (second arg))\n    (func carr arg)))")
	(title "control [id func arg]"))

([FlightPro_Class480000] of  CloProgram

	(cloFunctions
		[FlightPro_Class100027]
		[FlightPro_Class240001]
		[FlightPro_Class240002]
		[FlightPro_Class80000]
		[FlightPro_Class480002]
		[FlightPro_Class30007]
		[FlightPro_Class30011]
		[FlightPro_Class30000]
		[FlightPro_Class30027]
		[FlightPro_Class140027]
		[FlightPro_Class30026]
		[FlightPro_Class470002]
		[FlightPro_Class470003]
		[FlightPro_Class470004]
		[FlightPro_Class470001]
		[FlightPro_Class250000]
		[FlightPro_Class520000]
		[FlightPro_Class560001])
	(cloNamespace [FlightPro_Class480001])
	(cloVars
		[FlightPro_Class480003]
		[FlightPro_Class480004]
		[FlightPro_Class330004]
		[FlightPro_Class100025]
		[FlightPro_Class470000])
	(title "My Flights Movement"))

([FlightPro_Class480001] of  CloNamespace

	(source "(:require\n  [calc.core :as calc]\n  [calc.geo :as geo]\n  [async.proc :as asp])")
	(title "my.flights.move"))

([FlightPro_Class480002] of  CloFunction

	(source "(let [car @carr\n       tur (:turn-point car)\n       hrs (:step-hrs car)\n       elt (+ (:clk tur) hrs)\n       way (* (:rdh tur) elt)\n       [phi lam] (geo/spherical-between (:phi tur) (:lam tur) way (:dir tur))]\n  (vswap! carr assoc :coord [(/ phi PID180) (/ lam PID180)]\n                                :turn-point (assoc tur :clk elt)))")
	(title "move [carr]"))

([FlightPro_Class480003] of  CloVar

	(source "(/ Math/PI 180)")
	(title "PID180"))

([FlightPro_Class480004] of  CloVar

	(source "(/ Math/PI 10800)")
	(title "NMRAD"))

([FlightPro_Class480005] of  CloFunction

	(source "(loop [mff (seq mff) ff ff]\n  (if (seq mff)\n    (let [[id mf] (first mff)\n           mf @mf\n           [lat lon] (:coord mf)]\n      (recur (rest mff) \n        (assoc ff id \n	[0 lat lon (:course mf) (:altitude mf) (:speed mf) \n	 6 7 8 9 10 11 12 13 14 15\n	 (:mode mf)])))\n    ff))")
	(title "merge-my-flights [mff ff]"))

([FlightPro_Class490000] of  CloFunction

	(source ";;(println [:START-TIME tim])\n(let [[h m :as hm] (seq (.split tim \":\"))]\n  (if (and (seq hm) (= (count hm) 2))\n    (let [h (read-string h)\n           m (if (.startsWith m \"0\") (.substring m 1) m)\n           m (read-string m)]\n      (if (and (number? h) (number? m) (<= 0 h 23) (<= 0 m 59))\n        (let [cld (Calendar/getInstance)]\n          (.set cld Calendar/HOUR_OF_DAY h)\n          (.set cld Calendar/MINUTE m)\n          (.set cld Calendar/SECOND 0)\n          (int (/ (.getTimeInMillis cld) 1000)))))))")
	(title "start-time [tim]"))

([FlightPro_Class490002] of  CloFunction

	(source "(let [tof (:takeoff spp)\n       [x crsa] (:initial-turn-course tof)]\n    (merge tof   {:from-crs 	[(:start-run spp) crsa]\n	:to-crs 	[(:general-crs spp) crsa]}))")
	(title "takeoff-plan [spp]"))

([FlightPro_Class5] of  CloVar

	(source "(js/Cesium.CzmlDataSource.)")
	(title "CZM-SRC"))

([FlightPro_Class50000] of  CloFunction

	(source "(vswap! CAMERA assoc key val)")
	(title "camera [key val]"))

([FlightPro_Class500000] of  CloFunction

	(source "(letfn [(corr1 [[x y]]\n	[x (+ y elv)])]\n  (vec (map corr1 atab)))")
	(title "corr-alt-tab [atab elv]"))

([FlightPro_Class500001] of  Rule

	(lhs "(FlightPlan id ?id\n	status \"CRUISE\"\n	landing ?lnd\n	cruise ?cru)\n(Flight age \"CURRENT\" \n	id ?id\n	coord ?crd\n	course ?crs\n	(not= ?crs (int (calc.geo/bear-deg ?crd (:final-turn-crd ?lnd)))))")
	(rhs "(let [newc (int (calc.geo/bear-deg ?crd (:final-turn-crd ?lnd)))]\n  (println [:Cruise ?id newc])\n  (my.flights.move/control ?id my.flights.move/turn [newc 1]))")
	(salience 0)
	(title "mf:Cruise"))

([FlightPro_Class50001] of  ClsRequired

	(cloFunctions
		[FlightPro_Class10002]
		[FlightPro_Class8]
		[FlightPro_Class9]
		[FlightPro_Class10001]
		[FlightPro_Class50000]
		[FlightPro_Class10003])
	(cloNamespace [FlightPro_Class1])
	(cloVars
		[FlightPro_Class3]
		[FlightPro_Class4]
		[FlightPro_Class5]
		[FlightPro_Class0])
	(documentation [FlightPro_Class60000])
	(title "Cezium Client"))

([FlightPro_Class510000] of  CloFunction

	(source "(vswap! MY-INFOS assoc csoid\n  {\"airport\" {\"origin\" {\"name\" (fapt \"name\") \"code\" {\"iata\" (fapt \"iata\")}}\n                  \"destination\" {\"name\" (tapt \"name\") \"code\" {\"iata\" (tapt \"iata\")}}}\n\n   \"aircraft\" {\"model\" {\"text\" \"Ru Lentokone\"}\n                   \"images\" {\"thumbnails\" [{\"src\" (str \"img/\" (int  (rand 7)) \".jpg\")}]}}\n\n   \"time\" {\"real\" {\"departure\" dept}\n               \"scheduled\" {\"arrival\" \"unk\"}}\n\n   \"airline\" {\"short\" \"Ru Airlines\"}})")
	(title "set-my-flight-info [csoid dept fapt tapt]"))

([FlightPro_Class510001] of  CloVar

	(source "(volatile! {\"MANUAL\"\n  {\"airport\" {\"origin\" {\"name\" \"unk\" \"code\" {\"iata\" \"unk\"}}\n                  \"destination\" {\"name\" \"unk\" \"code\" {\"iata\" \"unk\"}}}\n\n   \"aircraft\" {\"model\" {\"text\" \"Ru Lentokone\"}\n                   \"images\" {\"thumbnails\" [{\"src\" \"img/5.jpg\"}]}}\n\n   \"time\" {\"real\" {\"departure\" \"unk\"}\n               \"scheduled\" {\"arrival\" \"unk\"}}\n\n   \"airline\" {\"short\" \"Ru Airlines\"}}})")
	(title "MY-INFOS"))

([FlightPro_Class520000] of  CloFunction

	(source ";; Calculates time (hrs) and distance (nm)\n(if (= ini-spd fin-spd)\n  [0 0]\n  (let [step (* spd-stp spd-acl)\n         tioh (float (/ spd-tio 3600000))\n         [func pred] (if (> ini-spd fin-spd) [- <=] [+ >=])]\n    (loop [spd ini-spd tim 0 dist 0]\n      (if (pred spd fin-spd)\n        [tim dist]\n        (recur (func spd step) (+ tioh tim) (+ (* spd tioh) dist))))))")
	(title "speed-variation [[ini-spd x] [fin-spd spd-acl] spd-stp spd-tio]"))

([FlightPro_Class520001] of  CloFunction

	(source "(let [[a aa] alt]\n  [(+ a elv) aa])")
	(title "corr-alt [alt elv]"))

([FlightPro_Class520003] of  Rule

	(lhs "?fp (FlightPlan id ?id\n	status \"TAKEOFF\"\n	takeoff ?tof)\n(Flight age \"CURRENT\" \n	id ?id\n	altitude ?alt\n	speed ?spd\n	((>= ?alt (first (:altitude ?tof)))\n	 (>= ?spd (first (:speed ?tof)))))")
	(rhs "(println [:InitialTurnStart ?id (:to-crs ?tof) ?alt ?spd])\n(my.flights.move/control ?id my.flights.move/turn (:to-crs ?tof))\n(modify ?fp status \"INITIAL-TURN\")")
	(salience 0)
	(title "mf:InitialTurnStart"))

([FlightPro_Class530000] of  CloFunction

	(source "(let [rw (if-let [ins (fifos \"Airport\" \"iata\" iata)]\n              (let [rws (vec (svs ins \"runways\"))\n                     idx (int (rand (count rws)))]\n                (nth rws idx))\n              0)]\n  (if (> (rand 1) 0.5)\n    rw\n    (geo/norm-crs (+ rw 180))))")
	(title "runway [iata]"))

([FlightPro_Class540000] of  Rule

	(lhs "?fp (FlightPlan id ?id\n	landing ?lnd\n	cruise ?cru\n	vertical-status  ?vst\n	[(= ?vst \"CLIMB\")\n	 (= ?vst \"LEVEL\")])\n(Flight age \"CURRENT\" \n	id ?id\n	coord ?crd\n	(<= (calc.geo/distance-nm ?crd (:final-turn-crd ?lnd))\n	  (:descend-dist ?cru)))")
	(rhs "(println [:DescendStart ?id ?dnd])\n(my.flights.move/control ?id my.flights.move/elevate (:altitude ?lnd))\n(modify ?fp vertical-status \"DESCEND\")")
	(salience 0)
	(title "mf:DescendStart"))

([FlightPro_Class540017] of  CloFunction

	(source "(let [tof (:takeoff spp)\n       cru (:cruise spp)\n       lnd (:landing spp)\n       car @mfs/CARRIER\n       [ddist bdist calt cspd] \n         (adjust-cruise\n	(calc.geo/distance-nm (:start-crd spp) (:finish-crd spp))\n	(:altitude cru)\n	(:speed cru)\n	(:altitude lnd)\n	(:speed lnd) \n	(:elevator car)\n	(:propeller car)\n	(:min-alt cru)\n	(:min-spd cru))]\n    (merge cru  {:altitude calt\n	:speed cspd\n	:descend-dist ddist\n	:brake-dist bdist}))")
	(title "cruise-plan [spp]"))

([FlightPro_Class540018] of  Rule

	(lhs "?fp (FlightPlan id ?id\n	status \"CRUISE\"\n	landing ?lnd\n	cruise ?cru)\n(Flight age \"CURRENT\" \n	id ?id\n	coord ?crd\n	course ?crs\n	(calc.geo/abaft ?crs ?crd (:final-turn-crd ?lnd)))")
	(rhs "(println [:CruiseDone ?id ?crd ?cru])\n(modify ?fp cruise \"DONE\"\n	status \"FINAL-TURN\")")
	(salience 0)
	(title "mf:CruiseDone"))

([FlightPro_Class540019] of  Rule

	(lhs "(FlightPlan id ?id\n	status \"FINAL-TURN\"\n	landing ?lnd)")
	(rhs "(println [:FinalTurnStart ?id ?lnd])\n(my.flights.move/control ?id my.flights.move/accel (:lannding-spd ?lnd))\n(my.flights.move/control ?id my.flights.move/turn (:landing-crs ?lnd))")
	(salience 0)
	(title "mf:FinalTurnStart"))

([FlightPro_Class540020] of  Rule

	(lhs "?fp (FlightPlan id ?id\n	status \"FINAL-TURN\"\n	landing ?lnd)\n(Flight age \"CURRENT\" \n	id ?id\n	altitude ?alt\n	speed ?spd\n	course ?crs\n	(= ?crs (first (:landing-crs ?lnd))))")
	(rhs "(println [:LandingStart ?id ?alt ?spd ?crs])\n(modify ?fp status \"LANDING\")")
	(salience 0)
	(title "mf:LandingStart"))

([FlightPro_Class550000] of  CloVar

	(source "{:takeoff \n  {:speed [220 8]\n   :altitude [1500 6]\n   :initial-turn-course [-1 2]}\n :cruise \n  {:speed [500 1]\n   :altitude [33000 8]\n   :min-spd 220\n   :min-alt 4000}\n :landing \n  {:speed [180 1 6]\n   :altitude [2000 8]\n   :outer-marker-distance 7\n   :final-turn-course [-1 1]\n   :altitude-graph\n     [[0.1 0][0.5 15][2 600][7 2000]] ;; x - dist, y - alt\n   :spdeed-graph\n     [[0.0 0][0.1 10][0.5 100][3 180]]} ;; x - dist, y - spd\n}")
	(title "GENPLAN"))

([FlightPro_Class550002] of  Rule

	(lhs "?fp (FlightPlan id ?id\n	landing ?lnd\n	cruise ?cru\n	vertical-status \"DESCEND\")\n(Flight age \"CURRENT\" \n	id ?id\n	coord ?crd\n	(<= (calc.geo/distance-nm ?crd (:final-turn-crd ?lnd))\n	  (:brake-dist ?cru)))")
	(rhs "(println [:BrakeStart ?id ?dnd])\n(my.flights.move/control ?id my.flights.move/accel (:speed ?lnd))\n(modify ?fp vertical-status \"DESCEND&BRAKE\")")
	(salience 0)
	(title "mf:BrakeStart"))

([FlightPro_Class560000] of  Rule

	(lhs "?fp (FlightPlan id ?id\n	status \"LANDING\"\n	landing ?lnd\n	spec-plan ?spp)\n(Flight age \"CURRENT\" \n	id ?id\n	coord ?crd)")
	(rhs "(let [fcrd (:finish-crd ?spp)\n       dist (calc.geo/distance-nm ?crd fcrd)\n       bear (int (calc.geo/bear-deg ?crd fcrd))\n       alt (int (calc.core/smooth-tabfun dist (:altitude-graph ?lnd)))\n       spd (int (calc.core/smooth-tabfun dist (:spdeed-graph ?lnd)))]\n   (my.flights.move/control ?id my.flights.move/turn [bear 2])\n   (my.flights.move/control ?id my.flights.move/elevate [alt 8])\n   (my.flights.move/control ?id my.flights.move/accel [spd 10]))")
	(salience 0)
	(title "mf:OnLandingCourse"))

([FlightPro_Class560001] of  CloFunction

	(source ";; Calculates time (hrs)\n(if (= ini-alt fin-alt)\n  0\n  (let [step (* alt-stp alt-acl)\n         tioh (float (/ alt-tio 3600000))\n         adif (if (> ini-alt fin-alt) (- ini-alt fin-alt) (- fin-alt ini-alt))]\n    (* (/ adif step) tioh)))")
	(title "altitude-variation [[ini-alt x] [fin-alt alt-acl] alt-stp alt-tio]"))

([FlightPro_Class570000] of  CloFuncall

	(source "(ru.rules/pp 'FlightPlan)"))

([FlightPro_Class570001] of  Rule

	(lhs "?fp (FlightPlan id ?id\n	status \"LANDING\"\n	spec-plan ?spp\n	landing ?lnd)\n(Flight age \"CURRENT\" \n	id ?id\n	coord ?crd\n	course ?crs\n	speed ?spd\n                        [(= ?spd 0)\n	 (calc.geo/abaft ?crs ?crd (:finish-crd ?spp))])")
	(rhs "(println [:LandingDone ?id ?crd])\n(es/put-off-map ?id)\n(my.flights.move/rem-my-flight ?id)\n(modify ?fp status \"GROUND\" \n	landing \"DONE\")")
	(salience 1)
	(title "mf:LandingDone"))

([FlightPro_Class580000] of  CloFuncall

	(source "(my.flights.move/rem-my-flight \"S17\")"))

([FlightPro_Class580001] of  CloFuncall

	(source "my.flights.move/CARRIERS"))

([FlightPro_Class590000] of  CloFunction

	(source "(vswap! fr24/MANUAL-DATA assoc \"MANUAL\"\n          (volatile! {:callsign \"MANUAL\"\n	 :coord (read-string (:coord params))\n	 :course (read-string (:course params))\n	 :speed (read-string (:speed params))\n	 :altitude (read-string (:altitude params))}))")
	(title "get-manual-data [params]"))

([FlightPro_Class590001] of  CloVar

	(source "false")
	(title "ONB-PAUSE"))

([FlightPro_Class60000] of  CloDocumentation

	(source "<html>\n  <head>\n    <style type=\"text/css\">\n      <!--\n        body { font-family: arial; font-size: 12pt }\n        p { font-family: arial; margin-top: 2; margin-right: 2; margin-bottom: 2; margin-left: 2 }\n      -->\n    </style>\n    \n  </head>\n  <body>\n    <b>Cesium Client<br></b><br>API<br><br>1. fly-to [lat lon alt crs per]<br>2. camera [key val], keys: :view, :altitude, :pitch, :roll<br><br>CZML rendering support<br><br>Initialization: (init-3D-view)</body>\n</html>"))

([FlightPro_Class600000] of  CloFuncall

	(source "(ru.rules/sp :all)"))

([FlightPro_Class600001] of  CloFuncall

	(source "(es/put-off-map \"RS117\")"))

([FlightPro_Class600002] of  CloFuncall

	(source "(es/put-off-map \"S17\")"))

([FlightPro_Class600003] of  CloFunction

	(source "(let [carr @CARRIER]\n  (if (= (:mode carr) \"MANUAL\")\n    (GET (str (:manual-data URL) \n	\"?coord=\" (:coord carr)\n	\"&course=\" (:course carr)\n	\"&speed= \" (:speed carr)\n	\"&altitude=\" (:altitude carr))\n	{:handler (fn[response])\n	 :error-handler error-handler})))")
	(title "send-manual-data []"))

([FlightPro_Class60001] of  CloNamespace

	(source "(:require\n  [csasync.proc :as asp]\n  [czm.core :as czm]\n  [view3d.controls :as ctl]\n  [carr.move :as mov]\n  [calc.core :as calc]\n  [calc.dynamic :as dyn]\n  [cognitect.transit :as t]\n  [ajax.core :refer (GET)]\n  [cljs.reader :as rdr]\n  [nightlight.repl-server])")
	(title "view3d.client"))

([FlightPro_Class610000] of  CloVar

	(source "\"no\"")
	(title "TERRAIN"))

([FlightPro_Class610001] of  CloFuncall

	(source "(pro.commands/get"))

([FlightPro_Class620000] of  CloFuncall

	(source "(def abc (fr24.client/airports-by-country))"))

([FlightPro_Class620001] of  CloVar

	(source "(volatile! {})")
	(title "MANUAL-DATA"))

([FlightPro_Class620002] of  CloFuncall

	(source "f24.client/MANUAL-DATA"))

([FlightPro_Class620003] of  CloFunction

	(source "(let [tof (:takeoff gen)\n       cru (:cruise gen)\n       lnd (:landing gen)\n       fcrd [(fapt \"lat\") (fapt \"lon\")]\n       tcrd [(tapt \"lat\") (tapt \"lon\")]\n       falt (if (= cmd/TERRAIN \"yes\") (fapt \"alt\") 0)\n       talt (if (= cmd/TERRAIN \"yes\") (tapt \"alt\") 0)\n       spp (assoc gen :takeoff (merge tof\n		{:altitude (corr-alt (:altitude tof) falt)})\n	        :landing (merge lnd\n		{:altitude (corr-alt (:altitude lnd) talt)\n		 :altitude-graph (corr-alt-tab (:altitude-graph lnd) talt)}))]\n    (merge spp {:general-crs	(int (geo/bear-deg fcrd tcrd))\n	:general-dist	(int (geo/distance-nm fcrd tcrd))\n	:start-crd 	fcrd\n	:finish-crd 	tcrd\n	:start-alt 	falt\n	:finish-alt 	talt\n	:start-run 	(runway (fapt \"iata\"))\n	:finish-run 	(runway (tapt \"iata\"))}))")
	(title "specific-plan [gen fapt tapt]"))

([FlightPro_Class620004] of  CloFunction

	(source ";; return [cruise-altitude cruise-speed altitude-distance altitude-speed]\n(loop [alt cru-alt spd cru-spd ad 0 sd 0]\n  (if (and (> (first alt) min-alt) (> (first spd) min-spd))\n    (let [[stim sdis] (mfs/speed-variation spd spd-lnd (:step prop) (:time-out prop))\n           atim (mfs/altitude-variation alt alt-lnd (:step elev) (:time-out elev))\n           adis (if (<= atim stim)\n                    sdis\n                    (+ sdis (* (- atim stim) (first spd))))]\n      (if (< (* 2 adis) gen-dist)\n        [adis sdis alt spd]\n        (let [[a aa] alt\n               [s sa] spd]\n          (recur [(round (int (* 0.8 a)) 1000) aa] [(round (int (* 0.8 s)) 10) sa] adis sdis))))\n    [ad sd alt spd]))")
	(title "adjust-cruise [gen-dist cru-alt cru-spd alt-lnd spd-lnd elev prop min-alt min-spd]"))

([FlightPro_Class620010] of  CloFunction

	(source "(let [md (mod x p)\n       r (- x md)]\n  (if (< md (/ p 2))\n    r\n    (+ r p)))")
	(title "round [x p]"))

([FlightPro_Class630000] of  CloVar

	(source "0")
	(title "APT-ALT"))

([FlightPro_Class630001] of  CloFuncall

	(source "(ffirst abc)"))

([FlightPro_Class630002] of  CloFuncall

	(source "(first abc)"))

([FlightPro_Class640000] of  %3AINSTANCE-ANNOTATION

	(%3AANNOTATED-INSTANCE [FlightPro_Class650002])
	(%3AANNOTATION-TEXT "Initial Airport")
	(%3ACREATION-TIMESTAMP "2017.02.18 13:26:39.401 MSK")
	(%3ACREATOR "ru"))

([FlightPro_Class640001] of  CloFunction

	(source "(if-let [api (fainst (cls-instances \"Airport\") \"Initial Airport\")]\n  (move-to {:country (sv api \"country\")\n	:airport (sv api \"title\")})\n  (println \"Annotated Initial Airport not found!\"))")
	(title "go-initial-airport []"))

([FlightPro_Class640002] of  CloFuncall

	(source "(pro.commands/go-initial-airport)"))

([FlightPro_Class640008] of  CloFunction

	(source ";; find or create airport instance\n(invoke-later\n(let [iata (apt \"iata\")]\n  (if (not (fifos \"Airport\" \"iata\" iata))\n    (let [ins (crin \"Airport\")]\n      (ssv ins \"title\" (apt \"name\"))\n      (ssv ins \"iata\" iata)\n      (ssv ins \"icao\" (apt \"icao\"))\n      (ssv ins \"country\" (apt \"country\"))\n      (ssv ins \"altitude\" (apt \"alt\"))\n      (ssvs ins \"coord\" [(float (apt \"lat\"))\n	          (float (apt \"lon\"))]))))\n)")
	(title "foc-apt-ins [apt]"))

([FlightPro_Class650000] of  NearbySearch

	(button-clear-articles "Clear Articles/wiki.gis/clear-articles")
	(button-nearby "submit/wiki.gis/submit-nearby")
	(language English-en)
	(lat 60.3)
	(lng 25.0)
	(max-responses 5)
	(radius-km 10))

([FlightPro_Class650001] of  Airport

	(altitude 179)
	(coord 60.31722 24.96333)
	(country "Finland")
	(iata "HEL")
	(icao "EFHK")
	(runways 47 153)
	(title "Helsinki Vantaa Airport"))

([FlightPro_Class650002] of  Airport

	(altitude 14)
	(coord 40.63975 -73.7789)
	(country "United States")
	(iata "JFK")
	(icao "KJFK")
	(runways 121 31)
	(title "New York John F. Kennedy International Airport"))

([FlightPro_Class650003] of  Airport

	(altitude 21)
	(coord 40.77725 -73.8726)
	(country "United States")
	(iata "LGA")
	(icao "KLGA")
	(runways 32 122)
	(title "New York LaGuardia Airport"))

([FlightPro_Class650004] of  Airport

	(altitude 18)
	(coord 40.6925 -74.1686)
	(country "United States")
	(iata "EWR")
	(icao "KEWR")
	(runways 26 95)
	(title "New York Newark Liberty International Airport"))

([FlightPro_Class650005] of  Airport

	(altitude 36)
	(coord 39.87194 -75.2411)
	(country "United States")
	(iata "PHL")
	(icao "KPHL")
	(runways 75 159)
	(title "Philadelphia International Airport"))

([FlightPro_Class650006] of  Airport

	(altitude 8)
	(coord 25.79325 -80.2905)
	(country "United States")
	(iata "MIA")
	(icao "KMIA")
	(runways 87 119)
	(title "Miami International Airport"))

([FlightPro_Class650007] of  Airport

	(altitude 83)
	(coord 51.4775 -0.46138)
	(country "United Kingdom")
	(iata "LHR")
	(icao "EGLL")
	(runways 90)
	(title "London Heathrow Airport"))

([FlightPro_Class650008] of  Airport

	(altitude 364)
	(coord 50.02642 8.543125)
	(country "Germany")
	(iata "FRA")
	(icao "EDDF")
	(runways 70 179)
	(title "Frankfurt Airport"))

([FlightPro_Class650009] of  Airport

	(altitude 78)
	(coord 59.80029 30.2625)
	(country "Russia")
	(iata "LED")
	(icao "ULLI")
	(runways 106)
	(title "St. Petersburg Pulkovo Airport"))

([FlightPro_Class650010] of  Airport

	(altitude 622)
	(coord 55.97264 37.41458)
	(country "Russia")
	(iata "SVO")
	(icao "UUEE")
	(runways 75)
	(title "Moscow Sheremetyevo International Airport"))

([FlightPro_Class650011] of  Airport

	(altitude 118)
	(coord 45.03468 39.17053)
	(country "Russia")
	(iata "KRR")
	(icao "URKK")
	(runways 52)
	(title "Krasnodar International Airport"))

([FlightPro_Class650012] of  Airport

	(altitude 89)
	(coord 43.44992 39.95658)
	(country "Russia")
	(iata "AER")
	(icao "URSS")
	(runways 28 65)
	(title "Sochi International Airport"))

([FlightPro_Class650013] of  Airport

	(altitude 1225)
	(coord -17.6447 -63.1353)
	(country "Bolivia")
	(iata "VVI")
	(icao "SLVR")
	(runways 147)
	(title "Santa Cruz Viru Viru International Airport"))

([FlightPro_Class650014] of  Airport

	(altitude 1371)
	(coord -17.8115 -63.1714)
	(country "Bolivia")
	(iata "SRZ")
	(icao "SLET")
	(runways 144)
	(title "Santa Cruz El Trompillo Airport"))

([FlightPro_Class650015] of  Airport

	(altitude 8360)
	(coord -17.421 -66.1771)
	(country "Bolivia")
	(iata "CBB")
	(icao "SLCB")
	(runways 38 132)
	(title "Cochabamba Jorge Wilstermann International Airport"))

([FlightPro_Class650016] of  Airport

	(altitude 13325)
	(coord -16.5133 -68.1922)
	(country "Bolivia")
	(iata "LPB")
	(icao "SLLP")
	(runways 92)
	(title "La Paz El Alto International Airport"))

([FlightPro_Class650017] of  Airport

	(altitude 151)
	(coord 61.88516 34.15474)
	(country "Russia")
	(iata "PES")
	(icao "ULPB")
	(runways 23 51)
	(title "Petrozavodsk Airport"))

([FlightPro_Class660000] of  CloFunction

	(source "(let [[n s w e] (vec (map read-string bbx))\n       [n0 s0 w0 e0] (:bbx @wiki)]\n  (vswap! wiki assoc :our-center (our-center n s w e)\n	          :our-radius (our-radius n s))\n  (if (or (>= s n0)\n           (<= n s0)\n           (<= e w0)\n           (>= w e0))\n     (invoke-later\n       (let [bbi (foc \"BBX\" \"title\" \"Current\")\n              rqi (fainst (cls-instances \"BBXWiki\") \"Current BBXWiki Request\")]\n         (if (and bbi rqi)\n           (do\n             (ssvs bbi \"wsen\" (vec (map float [w s e n])))\n             (ssv rqi \"bbx\" bbi)\n             (ssvs rqi \"responses\" [])\n             (with-timeout (:ext-data TIO)\n	(wig/submit-bbx (itm rqi 0) rqi))\n             (let [rr (svs rqi \"responses\")]\n               (when (seq rr)\n	(asp/pump-in chn {:instruct :clear-placemarks})\n	(doseq [r rr]\n	  (point-out-place r @wiki)\n	  (asp/pump-in chn (placemark-instruct r)))\n	(vswap! wiki assoc :bbx [n s w e]))))\n           (println \"Instance of \\\"Current BBXWiki Request\\\" not found!\"))))))")
	(title "pump-wiki [bbx chn wiki]"))

([FlightPro_Class660006] of  BBXWiki

	(bbx [FlightPro_Class670008])
	(button-bbx "submit/wiki.gis/submit-bbx")
	(button-clear-articles "Clear Articles/wiki.gis/clear-articles")
	(language English-en)
	(max-responses 40)
	(responses
		[FlightPro_Class720041]
		[FlightPro_Class720042]
		[FlightPro_Class720043]
		[FlightPro_Class720044]
		[FlightPro_Class720045]
		[FlightPro_Class720046]
		[FlightPro_Class720047]
		[FlightPro_Class720048]
		[FlightPro_Class720049]
		[FlightPro_Class720050]
		[FlightPro_Class720051]
		[FlightPro_Class720052]
		[FlightPro_Class720053]
		[FlightPro_Class720054]
		[FlightPro_Class720055]
		[FlightPro_Class720056]
		[FlightPro_Class720057]
		[FlightPro_Class720058]
		[FlightPro_Class720059]
		[FlightPro_Class720060]
		[FlightPro_Class720061]
		[FlightPro_Class720062]
		[FlightPro_Class720063]
		[FlightPro_Class720064]
		[FlightPro_Class720065]
		[FlightPro_Class720066]
		[FlightPro_Class720067]
		[FlightPro_Class720068]
		[FlightPro_Class720069]
		[FlightPro_Class720070]
		[FlightPro_Class720071]
		[FlightPro_Class720072]
		[FlightPro_Class720073]
		[FlightPro_Class720074]
		[FlightPro_Class720075]
		[FlightPro_Class720076]
		[FlightPro_Class720077]
		[FlightPro_Class720078]
		[FlightPro_Class720079]
		[FlightPro_Class720080]))

([FlightPro_Class660024] of  CloFunction

	(source "(println [:CMD-WIKIPEDIA params])\n(if (:on @WIKI)\n  (do (vswap! WIKI assoc :on false)\n    (asp/pump-in (:instructions CHN)\n	 {:instruct :clear-placemarks})\n    (vswap! WIKI assoc :bbx [0 0 0 0]))\n  (let [[n s w e] @fr24/BBX]\n    (vswap! WIKI assoc :on true)\n    (visible {:n (str n) :s (str s) :w (str w) :e (str e)})))\n(println [:WIKI (:on @WIKI)])\n\"\"")
	(title "wikipedia [params]"))

([FlightPro_Class660025] of  CloVar

	(source "(volatile! \n  {:on false\n   :bbx [0 0 0 0]})")
	(title "WIKI"))

([FlightPro_Class670000] of  CloProgram

	(cloFunctions
		[FlightPro_Class670006]
		[FlightPro_Class670265]
		[FlightPro_Class670266]
		[FlightPro_Class700002]
		[FlightPro_Class700003]
		[FlightPro_Class700000]
		[FlightPro_Class660000]
		[FlightPro_Class730003])
	(cloNamespace [FlightPro_Class670001])
	(cloVars [FlightPro_Class330004])
	(title "External Data"))

([FlightPro_Class670001] of  CloNamespace

	(source "(:use protege.core)\n(:require \n  [wiki.gis :as wig]\n  [cesium.core :as cz]\n  [calc.geo :as geo]\n  [async.proc :as asp]\n  [geo.names :as gn])")
	(title "ext.data"))

([FlightPro_Class670004] of  %3AINSTANCE-ANNOTATION

	(%3AANNOTATED-INSTANCE [FlightPro_Class660006])
	(%3AANNOTATION-TEXT "Current BBXWiki Request")
	(%3ACREATION-TIMESTAMP "2017.02.17 14:12:37.199 MSK")
	(%3ACREATOR "ru"))

([FlightPro_Class670006] of  CloMacro

	(source "`(let [f# (future (do ~@body))\n         v# (gensym)\n         result# (deref f# ~msec v#)]\n    (if (= v# result#)\n      (do\n        (println :FUTURE-CANCELLING)\n        (future-cancel f#)\n        (println :FUTURE-CANCELLED)\n        nil)\n      result#))")
	(title "with-timeout [msec & body]"))

([FlightPro_Class670007] of  CloFuncall

	(source "(ext.data/get-bbx-wiki 60.1 59.9 29.8 30.2)"))

([FlightPro_Class670008] of  BBX

	(title "Current")
	(wsen 23.168793 59.249733 24.412994 59.905468))

([FlightPro_Class670009] of  CloFuncall

	(source "(vec (ext.data/get-bbx-wiki 60.1 59.9 29.8 30.2))"))

([FlightPro_Class670010] of  CloFuncall

	(source "(vec (ext.data/get-bbx-wiki 60.2 59.8 29.7 30.3))"))

([FlightPro_Class670011] of  CloFuncall

	(source "(wiki.gis/bbx-of-list [[60.1 29.9][59.9 30.1]] \"QQ\")"))

([FlightPro_Class670013] of  CloFuncall

	(source "(wiki.gis/bbx-of-list [[60.2 29.9][59.8 30.1]] \"QQ\")"))

([FlightPro_Class670020] of  CloFuncall

	(source "(vec (ext.data/get-bbx-wiki 60.3 60.1 29.8 30.2))"))

([FlightPro_Class670036] of  CloFuncall

	(source "(count (ext.data/get-bbx-wiki 40.9 40.7 -74.3 -74.1 29.8))"))

([FlightPro_Class670037] of  CloFuncall

	(source "(count (ext.data/get-bbx-wiki 40.9 40.7 -74.3 -74.1))"))

([FlightPro_Class670113] of  CloFuncall

	(source "(count (ext.data/get-bbx-wiki 40.7 40.5 -74.7 -74.3))"))

([FlightPro_Class670265] of  CloFunction

	(source "{:instruct :create-placemark\n :iname (.getName dati)\n :lat (sv dati \"lat\")\n :lon (sv dati \"lng\")\n :feature (sv dati \"feature\")}")
	(title "placemark-instruct [dati]"))

([FlightPro_Class670266] of  CloFunction

	(source "(let [head (str \"<h3>\" (sv dati \"title\") \"</h3>\")\n       itag (str \"<img src=\\\"\" (sv dati \"thumbnailImg\") \"\\\">\")\n       summ (sv dati \"summary\")\n       addr (str \"http://\" (sv dati \"wikipediaUrl\") \"\\\"\")\n       wiki (str \"<a href=\\\"\" addr \"\\\">\" addr \"</a>\")\n       html (str head itag \"<br>\" summ \"<br>\" wiki)]\n  {:instruct :popup\n    :lat (sv dati \"lat\")\n    :lon (sv dati \"lng\")\n    :html html\n    :time (:ext-data-popup TIO)})")
	(title "placemark-popup-instruct [dati]"))

([FlightPro_Class670268] of  CloFuncall

	(source "(in-ns 'protege.core)"))

([FlightPro_Class670269] of  CloFuncall

	(source "(ins \"FlightPro_Class670205\")"))

([FlightPro_Class670270] of  CloFuncall

	(source "(.show *prj* (ins \"FlightPro_Class670205\"))"))

([FlightPro_Class670271] of  CloFuncall

	(source "(def dati (ins \"FlightPro_Class670205\"))"))

([FlightPro_Class670272] of  CloFuncall

	(source "(name dati)"))

([FlightPro_Class670311] of  CloFunction

	(source "(let [pos (js/L.LatLng. lat lon)\n       ico (js/L.icon #js{:iconUrl (or (URL-ICO feature) \n		     (URL-ICO \"default\"))\n	           :iconSize #js[24, 24]})\n       opt #js{:icon ico :draggable true}\n       mrk (-> js/L (.rotatedMarker pos opt))]\n    (.on mrk \"click\"\n         (fn [e]\n           (info (str \"pm\" iname))))\n    (.addTo mrk @CHART)\n    (vswap! PLACEMARKS assoc iname mrk))")
	(title "create-placemark [iname lat lon feature]"))

([FlightPro_Class670312] of  CloVar

	(source "(volatile! {})")
	(title "PLACEMARKS"))

([FlightPro_Class670313] of  CloFunction

	(source "(doseq [mrk (vals @PLACEMARKS)]\n  (.removeLayer @CHART mrk))\n(vreset! PLACEMARKS {})")
	(title "clear-placemarks []"))

([FlightPro_Class680000] of  Airport

	(altitude 52)
	(coord 27.17831 33.79943)
	(country "Egypt")
	(iata "HRG")
	(icao "HEGN")
	(runways 0)
	(title "Hurghada International Airport"))

([FlightPro_Class690000] of  Rule

	(lhs "?q (Question predicate \"intersect\")\n(Flight id ?id1\n           callsign ?cs1\n           coord ?crd1\n           course ?crs1\n           speed ?spd1\n           altitude ?a1\n           age \"CURRENT\")\n(Flight id ?id2\n           callsign ?cs2\n           coord ?crd2\n           course ?crs2\n           speed ?spd2\n           altitude ?a2\n           age \"CURRENT\"\n           ((<= (.compareTo ?id1 ?id2) 0)\n            (and (> ?spd1 0) (> ?spd2 0))\n            [(and (> ?a1 0) (> ?a2 0) (< (Math/abs (- ?a1 ?a2)) 10000))\n             (and (== ?a1 0) (== ?a2 0))]\n            (< (calc.geo/distance-nm ?crd1 ?crd2)\n               (es/max-distance ?spd1 ?spd2))))")
	(rhs "(when-let [[dmin tmin] (es/intersect? ?crd1 ?crs1 ?spd1 ?crd2 ?crs2 ?spd2 ?id1 ?id2)]\n  (println [:Dmin dmin :Tmin tmin :Who ?cs1 ?cs2])\n  (es/pom-and-link ?id1 ?crd1 ?crs1 ?spd1 ?cs1 ?id2 ?crd2 ?crs2 ?spd2 ?cs2 dmin tmin))")
	(salience 0)
	(title "qq:Check2FlightsIntersection"))

([FlightPro_Class690001] of  CloFuncall

	(source "(< \"abc\" \"abd\")"))

([FlightPro_Class690002] of  CloFuncall

	(source "(.compareTo \"abc\" \"abd\")"))

([FlightPro_Class690003] of  CloFuncall

	(source "(.compareTo \"abe\" \"abd\")"))

([FlightPro_Class690004] of  CloFunction

	(source "(when-let [crd3 (geo/future-intersect crd1 crs1 spd1 crd2 crs2 spd2 INTS-TIME)]\n  (let [d1 (geo/distance-nm crd1 crd3)\n         tmin (/ d1 spd1)\n         crd4 (geo/future-pos crd2 crs2 spd2 tmin)\n         dmin (geo/distance-nm crd3 crd4)]\n     (if (< dmin INTS-DMIN)\n       [dmin tmin])))")
	(title "intersect? [crd1 crs1 spd1 crd2 crs2 spd2 id1 id2]"))

([FlightPro_Class690005] of  CloVar

	(source ";; forcast time for intersection in hours (6 min)\n0.1")
	(title "INTS-TIME"))

([FlightPro_Class690006] of  CloVar

	(source ";; distance of intersection in nautical miles (~400 m)\n0.215")
	(title "INTS-DMIN"))

([FlightPro_Class690007] of  Rule

	(lhs "?q (Question)")
	(rhs "(retract ?q)")
	(salience -1)
	(title "qq:RetractQuestion"))

([FlightPro_Class690008] of  CloFunction

	(source "(condp = q\n  \"questions\" nil\n  (am/ask-server {:whom \"es\" :predicate q}))")
	(title "question [q]"))

([FlightPro_Class690009] of  CloFunction

	(source "(* (+ spd1 spd2) INTS-TIME)")
	(title "max-distance [spd1 spd2]"))

([FlightPro_Class690010] of  CloFunction

	(source "(put-on-map id1 crd1 crs1 spd1 \"INTERSECT\")\n(put-on-map id2 crd2 crs2 spd2 \"INTERSECT\")\n(asp/pump-in (:instructions  cmd/CHN)\n	{:instruct :add-link\n                         :ids [id1 id2]\n                         :options {:weight 4\n	                :title (str cs1 \" - \" cs2)\n	                :color \"red\"\n	                :dmin dmin	\n	                :tmin tmin}})")
	(title "pom-and-link [id1 crd1 crs1 spd1 cs1 id2 crd2 crs2 spd2 cs2 dmin tmin]"))

([FlightPro_Class690011] of  CloFuncall

	(source "(ru.rules/f 41)"))

([FlightPro_Class690012] of  CloVar

	(source "(volatile! {})")
	(title "LINKS"))

([FlightPro_Class690013] of  CloFunction

	(source "(let [ops (clj->js options)\n       tmin (:tmin options)\n       del (if (number? tmin)\n               (int (* 60000 tmin))\n               30000)\n       llg (collect-llga ids)\n       lnk (js/L.polyline llg ops)]\n  (.addLayer @CHART lnk)\n  (.bindPopup lnk (linkPopup ids options))\n  (vswap! LINKS assoc ids lnk)\n  (if (> del 0)\n    (asp/delayer #(do (.removeLayer @CHART lnk)\n	     (vswap! LINKS dissoc ids)) del)))")
	(title "add-link [ids options]"))

([FlightPro_Class690014] of  CloFunction

	(source "(let [vhs (filter some? (map #(@VEHICLES %) ids))\n       mks (map #(:marker @%) vhs)\n       llgs (map #(.getLatLng %) mks)]\n  (clj->js llgs))")
	(title "collect-llga [ids]"))

([FlightPro_Class690015] of  CloFunction

	(source "(let [vhs @VEHICLES\n       alt1 (:altitude @(vhs id1))\n       alt2 (:altitude @(vhs id2))\n       adif (- alt1 alt2)\n       titl (:title ops)\n       dmin (:dmin ops )\n       tmin (:tmin ops)]\n  (str \"<h3>\" titl \"</h3>\"\n       \"<table>\"\n       \"<tr><td>Dmin</td><td>\" (if (number? dmin) (int (* 1852 dmin))) \" m</td></tr>\"\n       \"<tr><td>Tmin</td><td>\" (if (number? tmin) (int (* 60 tmin))) \" min</td></tr>\"\n       \"<tr><td>Alt-diff</td><td>\" adif \" ft</td></tr>\"\n       \"</table>\"))")
	(title "linkPopup [[id1 id2] ops]"))

([FlightPro_Class690080] of  CloFuncall
)

([FlightPro_Class690508] of  CloFunction

	(source "(println [:CMD-INTERSECT params])\n\"\"")
	(title "intersect [params]"))

([FlightPro_Class7] of  CloVar

	(source "(js/EventSource. (str BSE-URL \"czml/\"))")
	(title "EVT-SRC"))

([FlightPro_Class70000] of  CloVar

	(source "\"http://localhost:\"")
	(title "HOST"))

([FlightPro_Class700000] of  CloFunction

	(source "(let [lat (sv dati \"lat\")\n       lon (sv dati \"lng\")\n       dis (geo/distance-nm (:our-center wiki) [lat lon])]\n  (cz/point-out (sv dati \"title\") [lat lon] dis (:our-radius wiki)))")
	(title "point-out-place [dati wiki]"))

([FlightPro_Class700001] of  CloFuncall

	(source "(ru.rules/dr)"))

([FlightPro_Class700002] of  CloFunction

	(source "[(/ (+ n s) 2) (/ (+ w e) 2)]")
	(title "our-center [n s w e]"))

([FlightPro_Class700003] of  CloFunction

	(source "(/ (* (- n s) 60) 2)")
	(title "our-radius [n s]"))

([FlightPro_Class70001] of  CloFunction

	(source "(enable-console-print!)\n(GET (str (:command URL) \"terrain\")\n	{:handler (fn [response]\n		(czm/init-3D-view (:base URL) response))\n	 :error-handler error-handler})\n(asp/repeater mov/move CARRIER (:carrier TIO))\n(asp/repeater ctl/show-flight-data CARRIER (:display TIO))\n(asp/repeater receive-directives (:directives TIO))\n(asp/repeater send-manual-data (:manual-data TIO))\n(ctl/show-controls)")
	(title "on-load []"))

([FlightPro_Class70002] of  CloProgram

	(cloFunctions
		[FlightPro_Class70007]
		[FlightPro_Class70004]
		[FlightPro_Class70005]
		[FlightPro_Class70006]
		[FlightPro_Class70010]
		[FlightPro_Class20010]
		[FlightPro_Class90000]
		[FlightPro_Class70011]
		[FlightPro_Class160018]
		[FlightPro_Class310003])
	(cloNamespace [FlightPro_Class70003])
	(title "Async Processing"))

([FlightPro_Class70003] of  CloNamespace

	(source "(:require \n  [clojure.core.async :refer [chan alts!! put! <! <!! go timeout close!]])")
	(title "async.proc"))

([FlightPro_Class70004] of  CloFunction

	(source "(when (not= @status \"RUN\") \n  (vreset! status \"RUN\")\n  (go (do \n          (while (and (= @status \"RUN\")\n                            (proc-fn))\n                (<! (timeout time-out)))\n          (vreset! status \"STOP\")))\n  @status)")
	(title "start-process [status proc-fn time-out]"))

([FlightPro_Class70005] of  CloFunction

	(source "(vreset! status \"FINISH\")")
	(title "stop-process [status]"))

([FlightPro_Class70006] of  CloFunction

	(source "(= @status \"RUN\")")
	(title "running? [status]"))

([FlightPro_Class70007] of  CloFunction

	(source "([func time-out]\n  (go (while true\n           (func)\n           (<! (timeout time-out)))))\n([func param time-out]\n  (go (while true\n           (func param)\n           (<! (timeout time-out)))))")
	(title "repeater"))

([FlightPro_Class70008] of  ClsRequired

	(cloFunctions
		[FlightPro_Class70007]
		[FlightPro_Class70004]
		[FlightPro_Class70005]
		[FlightPro_Class70006]
		[FlightPro_Class160018]
		[FlightPro_Class310003])
	(cloNamespace [FlightPro_Class70009])
	(title "CS Async Processing"))

([FlightPro_Class70009] of  CloNamespace

	(source "(:require \n  [cljs.core.async :refer [<! timeout close!]])\n(:require-macros \n  [cljs.core.async.macros :refer [go]])")
	(title "csasync.proc"))

([FlightPro_Class70010] of  CloFunction

	(source "(put! chn val)")
	(title "pump-in [chn val]"))

([FlightPro_Class70011] of  CloFunction

	(source "(chan)")
	(title "mk-chan []"))

([FlightPro_Class710000] of  Airport

	(altitude 57)
	(coord 60.25388 25.04416)
	(country "Finland")
	(iata "HEM")
	(icao "EFHF")
	(runways 0)
	(title "Helsinki Malmi Airport"))

([FlightPro_Class710001] of  Airport

	(altitude 219)
	(coord 58.30746 26.69042)
	(country "Estonia")
	(iata "TAY")
	(icao "EETU")
	(runways 0)
	(title "Tartu Airport"))

([FlightPro_Class710089] of  CloFuncall

	(source "(ext.data/WIKI)"))

([FlightPro_Class710093] of  CloFuncall

	(source "pro.commands/WIKI"))

([FlightPro_Class720000] of  Airport

	(altitude 18)
	(coord 58.99075 22.83073)
	(country "Estonia")
	(iata "KDL")
	(icao "EEKA")
	(runways 0)
	(title "Kardla Airport"))

([FlightPro_Class720001] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "FI")
	(feature "city")
	(lang "en")
	(lat 60.1667)
	(lng 24.9333)
	(population 620982)
	(rank 100)
	(summary "Helsinki is the capital and largest city of Finland. It is in the region of Uusimaa, in southern Finland, on the shore of the Gulf of Finland, an arm of the Baltic Sea. Helsinki has a population of , an urban population of 1.2 million (31 December 2013), and a metropolitan population of 1 (...)")
	(thumbnailImg "http://www.geonames.org/img/wikipedia/21000/thumb-20063-100.jpg")
	(title "Helsinki")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Helsinki"))

([FlightPro_Class720002] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(lang "en")
	(lat 60.2333)
	(lng 25.1167)
	(rank 100)
	(summary "The Helsinki Metro , is a rapid transit system serving Helsinki, Finland. It is the world's most northern metro system, and the only one in Finland. The system was opened to the general public on 2 August 1982 after 27 years of planning (...)")
	(title "Helsinki Metro")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Helsinki_Metro"))

([FlightPro_Class720003] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "RU")
	(feature "railwaystation")
	(lang "en")
	(lat 60.1719)
	(lng 24.9413)
	(rank 98)
	(summary "Helsinki Central railway station is a widely recognised landmark in Kluuvi, part of central Helsinki, Finland, and the focal point of public transport in the Greater Helsinki area. The station is used by approximately 200,000 passengers per day, making it Finland's most-visited building (...)")
	(thumbnailImg "http://www.geonames.org/img/wikipedia/147000/thumb-146731-100.jpg")
	(title "Helsinki Central railway station")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Helsinki_Central_railway_station"))

([FlightPro_Class720004] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "FI")
	(feature "edu")
	(lang "en")
	(lat 60.1858)
	(lng 24.8278)
	(rank 98)
	(summary "Aalto University is a university primarily located in Greater Helsinki, Finland. It was established in 2010 as a merger of three major Finnish universities: the Helsinki University of Technology (established 1849), the Helsinki School of Economics (established 1904), and the University of Art and (...)")
	(title "Aalto University")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Aalto_University"))

([FlightPro_Class720005] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(lang "en")
	(lat 60.1706)
	(lng 24.8286)
	(rank 98)
	(summary "Nokia Corporation is a Finnish multinational communications and information technology company, founded in 1865. Nokia is headquartered in Espoo, Uusimaa, in the greater Helsinki metropolitan area. In 2014, Nokia employed 61,656 people across 120 countries, conducts sales in more than 150 countries (...)")
	(title "Nokia")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Nokia"))

([FlightPro_Class720006] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "FI")
	(feature "city")
	(lang "en")
	(lat 60.2167)
	(lng 24.7333)
	(rank 98)
	(summary "Kauniainen is a small town and a municipality of inhabitants in the Helsinki Metropolitan Area, Finland. It is surrounded by the City of Espoo, in Greater Helsinki. Kauniainen was founded by a corporation in 1906, AB Grankulla, that parcelled land and created a suburb for villas; Kauniainen received (...)")
	(title "Kauniainen")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Kauniainen"))

([FlightPro_Class720007] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "FI")
	(feature "city")
	(lang "en")
	(lat 60.4031)
	(lng 25.0253)
	(rank 98)
	(summary "Tuusula is a municipality of Finland. It belongs to the Helsinki sub-region of the Uusimaa region. The municipality has a population of .  (...)")
	(title "Tuusula")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Tuusula"))

([FlightPro_Class720008] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "FI")
	(lang "en")
	(lat 60.2031)
	(lng 24.9255)
	(rank 97)
	(summary "Yleisradio Oy (Finnish), also known as Rundradion (Swedish) or the Finnish Broadcasting Company (English), abbreviated to Yle (pronounced ; previously stylised as YLE before March 2012 corporate rebrand), is Finland's national public-broadcasting company, founded in 1926 (...)")
	(title "Yle")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Yle"))

([FlightPro_Class720009] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "FI")
	(feature "city")
	(lang "en")
	(lat 60.4667)
	(lng 24.8083)
	(rank 96)
	(summary "Nurmijärvi is the most populated rural municipality of Finland, located north of the capital Helsinki. The close proximity to Helsinki has led to a considerable growth of the major villages such as Klaukkala and Rajamäki, which nowadays are considered dormitory towns of Helsinki (...)")
	(title "Nurmijärvi")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Nurmij%C3%A4rvi"))

([FlightPro_Class720010] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(feature "landmark")
	(lang "en")
	(lat 60.1725)
	(lng 24.9331)
	(rank 96)
	(summary "The Eduskunta (or , or) is the parliament of Finland. The unicameral parliament has 200 members and normally meets in the Parliament House in Helsinki. However, during the 2015–2017 renovation of the Parliament House, the parliament meets in the nearby Sibelius Academy (...)")
	(title "Parliament of Finland")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Parliament_of_Finland"))

([FlightPro_Class720011] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(feature "landmark")
	(lang "en")
	(lat 60.1683)
	(lng 24.9422)
	(rank 95)
	(summary "The Stockmann department store is a culturally significant business building and department store located in the centre of Helsinki, Finland. It is one of many department stores owned by the Stockmann corporation (...)")
	(title "Stockmann, Helsinki centre")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Stockmann%2C_Helsinki_centre"))

([FlightPro_Class720012] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(lang "en")
	(lat 60.1783)
	(lng 24.915)
	(rank 94)
	(summary "The Finnish Environment Institute (SYKE) is a research institute and government agency under the Ministry of the Environment, located in Helsinki, Finland. It is both a research institute, and a centre for environmental expertise (...)")
	(title "Finnish Environment Institute")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Finnish_Environment_Institute"))

([FlightPro_Class720013] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(feature "landmark")
	(lang "en")
	(lat 60.169)
	(lng 24.951)
	(rank 93)
	(summary "Aleksanterinkatu is a street in the centre of Helsinki, Finland. In the city plan by Carl Ludvig Engel, it was the Decumanus Maximus, the main east-west street in the city, crossing the Cardo, Unioninkatu (Union Street) at the corner of the Senate Square (...)")
	(title "Aleksanterinkatu")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Aleksanterinkatu"))

([FlightPro_Class720014] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(lang "en")
	(lat 60.1708)
	(lng 24.9375)
	(rank 93)
	(summary "The 2015 Veikkausliiga was the eighty-fifth season of top-tier football in Finland. HJK Helsinki were the defending champions. The season was won by SJK.  (...)")
	(title "2015 Veikkausliiga")
	(wikipediaUrl "http://en.wikipedia.org/wiki/2015_Veikkausliiga"))

([FlightPro_Class720015] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(feature "landmark")
	(lang "en")
	(lat 60.2719)
	(lng 24.9728)
	(rank 93)
	(summary "Suunto Oy is a company that manufactures and markets sports watches, dive computers, compasses and precision instruments. Headquartered in Vantaa, Finland, Suunto employs more than 300 people worldwide, and its products are sold in over 100 countries (...)")
	(title "Suunto")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Suunto"))

([FlightPro_Class720016] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "FI")
	(feature "city")
	(lang "en")
	(lat 60.2)
	(lng 24.9325)
	(rank 92)
	(summary "is a suburb in Helsinki, Finland. It is a central-northern neighbourhood, bordering Alppila to the south, Central Park (Keskuspuisto) to the west and Vallila to the east. The eastern and western part of Pasila are separated by a large railroad classification yard, which, as Central Pasila, is (...)")
	(thumbnailImg "http://www.geonames.org/img/wikipedia/130000/thumb-129253-100.jpg")
	(title "Pasila")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Pasila"))

([FlightPro_Class720017] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(feature "landmark")
	(lang "en")
	(lat 60.1877)
	(lng 24.9227)
	(rank 92)
	(summary "Sonera Stadium (until August 2010 Finnair Stadium; also known as Töölön jalkapallostadion, \"Töölö football stadium\") is a football stadium in Helsinki, Finland. The stadium was inaugurated in 2000. It has a capacity of 10,770 spectators (...)")
	(title "Sonera Stadium")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Sonera_Stadium"))

([FlightPro_Class720018] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "FI")
	(feature "city")
	(lang "en")
	(lat 60.1833)
	(lng 24.8333)
	(rank 91)
	(summary "Otaniemi (Finnish), or Otnäs (Swedish), is a district of Espoo, Finland. It is located near the border of Helsinki, the capital of Finland. Otaniemi is the home of the Aalto University engineering schools campus, thus \"Otaniemi\" is often used as a synonym for Aalto (...)")
	(title "Otaniemi")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Otaniemi"))

([FlightPro_Class720019] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(feature "landmark")
	(lang "en")
	(lat 60.175)
	(lng 24.9319)
	(rank 90)
	(summary "The National Museum of Finland presents Finnish history from the Stone Age to the present day, through objects and cultural history. The Finnish National Romantic style building is located in central Helsinki and is a part of the National Board of Antiquities , under the Ministry of Culture and (...)")
	(title "National Museum of Finland")
	(wikipediaUrl "http://en.wikipedia.org/wiki/National_Museum_of_Finland"))

([FlightPro_Class720020] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "FI")
	(feature "city")
	(lang "en")
	(lat 60.475)
	(lng 25.375)
	(rank 90)
	(summary "Pornainen is a municipality of Finland. It is located in the province of Southern Finland and is part of the Uusimaa region. The municipality has a population of and covers an area of of which is water. The population density is . The municipality is unilingually Finnish.  (...)")
	(title "Pornainen")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Pornainen"))

([FlightPro_Class720021] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(feature "landmark")
	(lang "en")
	(lat 60.1722)
	(lng 24.9437)
	(rank 90)
	(summary "The Finnish National Theatre , founded in 1872 in the city of Pori, is a theatre located in central Helsinki on the northern side of the Helsinki Central Railway Station Square. The Finnish National Theatre is the oldest Finnish speaking professional theatre in Finland (...)")
	(title "Finnish National Theatre")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Finnish_National_Theatre"))

([FlightPro_Class720022] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "FI")
	(feature "landmark")
	(lang "en")
	(lat 60.1747)
	(lng 24.9836)
	(rank 89)
	(summary "Korkeasaari is an island in Helsinki, Finland where the country's biggest zoo is situated. The English name of the zoo is Helsinki Zoo. The zoo is located on a rocky island, connected to the mainland via a bridge to the Helsinki district of Mustikkamaa, where there is access to the zoo all year (...)")
	(thumbnailImg "http://www.geonames.org/img/wikipedia/10000/thumb-9385-100.jpg")
	(title "Korkeasaari")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Korkeasaari"))

([FlightPro_Class720023] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "FI")
	(feature "landmark")
	(lang "en")
	(lat 60.159)
	(lng 24.949)
	(rank 89)
	(summary "is the southern-most city district of Helsinki, in Finland. The name Ullanlinna refers to the fortification line that was built at the southern edge of the area during the 18th century (no longer visible), as part of the town fortifications, which also included the fortress of  (...)")
	(title "Ullanlinna")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Ullanlinna"))

([FlightPro_Class720024] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(feature "city")
	(lang "en")
	(lat 60.2931)
	(lng 25.0439)
	(rank 89)
	(summary "Tikkurila is a district and major region of the municipality of Vantaa, Finland. Located in the eastern half of the Helsinki conurbation, some north of the capital's downtown district, it is the administrative and commercial hub of Vantaa, although Myyrmäki is a rival commercial hub within the (...)")
	(title "Tikkurila")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Tikkurila"))

([FlightPro_Class720025] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(feature "city")
	(lang "en")
	(lat 60.1864)
	(lng 24.9681)
	(rank 89)
	(summary "Sörnäinen (; Sörkkä or Sörkka in Helsinki slang) is a neighbourhood in the city of Helsinki, Finland. Sörnäinen is located a little more than one kilometre north from the coastal centre of Helsinki, near the district of Hakaniemi. The east side of Sörnäinen borders the sea (...)")
	(title "Sörnäinen")
	(wikipediaUrl "http://en.wikipedia.org/wiki/S%C3%B6rn%C3%A4inen"))

([FlightPro_Class720026] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "FI")
	(feature "landmark")
	(lang "en")
	(lat 60.1722)
	(lng 24.9475)
	(rank 89)
	(summary "University of Helsinki is a station on the Helsinki Metro. It serves the central Helsinki district of Kaisaniemi and was known by this name until the end of 2014. The station is 27 metres below ground level and 22 metres below sea level (...)")
	(title "University of Helsinki metro station")
	(wikipediaUrl "http://en.wikipedia.org/wiki/University_of_Helsinki_metro_station"))

([FlightPro_Class720027] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(feature "landmark")
	(lang "en")
	(lat 60.175)
	(lng 24.96)
	(rank 88)
	(summary "The Military Museum of Finland is the central museum of the Finnish Defence Forces and the national special museum of military history. It is located in Helsinki and it is part of the Finnish National Defence University (...)")
	(title "Military Museum of Finland")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Military_Museum_of_Finland"))

([FlightPro_Class720028] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(feature "landmark")
	(lang "en")
	(lat 60.1717)
	(lng 24.9369)
	(rank 88)
	(summary "Kiasma is a contemporary art museum located on Mannerheimintie in Helsinki, Finland. Its name kiasma, Finnish for chiasma, alludes to the basic conceptual idea of its architect, Steven Holl. The museum exhibits the contemporary art collection of the Finnish National Gallery founded in 1990 (...)")
	(title "Kiasma")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Kiasma"))

([FlightPro_Class720029] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(feature "isle")
	(lang "en")
	(lat 60.1861)
	(lng 25.0069)
	(rank 88)
	(summary "Kulosaari is an island and a suburb in Helsinki, Finland. It is also the 42nd neighbourhood of the city. Construction of villas on the island started in the beginning of the 20th century, and a bridge from Sörnäinen was opened in 1919 (...)")
	(thumbnailImg "http://www.geonames.org/img/wikipedia/139000/thumb-138317-100.jpg")
	(title "Kulosaari")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Kulosaari"))

([FlightPro_Class720030] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "FI")
	(feature "city")
	(lang "en")
	(lat 60.2503)
	(lng 25.0097)
	(population 22336)
	(rank 88)
	(summary "Oulunkylä (also known as Ogeli) is a suburb and a neighbourhood of Helsinki, the capital of Finland. It is located north from the center of the city. It has been inhabited since the 13th century. Earlier an independent municipality, it was made part of Helsinki in 1946 (...)")
	(title "Oulunkylä")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Oulunkyl%C3%A4"))

([FlightPro_Class720031] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "FI")
	(feature "city")
	(lang "en")
	(lat 60.1714)
	(lng 24.9461)
	(rank 88)
	(summary "Kluuvi is the commercial centre of Helsinki, Finland, and a neighbourhood in the Vironniemi district of Helsinki. The Helsinki Central railway station, the Helsinki main post office, the Stockmann and Sokos department stores, the Kluuvi shopping centre and the main offices of Finnish banks are (...)")
	(title "Kluuvi")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Kluuvi"))

([FlightPro_Class720032] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(feature "city")
	(lang "en")
	(lat 60.1617)
	(lng 24.9381)
	(rank 87)
	(summary "Punavuori is a neighbourhood in Helsinki, the capital of Finland. The name Punavuori (English: Red mountain) refers to red cliffs located between Sepänkatu and Punavuorenkatu. They were still visible in the 19th century, nowadays they are covered with buildings and pavement (...)")
	(title "Punavuori")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Punavuori"))

([FlightPro_Class720033] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(feature "city")
	(lang "en")
	(lat 60.162)
	(lng 24.914)
	(rank 87)
	(summary "Ruoholahti (Swedish: Gräsviken) is a quarter in Helsinki, part of the Länsisatama neighbourhood and Kampinmalmi district. The name means Grass Bay and is pronounced . Ruoholahti is located in the southwestern part of the central city area of Helsinki, close to the Lauttasaari island, and it (...)")
	(title "Ruoholahti")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Ruoholahti"))

([FlightPro_Class720034] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(lang "en")
	(lat 60.2167)
	(lng 24.95)
	(rank 87)
	(summary "Uusimaa (Swedish: Nyland), is a historical province in the south of Finland. It borders Finland Proper, Tavastia, Savonia, and Karelia. The English translation would be \"new land\". From the Middle Ages to 1809, most of the present-day Finland was a part of Sweden (...)")
	(title "Uusimaa (historical province)")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Uusimaa_%28historical_province%29"))

([FlightPro_Class720035] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(feature "isle")
	(lang "en")
	(lat 60.1456)
	(lng 25.0442)
	(rank 87)
	(summary "Santahamina is an island and neighbourhood of Eastern Helsinki, Finland. At present it is a military base housing the Guard Jaeger Regiment, making access restricted. The Finnish National Defence University (NDU) is also located on the island (...)")
	(title "Santahamina")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Santahamina"))

([FlightPro_Class720036] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(feature "landmark")
	(lang "en")
	(lat 60.1676)
	(lng 24.9548)
	(rank 87)
	(summary "The Market Square (Kauppatori in Finnish, Salutorget in Swedish) is a central square in Helsinki, Finland, and one of the most famous market places and tourist attractions in the city. The Market Square is located near the centre of Helsinki, at the eastern end of Esplanadi and bordering the Baltic (...)")
	(title "Market Square, Helsinki")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Market_Square%2C_Helsinki"))

([FlightPro_Class720037] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(feature "landmark")
	(lang "en")
	(lat 60.1703)
	(lng 24.9508)
	(rank 87)
	(summary "The National Library of Finland is the foremost research library in Finland. Administratively the library is part of the University of Helsinki. Until 1 August 2006, it was known as the Helsinki University Library. The National Library is responsible for storing the Finnish cultural heritage (...)")
	(title "National Library of Finland")
	(wikipediaUrl "http://en.wikipedia.org/wiki/National_Library_of_Finland"))

([FlightPro_Class720038] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(lang "en")
	(lat 60.3508)
	(lng 25.0778)
	(rank 87)
	(summary "Korso is a district and major region in northeastern Vantaa, Finland. The district has 7,402 inhabitants (as of 1 January 2014). Since 2007, the Korso major region has included the following nine districts: Matari, Korso, Mikkola, Metsola, Leppäkorpi, Jokivarsi, Nikinmäki, Vierumäki and Vallinoja (...)")
	(title "Korso")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Korso"))

([FlightPro_Class720039] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(lang "en")
	(lat 60.2144)
	(lng 24.9506)
	(rank 86)
	(summary "Käpylä is a neighbourhood of Helsinki with 7,600 inhabitants. Administratively speaking, Käpylä is a part of the Vanhakaupunki district. It is located between Kumpula, Oulunkylä and Koskela. Käpylä has a terminus for route-1 of the Helsinki tram network (...)")
	(title "Käpylä")
	(wikipediaUrl "http://en.wikipedia.org/wiki/K%C3%A4pyl%C3%A4"))

([FlightPro_Class720040] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "FI")
	(feature "city")
	(lang "en")
	(lat 60.21)
	(lng 24.89)
	(population 2377)
	(rank 86)
	(summary "Huopalahti was a municipality during the years 1920–1945 in Uusimaa, Finland. The municipality was bilingual. Current areas of Munkkiniemi, Lauttasaari and parts of northern Pasila were parts of Huopalahti. The area was separated from former Helsinki parish in 1920 (...)")
	(title "Huopalahti")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Huopalahti"))

([FlightPro_Class720041] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "EE")
	(elevation 18)
	(lang "en")
	(lat 59.35)
	(lng 24.0583)
	(rank 98)
	(summary "Paldiski is a town and Baltic Sea port situated on the Pakri peninsula of north-western Estonia. Originally a Swedish settlement known as Rågervik, it became a Russian naval base in the 18th century. The Russians renamed it Балтийский Порт (\"Baltiyskiy Port\", i.e. Baltic Port) in 1762 (...)")
	(thumbnailImg "http://www.geonames.org/img/wikipedia/61000/thumb-60631-100.jpg")
	(title "Paldiski")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Paldiski"))

([FlightPro_Class720042] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "EE")
	(elevation 8)
	(feature "isle")
	(lang "en")
	(lat 59.2917)
	(lng 23.3861)
	(rank 92)
	(summary "Osmussaar is an Estonian island situated in the mouth of the Gulf of Finland in the Baltic Sea, 7.5 km off the Estonian mainland. Administratively the island is part of Noarootsi Parish in Lääne County. Its area is  (...)")
	(thumbnailImg "http://www.geonames.org/img/wikipedia/89000/thumb-88583-100.jpg")
	(title "Osmussaar")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Osmussaar"))

([FlightPro_Class720043] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(elevation 7)
	(lang "en")
	(lat 59.35)
	(lng 24.05)
	(rank 90)
	(summary "The Estonian Land Forces is the name of the unified ground forces among the Estonian Defence Forces where it has an offensive military formation role. It is currently also the largest military branch with the average size during the peacetime with around 6,000 soldiers, conscripts and officers (...)")
	(title "Maavägi")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Maav%C3%A4gi"))

([FlightPro_Class720044] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "EE")
	(elevation 8)
	(feature "isle")
	(lang "en")
	(lat 59.3227)
	(lng 23.924)
	(rank 85)
	(summary "Pakri Islands are two Estonian islands in the Finnish Gulf: Suur-Pakri and Väike-Pakri (and). Administratively they belong to the town of Paldiski. For centuries the islands had been inhabited by Estonian Swedes, until during the Second World War the entire population was forced to leave.  (...)")
	(title "Pakri Islands")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Pakri_Islands"))

([FlightPro_Class720045] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "LV")
	(lang "en")
	(lat 59.3)
	(lng 23.35)
	(rank 83)
	(summary "SMS Magdeburg (\"His Majesty's Ship Magdeburg\") was a lead ship of the of light cruisers in the German Kaiserliche Marine (Imperial Navy). Her class included three other ships: , , and . Magdeburg was built at the AG Weser shipyard in Bremen from 1910 to August 1912, when she was commissioned into (...)")
	(title "SMS Magdeburg")
	(wikipediaUrl "http://en.wikipedia.org/wiki/SMS_Magdeburg"))

([FlightPro_Class720046] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(elevation 12)
	(feature "river")
	(lang "en")
	(lat 59.4036)
	(lng 24.2802)
	(rank 81)
	(summary "Keila River is a river in Northern Estonia.  (...)")
	(title "Keila River")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Keila_River"))

([FlightPro_Class720047] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "EE")
	(elevation 18)
	(feature "city")
	(lang "en")
	(lat 59.32)
	(lng 24.214)
	(rank 80)
	(summary "Klooga is a small borough in Keila Parish in Harju County in northern Estonia. As of 2011 Census, the settlement's population was 1,203, of which the Estonians were 642 (53.4%). During the German occupation in World War II a Nazi labor camp was situated there (...)")
	(title "Klooga")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Klooga"))

([FlightPro_Class720048] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "EE")
	(elevation 29)
	(feature "city")
	(lang "en")
	(lat 59.3883)
	(lng 24.4119)
	(rank 80)
	(summary "Vääna is a village in Harku Parish, Harju County in northern Estonia. It has a population of 266 (as of 1 June 2010). Vääna is located about from the capital Tallinn.  (...)")
	(title "Vääna")
	(wikipediaUrl "http://en.wikipedia.org/wiki/V%C3%A4%C3%A4na"))

([FlightPro_Class720049] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "EE")
	(elevation 18)
	(feature "landmark")
	(lang "en")
	(lat 59.3201)
	(lng 24.2134)
	(rank 80)
	(summary "Klooga was a Nazi labor subcamp of the Vaivara concentration camp complex established in September 1943 in Harju County, during World War II, in German-occupied Estonia near the northern Estonian village Klooga (...)")
	(title "Klooga concentration camp")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Klooga_concentration_camp"))

([FlightPro_Class720050] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "EE")
	(elevation 19)
	(feature "airport")
	(lang "en")
	(lat 59.2603)
	(lng 24.2085)
	(rank 78)
	(summary "Ämari Air Base (also given in references as Suurküla (original Estonian name), Vasalemma, Emari, Suurkyul, Shuurkyul, and Shuurkul - last forms of the Estonian names are derivates of names Russian-speaking military personnel used when it was used by the Soviet military (...)")
	(title "Ämari Air Base")
	(wikipediaUrl "http://en.wikipedia.org/wiki/%C3%84mari_Air_Base"))

([FlightPro_Class720051] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "EE")
	(elevation 31)
	(feature "city")
	(lang "en")
	(lat 59.3986)
	(lng 24.2986)
	(rank 76)
	(summary "Keila-Joa is a small borough in Keila Parish, Harju County, northern Estonia. It has a population of 309 (as of 1 January 2004).  (...)")
	(title "Keila-Joa")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Keila-Joa"))

([FlightPro_Class720052] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "EE")
	(elevation 14)
	(feature "city")
	(lang "en")
	(lat 59.435)
	(lng 24.3581)
	(rank 75)
	(summary "Vääna-Jõesuu is a village in Harku Parish, Harju County in northern Estonia. It has a population of 686 (as of 1 June 2010).  (...)")
	(title "Vääna-Jõesuu")
	(wikipediaUrl "http://en.wikipedia.org/wiki/V%C3%A4%C3%A4na-J%C3%B5esuu"))

([FlightPro_Class720053] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "FI")
	(feature "landmark")
	(lang "en")
	(lat 59.8203)
	(lng 23.4525)
	(rank 74)
	(summary "Ekenäs Archipelago National Park is situated in the Ekenäs archipelago, in the Uusimaa region of Finland. It was established in 1989 and covers . The park is maintained by Metsähallitus (Ministry of Forestry). Most of the park's area is composed of rock islets near the open sea, and the water areas (...)")
	(title "Ekenäs Archipelago National Park")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Eken%C3%A4s_Archipelago_National_Park"))

([FlightPro_Class720054] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "EE")
	(elevation 27)
	(feature "landmark")
	(lang "en")
	(lat 59.396)
	(lng 24.2947)
	(rank 72)
	(summary "The Keila Waterfall is a waterfall in Northern Estonia on Keila River. It is the third most powerful waterfall in Estonia after Narva and Jägala. It is 6 meters high and 60–70 meters wide.  (...)")
	(title "Keila Waterfall")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Keila_Waterfall"))

([FlightPro_Class720055] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "EE")
	(elevation 28)
	(feature "city")
	(lang "en")
	(lat 59.4106)
	(lng 24.3089)
	(population 499)
	(rank 71)
	(summary "Türisalu is a village in Harku Parish, Harju County in northern Estonia. It has a population of 499 (as of 1 June 2010). An infamous suicide place Türisalu cliff is located in the village.  (...)")
	(title "Türisalu")
	(wikipediaUrl "http://en.wikipedia.org/wiki/T%C3%BCrisalu"))

([FlightPro_Class720056] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "EE")
	(elevation 9)
	(lang "en")
	(lat 59.3616)
	(lng 24.247)
	(rank 70)
	(summary "Kloogaranna is a village in Keila Parish, Harju County, Estonia. It has a population of 121 (1 January 2004). Kloogaranna has a station on the Elektriraudtee rail line.  (...)")
	(title "Kloogaranna")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Kloogaranna"))

([FlightPro_Class720057] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "EE")
	(elevation 21)
	(feature "city")
	(lang "en")
	(lat 59.2897)
	(lng 24.1231)
	(rank 65)
	(summary "Madise is a village in Padise Parish, Harju County, Estonia. It is the birthplace of Bengt Gottfried Forselius.  (...)")
	(title "Madise, Harju County")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Madise%2C_Harju_County"))

([FlightPro_Class720058] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "EE")
	(elevation 23)
	(feature "city")
	(lang "en")
	(lat 59.4692)
	(lng 24.3839)
	(population 756)
	(rank 64)
	(summary "Suurupi is a village in Harku Parish, Harju County in northern Estonia. It has a population of 756 (as of 1 June 2010).  (...)")
	(title "Suurupi")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Suurupi"))

([FlightPro_Class720059] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "EE")
	(elevation 32)
	(lang "en")
	(lat 59.3586)
	(lng 24.3958)
	(rank 64)
	(summary "Humala is a village in Harku Parish, Harju County in northern Estonia. It has a population of 33 (as of 1 June 2010).  (...)")
	(title "Humala, Estonia")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Humala%2C_Estonia"))

([FlightPro_Class720060] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "EE")
	(elevation 27)
	(lang "en")
	(lat 59.4017)
	(lng 24.4006)
	(rank 64)
	(summary "Vaila is a village in Harku Parish, Harju County in northern Estonia. It has a population of 79 (as of 1 June 2010).  (...)")
	(title "Vaila, Estonia")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Vaila%2C_Estonia"))

([FlightPro_Class720061] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "EE")
	(elevation 11)
	(lang "en")
	(lat 59.3253)
	(lng 24.1272)
	(rank 63)
	(summary "Laoküla is a village in Keila Parish, Harju County in northern Estonia. Laoküla has a station on the Elektriraudtee western route.")
	(title "Laoküla")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Laok%C3%BCla"))

([FlightPro_Class720062] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "EE")
	(elevation 21)
	(feature "city")
	(lang "en")
	(lat 59.3167)
	(lng 24.1667)
	(rank 63)
	(summary "Põllküla is a village in Keila Parish in Harju County in northern Estonia. It had the population of 38 (1 January 2004). Põllküla has a station on the Elektriraudtee western route.  (...)")
	(title "Põllküla")
	(wikipediaUrl "http://en.wikipedia.org/wiki/P%C3%B5llk%C3%BCla"))

([FlightPro_Class720063] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "EE")
	(elevation 30)
	(feature "city")
	(lang "en")
	(lat 59.3)
	(lng 24.3167)
	(rank 62)
	(summary "Niitvälja is a village in Keila Parish, Harju County in northern Estonia. Baltics first 18 hole golf course is located in Niitvälja.")
	(title "Niitvälja")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Niitv%C3%A4lja"))

([FlightPro_Class720064] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "EE")
	(elevation 45)
	(feature "city")
	(lang "en")
	(lat 59.3392)
	(lng 24.3928)
	(rank 62)
	(summary "Karjaküla is a small borough in Keila Parish, Harju County, northern Estonia. It has a population of 387 (as of 1 January 2004). Russian military leader Ivan Gannibal (1735–1801), was born in Karjaküla Manor.  (...)")
	(title "Karjaküla")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Karjak%C3%BCla"))

([FlightPro_Class720065] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "EE")
	(elevation 36)
	(lang "en")
	(lat 59.4458)
	(lng 24.38)
	(rank 61)
	(summary "Viti is a village in Harku Parish, Harju County in northern Estonia. It has a population of 331 (as of 1 June 2010).  (...)")
	(title "Viti, Estonia")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Viti%2C_Estonia"))

([FlightPro_Class720066] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "EE")
	(elevation 35)
	(lang "en")
	(lat 59.37)
	(lng 24.3744)
	(rank 61)
	(summary "Adra is a village in Harku Parish, Harju County in northern Estonia. It has a population of 87 (as of 1 June 2010).  (...)")
	(title "Adra, Estonia")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Adra%2C_Estonia"))

([FlightPro_Class720067] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "EE")
	(elevation 24)
	(feature "city")
	(lang "en")
	(lat 59.4056)
	(lng 24.3625)
	(population 124)
	(rank 60)
	(summary "Naage is a village in Harku Parish, Harju County in northern Estonia. It has a population of 124 (as of 1 June 2010).  (...)")
	(title "Naage")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Naage"))

([FlightPro_Class720068] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "EE")
	(elevation 31)
	(feature "city")
	(lang "en")
	(lat 59.2833)
	(lng 24.3333)
	(rank 59)
	(summary "Kulna is a village in Keila Parish, Harju County in northern Estonia. Kulna has a station on the Elektriraudtee western route.")
	(title "Kulna")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Kulna"))

([FlightPro_Class720069] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "EE")
	(elevation 11)
	(feature "city")
	(lang "en")
	(lat 59.2667)
	(lng 24.0167)
	(rank 59)
	(summary "Kurkse is a village in Padise Parish, Harju County in northern Estonia.  (...)")
	(title "Kurkse")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Kurkse"))

([FlightPro_Class720070] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "EE")
	(elevation 25)
	(feature "city")
	(lang "en")
	(lat 59.3667)
	(lng 24.2667)
	(rank 59)
	(summary "Käesalu is a village in Keila Parish, Harju County in northern Estonia.")
	(title "Käesalu")
	(wikipediaUrl "http://en.wikipedia.org/wiki/K%C3%A4esalu"))

([FlightPro_Class720071] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "EE")
	(elevation 28)
	(lang "en")
	(lat 59.3808)
	(lng 24.245)
	(rank 58)
	(summary "Laulasmaa is a village in Keila Parish, Harju County, in northwestern Estonia. It's located about west of the capital Tallinn, west of Keila-Joa, north of Kloogaranna, by the Lahepere Bay (part of the Gulf of Finland). Laulasmaa had the population of 309 (1 January 2004) (...)")
	(title "Laulasmaa")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Laulasmaa"))

([FlightPro_Class720072] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "EE")
	(elevation 15)
	(feature "city")
	(lang "en")
	(lat 59.3942)
	(lng 24.1975)
	(rank 57)
	(summary "Lohusalu is a village in Keila Parish, Harju County, Estonia. The village spans the Lohusalu peninsula. In 2000, it had the population of 221.\"Arengukava 2004-2014\" (in Estonian). Keila Vald http://www.keilavald.ee. http://www.keilavald (...)")
	(title "Lohusalu")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Lohusalu"))

([FlightPro_Class720073] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "EE")
	(elevation 21)
	(feature "city")
	(lang "en")
	(lat 59.2669)
	(lng 24.2161)
	(population 542)
	(rank 57)
	(summary "Ämari is a small borough in Vasalemma Parish, Harju County, northern Estonia. As of 2011 Census, the settlement's population was 542, of which the Estonians were 190 (35.1%).  (...)")
	(title "Ämari")
	(wikipediaUrl "http://en.wikipedia.org/wiki/%C3%84mari"))

([FlightPro_Class720074] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "EE")
	(elevation 31)
	(feature "city")
	(lang "en")
	(lat 59.2833)
	(lng 24.3667)
	(rank 56)
	(summary "Ohtu is a village in Keila Parish, Harju County in northern Estonia.  (...)")
	(title "Ohtu")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Ohtu"))

([FlightPro_Class720075] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "EE")
	(elevation 30)
	(lang "en")
	(lat 59.2933)
	(lng 24.3233)
	(rank 56)
	(summary "Lehola is a settlement in Keila Parish, Harju County in northwestern Estonia. It had the population of 486 (1 January 2004).  (...)")
	(title "Lehola")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Lehola"))

([FlightPro_Class720076] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "EE")
	(elevation 21)
	(feature "city")
	(lang "en")
	(lat 59.2667)
	(lng 23.7833)
	(rank 55)
	(summary "Alliklepa is a village in Padise Parish, Harju County in northern Estonia.")
	(title "Alliklepa")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Alliklepa"))

([FlightPro_Class720077] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "EE")
	(elevation 23)
	(lang "en")
	(lat 59.2606)
	(lng 24.1817)
	(rank 55)
	(summary "Suurküla is a village in Padise Parish, Harju County in northern Estonia.")
	(title "Suurküla, Harju County")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Suurk%C3%BCla%2C_Harju_County"))

([FlightPro_Class720078] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "EE")
	(elevation 20)
	(feature "city")
	(lang "en")
	(lat 59.2667)
	(lng 23.8667)
	(rank 55)
	(summary "Vintse is a village in Padise Parish, Harju County in northern Estonia.")
	(title "Vintse")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Vintse"))

([FlightPro_Class720079] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "EE")
	(elevation 38)
	(feature "city")
	(lang "en")
	(lat 59.3289)
	(lng 24.3597)
	(population 138)
	(rank 51)
	(summary "Valkse is a village in Keila Parish, Harju County in northwestern Estonia. As of 2011 Census, the settlement's population was 138.  (...)")
	(title "Valkse")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Valkse"))

([FlightPro_Class720080] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "EE")
	(elevation 11)
	(feature "city")
	(lang "en")
	(lat 59.2667)
	(lng 23.7667)
	(rank 49)
	(summary "Moosi, Estonia is a village in Leisi Parish, Saare County in western Estonia.")
	(title "Moosi, Estonia")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Moosi%2C_Estonia"))

([FlightPro_Class730000] of  CloFunction

	(source "(set-html! \"camera\" \"<h4>Camera</h4>\")\n(set-html! \"onboard\" \"Onboard:\")\n(set-html! \"onboard-fld\" \n  \"<select onchange='javascript:view3d.client.onboard(this.value)' style='width:96px'>\n   <option value='callsign'>callsign</option>\n   <option value='manual'>manual</option>\n   <option value='select'>select</option>\")\n(set-html! \"view\" \"View:\")\n(set-html! \"view-fld\" \n  \"<select onchange='javascript:view3d.client.view(this.value)' style='width:96px'>\n   <option value='FORWARD'>FORWARD</option>\n   <option value='BACKWARD'>BACKWARD</option>\n   <option value='RIGHT'>RIGHT</option>\n   <option value='LEFT'>LEFT</option>\n   <option value='UP'>UP</option>\n   <option value='DOWN'>DOWN</option>\n   <option value='FORWARD-RIGHT'>FORWARD-RIGHT</option>\n   <option value='FORWARD-LEFT'>FORWARD-LEFT</option>\n   <option value='BACKWARD-RIGHT'>BACKWARD-RIGHT</option>\n   <option value='BACKWARD-LEFT'>BACKWARD-LEFT</option>\n   </select>\")\n(set-html! \"pitch\" \"Pitch:\")\n(set-html! \"pitch-fld\" \n  \"<input value='-20' style='width:90px'\n               onchange='javascript:view3d.client.pitch(this.value)'>\")\n(set-html! \"roll\" \"Roll:\")\n(set-html! \"roll-fld\" \n  \"<input value='0' style='width:90px'\n               onchange='javascript:view3d.client.roll(this.value)'>\")")
	(title "left-controls []"))

([FlightPro_Class730001] of  CloFunction

	(source "(left-controls)\n(right-controls)")
	(title "show-controls []"))

([FlightPro_Class730002] of  Rule

	(lhs "?q (Question predicate \"weather\")")
	(rhs "(ext.data/pump-weather (:instructions pro.commands/CHN)\n		pro.commands/WIKI)")
	(salience 0)
	(title "qq:Weather"))

([FlightPro_Class730003] of  CloFunction

	(source "(let [[lat lon] (:our-center wiki)]\n  (if-let [rsp 	(gn/call-geonames-weather lat lon)]\n    (let [lat2 	(read-string (rsp \"lat\"))\n            lon2 	(read-string (rsp \"lng\"))\n            bear 	(gn/bearing lat lon lat2 lon2)\n            dir 	(gn/direction bear)\n            dis 	(geo/rough-distance lat lon lat2 lon2)\n            name 	(rsp \"stationName\")\n            wcd 	(rsp \"weatherCondition\")\n            hym 	(rsp \"hymidity\")\n            tmp 	(rsp \"temperature\")\n            wind 	(rsp \"windDirection\")\n            bwnd 	(if (some? wind)\n	  (let [b (+ (read-string wind) 180)] (if (> b 360) (- b 360) b)))\n            win 	(if (some? bwnd)\n	  (gn/direction bwnd)\n	  \"n/a\")\n            wins 	(rsp \"windSpeed\")\n            tim 	(rsp \"observationTime\")\n            loc 	(str dis \" miles to \" dir \" from here\")\n            mess	(str name \" Weather Station<br>\"\n	  \"location: \" loc \"<br>\"\n	  \"observation time: \" tim \"<br>\"\n	  \"weather conditions: \" wcd \"<br>\"\n	  \"temperature: \" tmp \" Celsius<br>\"\n	  \"hymidity: \" hym \"<br>\"\n	  \"wind: \" win \", \" wins \" Knots\")\n            html	(str \"<h3>Weather</h3>\" mess)]\n        (asp/pump-in chn \n	{:instruct :popup\n	 :lat lat\n	 :lon lon\n	 :html html\n	 :time (:ext-data-popup TIO)}))\n    (println \"Weather information unavailable!\")))")
	(title "pump-weather [chn wiki]"))

([FlightPro_Class730004] of  CloFunction

	(source "(letfn [(smround [n]\n	(/ (float (Math/round (* n 10))) 10))]\n  (let [dlat (- lat1 lat2)\n          dlon (- lon1 lon2)\n          lad (* (if (>= dlat 0) dlat (- 0 dlat)) 60)\n          lod (* (if (>= dlon 0) dlon (- 0 dlon)) 60)\n          dia (Math/sqrt (+ (* lad lad) (* lod lod)))]\n     (if (< dia 1) (smround dia) (Math/round dia))))")
	(title "rough-distance [[lat1 lon1] [lat2 lon2]]"))

([FlightPro_Class8] of  CloFunction

	(source "(let [data (.-data e)\n       data (js/JSON.parse data)]\n  ;;(println [:CZML data])\n  (.process CZM-SRC data))")
	(title "cz-processor [e]"))

([FlightPro_Class80000] of  CloFunction

	(source "(vswap! carr assoc :altitude alt)")
	(title "set-altitude [carr alt]"))

([FlightPro_Class80001] of  CloFunction

	(source "(GET (:directives URL) {:handler directives-handler\n                       :error-handler error-handler})")
	(title "receive-directives []"))

([FlightPro_Class80002] of  CloVar

	(source "(fn [response]\n  (let [{:keys [status status-text]} response]\n    (println (str \"AJAX ERROR: \" status \" \" status-text))))")
	(title "error-handler"))

([FlightPro_Class80003] of  CloFunction

	(source "(doseq [{:keys [directive] :as dir} (read-transit response)]\n  ;;(println [:DIRECTIVE dir])\n  (condp = directive\n    :manual (do (if (= (:mode @CARRIER) \"?\")\n	    (carrier \"MANUAL\" (manual-vehicle))\n	    (vswap! CARRIER assoc :mode \"MANUAL\"))\n	(asp/start-process CAM-PROC #(camera-move CARRIER) (:camera TIO)))\n    :callsigns (let [{:keys [list]} dir]\n            (ctl/callsigns (conj list \"manual\")))\n    :carrier (let [{:keys [callsign vehicle]} dir]\n            (asp/stop-process CAM-PROC)\n            (carrier callsign vehicle)\n            (camera-move CARRIER))\n    :fly-onboard (let [{:keys [callsign vehicle period]} dir]\n            (carrier callsign vehicle)\n            (camera-move CARRIER period))\n    (println (str \"Unknown directive: \" [directive dir]))))")
	(title "directives-handler [response]"))

([FlightPro_Class80004] of  CloFunction

	(source "(t/read (t/reader :json) x)")
	(title "read-transit [x]"))

([FlightPro_Class9] of  CloFunction

	(source "(let [dest (js/Cesium.Cartesian3.fromDegrees lon lat alt)]\n  (.flyTo (.-camera VIEWER)\n            #js{:destination dest\n                  :orientation #js{:heading (js/Cesium.Math.toRadians hea)\n                                           :pitch   (js/Cesium.Math.toRadians pit)\n                                           :roll    (js/Cesium.Math.toRadians rol)}\n                  :duration per\n                  :easingFunction (fn [time] time)}))")
	(title "fly-control [lat lon alt hea pit rol per]"))

([FlightPro_Class90000] of  CloFunction

	(source "(loop [out []]\n  (if (empty? out)\n    (recur (<!! chn))\n    out))")
	(title "one-out [chn]"))

([FlightPro_Class90001] of  CloFunction

	(source "(if (= (:mode @CARRIER) \"MANUAL\")\n  (vswap! CARRIER assoc-in [:propeller :accel] accel))")
	(title "accel-speed [accel]"))

([FlightPro_Class90002] of  CloFunction

	(source "(if (= (:mode @CARRIER) \"MANUAL\")\n  (vswap! CARRIER assoc-in [:elevator :accel] accel))")
	(title "accel-altitude [accel]"))

([FlightPro_Class90005] of  CloFunction

	(source "(loop [n 1 y z]\n  (if (seq y)\n    (let [[onb1 cs1 t1 crd1 a1 c1 s1 gnd1] (first y)\n           [onb2 cs2 t2 crd2 a2 c2 s2 gnd2] (second y)\n           dt (if (and t1 t2) (- t2 t1) -7777)\n           da (if (and a1 a2) (- a2 a1) -7777)\n           ds (if (and s1 s2) (- s2 s1) -7777)\n           va (if (and dt da) (/ da dt) -7777)\n           vs (if (and dt ds) (/ ds dt) -7777)]\n      (protege.core/ctpl [n onb2 cs2 t2 crd2 a2 c2 s2 gnd2 \n        (read-string (format \"%.1f\" (float va)))\n        (read-string (format \"%.2f\" (float vs)))])\n      (recur (inc n) (rest y))) ))")
	(title "proc [z]"))
