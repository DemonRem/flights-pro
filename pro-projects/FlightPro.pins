; Sat Mar 11 22:08:01 MSK 2017
; 
;+ (version "3.5")
;+ (build "Build 663")

([FlightPro_Class0] of  CloVar

	(source "(volatile! {:view \"FORWARD\"\n                        :pitch -20\n                        :roll 0})")
	(title "CAMERA"))

([FlightPro_Class1] of  CloNamespace

	(source "(:require\n  [calc.dynamic :as dyn]\n  [calc.geo :as geo])")
	(title "czm.core"))

([FlightPro_Class10000] of  ShareOnto

	(but-deep-copy "Deep Copy Instance/share.onto/deep-copy")
	(but-del-fil "Delete Filtered Instances/share.onto/delfil")
	(but-del-unref "Delete Unreferenced/share.onto/delete-unref")
	(but-find-unref "Find Unreferenced/share.onto/find-unref")
	(but-load-prj "Load Source Project/share.onto/load-src-prj")
	(but-shal-copy "Shallow Copy Instances/share.onto/shal-copy")
	(source-project "DefaultKnowledgeBase(ProServer)"))

([FlightPro_Class100000] of  WorkingPrograms

	(cloPrograms
		[FlightPro_Class390002]
		[FlightPro_Class230004]
		[FlightPro_Class70002]
		[FlightPro_Class20025]
		[FlightPro_Class480000]
		[FlightPro_Class180002]
		[RuleEngine_Class30000]
		[Example_Class10000]
		[GeoNamesWikipedia_Class0]
		[OSMData_Class1]
		[FlightPro_Class670000]
		[FlightPro_Class400000]
		[FlightPro_Class20000]
		[FlightPro_Class280000])
	(title "FlightPro Programs"))

([FlightPro_Class10001] of  CloFunction

	(source ";;(println [:CZ-FLY-TO lat lon alt crs per])\n(let [pitch (condp = (:view @CAMERA)\n                \"UP\" 90\n                \"DOWN\" -90\n                (:pitch @CAMERA))\n        roll (:roll @CAMERA)\n        head (geo/norm-crs (condp = (:view @CAMERA)\n                         \"BACKWARD\" (+ crs 180)\n                         \"RIGHT\" (+ crs 90)\n                         \"LEFT\" (- crs 90)\n                         \"FORWARD-RIGHT\" (+ crs 45)\n                         \"FORWARD-LEFT\" (- crs 45)\n                         \"BACKWARD-RIGHT\" (+ crs 135)\n                         \"BACKWARD-LEFT\" (- crs 135)\n                         crs))]\n    (fly-control lat lon alt head pitch roll per))")
	(title "fly-to [lat lon alt crs per]"))

([FlightPro_Class10002] of  CloFunction

	(source "(cond\n   (> x 360) (- x 360)\n   (< x 0) (+ x 360)\n   true x)")
	(title "norm-crs [x]"))

([FlightPro_Class100023] of  ClsRequired

	(cloFunctions
		[FlightPro_Class100026]
		[FlightPro_Class100027]
		[FlightPro_Class240001]
		[FlightPro_Class240002]
		[FlightPro_Class80000]
		[FlightPro_Class100028]
		[FlightPro_Class30026]
		[FlightPro_Class30027]
		[FlightPro_Class140027])
	(cloNamespace [FlightPro_Class100024])
	(cloVars
		[FlightPro_Class100029]
		[FlightPro_Class240000])
	(title "Carrier Movement"))

([FlightPro_Class100024] of  CloNamespace

	(source "(:require\n  [calc.dynamic :refer \n	[equalize\n	 course-closer\n	 step-closer]])")
	(title "carr.move"))

([FlightPro_Class100025] of  CloVar

	(source "(volatile! {:mode \"?\"\n               :coord [0 0]\n               :altitude 0\n               :speed 0\n               :course 0\n               :step-hrs (double (/ (:carrier TIO) 3600000))\n               :bank-params [12 16 64 2]\n               :rudder {:target 0\n                            :step 3\n	    :accel 1\n                            :time-out 1017}\n               :elevator {:target 0\n                            :step 4\n	    :accel 1\n                            :time-out 997}\n               :propeller {:target 0\n                            :step 1\n	    :accel 1\n                            :time-out 2003}})")
	(title "CARRIER"))

([FlightPro_Class100026] of  CloFunction

	(source "(let [cosphi1 (js/Math.cos phi1)\n       sinphi1 (js/Math.sin phi1)\n       cosaz (js/Math.cos az)\n       sinaz (js/Math.sin az)\n       sinc (js/Math.sin c)\n       cosc (js/Math.cos c)\n       phi2 (js/Math.asin (+ (* sinphi1 cosc) (* cosphi1 sinc cosaz)))\n       lam2 (+ (js/Math.atan2 (* sinc sinaz) (- (* cosphi1 cosc) (* sinphi1 sinc cosaz))) lambda0)]\n  [phi2 lam2])")
	(title "spherical-between-js [phi1 lambda0 c az]"))

([FlightPro_Class100027] of  CloFunction

	(source "([carr]\n  (let [car @carr]\n    (set-turn-point carr (:coord car) (:course car) (:speed car))))\n([carr [lat lon] crs spd]\n  (vswap! carr assoc :turn-point\n    {:phi (* lat PID180)\n     :lam (* lon PID180)\n     :dir (* crs PID180)\n     :rdh (* spd NMRAD)\n     :clk 0}))")
	(title "set-turn-point"))

([FlightPro_Class100028] of  CloFunction

	(source "(let [car @carr\n       tur (:turn-point car)\n       hrs (:step-hrs car)\n       elt (+ (:clk tur) hrs)\n       way (* (:rdh tur) elt)\n       [phi lam] (spherical-between-js (:phi tur) (:lam tur) way (:dir tur))]\n  (vswap! carr assoc :coord [(/ phi PID180) (/ lam PID180)]\n                                :turn-point (assoc tur :clk elt)))")
	(title "move [carr]"))

([FlightPro_Class100029] of  CloVar

	(source "(/ Math.PI 180)")
	(title "PID180"))

([FlightPro_Class10003] of  CloFunction

	(source "(if (= terra \"yes\")\n  (set! (.-terrainProvider VIEWER) TERR-PROV))\n(.add (.-dataSources VIEWER) CZM-SRC)\n(.addEventListener (js/EventSource. (str base-url \"czml/\")) \"czml\" cz-processor false)\n(println [:INIT-3D-VIEW :BASE base-url :TERRA terra])")
	(title "init-3D-view [base-url terra]"))

([FlightPro_Class110000] of  CloFunction

	(source "(letfn [(turn-right? [from to]\n	(let [dif (- to from)]\n	  (cond\n	    (> dif 0)\n	      (<= dif 180)\n	    (< dif 0) \n	      (< dif -180))))]\n  (if (= old-crs new-crs)\n    0\n    (let [arc (calc/abs (- old-crs new-crs))\n           arc (cond \n	(> arc 180) (- 360 arc)\n	(< arc - 180) (+ 360 arc)\n	(< arc 0) (- 0 arc)\n	true arc)\n           bnk (cond\n                  (< arc small-arc) (int (/ right-bank factor)) \n                  (> arc big-arc) (* right-bank factor)\n                  true right-bank)]\n      (if (turn-right? old-crs new-crs)\n          bnk\n          (- bnk)))))")
	(title "bank [old-crs new-crs [right-bank small-arc big-arc factor]]"))

([FlightPro_Class120000] of  CSS

	(source "#autopilot {\n  position:fixed;\n  bottom:160px;\n  right:40px;\n  padding:5px;\n  z-index:100;\n  color:yellow\n}\n#accel {\n  position:fixed;\n  bottom:150px;\n  right:24px;\n  padding:5px;\n  z-index:100;\n  color:yellow\n}\n#course {\n  position:fixed;\n  bottom:150px;\n  right:114px;\n  padding:5px;\n  z-index:100;\n  color:yellow\n}\n#speed {\n  position:fixed;\n  bottom:130px;\n  right:114px;\n  padding:5px;\n  z-index:100;\n  color:yellow\n}\n#altitude {\n  position:fixed;\n  bottom:110px;\n  right:114px;\n  padding:5px;\n  z-index:100;\n  color:yellow\n}\n#lat {\n  position:fixed;\n  bottom:90px;\n  right:114px;\n  padding:5px;\n  z-index:100;\n  color:yellow\n}\n#lon {\n  position:fixed;\n  bottom:70px;\n  right:114px;\n  padding:5px;\n  z-index:100;\n  color:yellow\n}\n#course-fld {\n  position:fixed;\n  bottom:150px;\n  right:66px;\n  padding:5px;\n  z-index:100;\n}\n#speed-fld {\n  position:fixed;\n  bottom:130px;\n  right:66px;\n  padding:5px;\n  z-index:100;\n  color:yellow\n}\n#altitude-fld {\n  position:fixed;\n  bottom:110px;\n  right:66px;\n  padding:5px;\n  z-index:100;\n}\n#speed-acl {\n  position:fixed;\n  bottom:130px;\n  right:20px;\n  padding:5px;\n  z-index:100;\n  color:yellow\n}\n#altitude-acl {\n  position:fixed;\n  bottom:110px;\n  right:20px;\n  padding:5px;\n  z-index:100;\n}\n#latitude-fld {\n  position:fixed;\n  bottom:90px;\n  right:20px;\n  padding:5px;\n  z-index:100;\n}\n#longitude-fld {\n  position:fixed;\n  bottom:70px;\n  right:20px;\n  padding:5px;\n  z-index:100;\n}\n#camera {\n  position:fixed;\n  bottom:140px;\n  left:60px;\n  padding:5px;\n  z-index:100;\n  color:yellow\n}\n#onboard {\n  position:fixed;\n  bottom:130px;\n  left:20px;\n  padding:5px;\n  z-index:100;\n  color:yellow\n}\n#onboard-fld {\n  position:fixed;\n  bottom:130px;\n  left:84px;\n  padding:5px;\n  z-index:100;\n}\n#view {\n  position:fixed;\n  bottom:110px;\n  left:42px;\n  padding:5px;\n  z-index:100;\n  color:yellow\n}\n#view-fld {\n  position:fixed;\n  bottom:110px;\n  left:84px;\n  padding:5px;\n  z-index:100;\n}\n#pitch {\n  position:fixed;\n  bottom:90px;\n  left:42px;\n  padding:5px;\n  z-index:100;\n  color:yellow\n}\n#pitch-fld {\n  position:fixed;\n  bottom:90px;\n  left:84px;\n  padding:5px;\n  z-index:100;\n}\n#roll {\n  position:fixed;\n  bottom:70px;\n  left:48px;\n  padding:5px;\n  z-index:100;\n  color:yellow\n}\n#roll-fld {\n  position:fixed;\n  bottom:70px;\n  left:84px;\n  padding:5px;\n  z-index:100;\n}")
	(store-in "resources/public/css")
	(title "cesium"))

([FlightPro_Class120002] of  CloProgram

	(cloFunctions [FlightPro_Class260000])
	(cloNamespace [Clojure_Class300001])
	(title "Clojure Work"))

([FlightPro_Class130000] of  HTML

	(source "<!DOCTYPE html>\n<html>\n<head>\n  <title>Chart View</title>\n  <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n  <link rel=\"stylesheet\" href=\"css/leaflet.css\" />\n  <link rel=\"stylesheet\" href=\"leaflet/leaflet.css\"/>\n  <script src=\"leaflet/leaflet.js\"></script>\n  <script src=\"js/leaflet.rotatedMarker.js\"></script>\n</head>\n<body>\n  <div id=\"map\"></div>\n  <div id=\"mousepos\"></div>\n  <div id=\"zoom\"></div>\n  <div id=\"commands-header\"></div>\n  <div id=\"commands\"></div>\n  <div id=\"element1\"></div>\n  <div id=\"element2\"></div>\n  <div id=\"element3\"></div>\n  <div id=\"element4\"></div>\n  <div id=\"element5\"></div>\n  <div id=\"element6\"></div>\n  <div id=\"questions-header\"></div>\n  <div id=\"questions\"></div>\n  <script src=\"js/chart.js\"></script>\n</body>\n</html>")
	(store-in "resources/public")
	(title "leaflet"))

([FlightPro_Class130001] of  CloFunction

	(source "(let [[rb sa ba fa :as bps] (:bank-params @carr)\n       bnk (dyn/bank (:course @carr) course bps)\n       spd (:speed @carr)]\n  (if (or (< spd 90) (= bnk 0))\n    (mov/turn carr course 1)\n    (let [accel (if (> (calc/abs bnk) rb) 2 1)]\n      (czm/camera :roll bnk)\n      (mov/turn carr course accel)\n      (dyn/check-diff-and-do carr\n        [:rudder :target]\n        [:course]\n        (get-in @carr [:rudder :step])\n        [:rudder :time-out]\n        #(czm/camera :roll 0)))))")
	(title "turn-and-bank [carr course]"))

([FlightPro_Class130003] of  CloFunction

	(source "(if (< x 0) (- x) x)")
	(title "abs [x]"))

([FlightPro_Class130004] of  CloFunction

	(source "(letfn [(proc-fn [cr]\n             (let [c @cr]\n               (if (<= (calc/abs (- (get-in c path1)\n                                           (get-in c path2))) limit)\n                 (do (final-fn) false)\n                 true)))]\n  (vswap! carr assoc :cdad-status (volatile! \"STOP\"))\n  (asp/start-process (:cdad-status @carr) \n                                 #(proc-fn carr)\n                                 (get-in @carr tio-pth)))")
	(title "check-diff-and-do [carr path1 path2 limit tio-pth final-fn]"))

([FlightPro_Class140000] of  CloVar

	(source "(volatile! {})")
	(title "VEHICLES"))

([FlightPro_Class140001] of  ClsRequired

	(cloFunctions
		[FlightPro_Class140008]
		[FlightPro_Class140005]
		[FlightPro_Class330006]
		[FlightPro_Class330005]
		[FlightPro_Class140004]
		[FlightPro_Class730000]
		[FlightPro_Class140003]
		[FlightPro_Class730001]
		[FlightPro_Class140007]
		[FlightPro_Class270001])
	(cloNamespace [FlightPro_Class140002])
	(title "Viev 3D Controls"))

([FlightPro_Class140002] of  CloNamespace

	(source "(:require\n [goog.string :as gstring]\n [goog.string.format])")
	(title "view3d.controls"))

([FlightPro_Class140003] of  CloFunction

	(source "(set-html! \"autopilot\" \"<h4>Autopilot</h4>\")\n(set-html! \"accel\" \"accel\")\n(set-html! \"course\" \"Course: 000\")\n(set-html! \"course-fld\" \n  \"<input value='180' style='width:38px' id='input-crs'\n                     onchange='javascript:view3d.client.course(this.value)'>\")\n(set-html! \"speed\" \"Speed: 000\")\n(set-html! \"speed-fld\" \n  \"<input value='210' style='width:38px' id='input-spd'\n               onchange='javascript:view3d.client.speed(this.value)'>\")\n(set-html! \"speed-acl\" \n  (str \"<select style='width:44px'\n                onchange='javascript:view3d.client.accel_speed(this.value)'>\"\n         (apply str (for [n (range 1 11)]\n                           (str \"<option value='\" n \"'>\" n \"</option>\")))))\n(set-html! \"altitude\" \"Altitude: 00000\")\n(set-html! \"altitude-fld\" \n  \"<input value='4000' style='width:38px' id='input-alt'\n               onchange='javascript:view3d.client.altitude(this.value)'>\")\n(set-html! \"altitude-acl\" \n  (str \"<select style='width:44px'\n                onchange='javascript:view3d.client.accel_altitude(this.value)'>\"\n         (apply str (for [n (range 1 11)]\n                           (str \"<option value='\" n \"'>\" n \"</option>\")))))\n(set-html! \"lat\" \"Latitude: 00.0000\")\n(set-html! \"latitude-fld\" \n  \"<input value='40.8' style='width:84px' id='input-lat'\n               onchange='javascript:view3d.client.latitude(this.value)'>\")\n(set-html! \"lon\" \"Longitude: 00.0000\")\n(set-html! \"longitude-fld\" \n  \"<input value='-74.0' style='width:84px' id='input-lon'\n               onchange='javascript:view3d.client.longitude(this.value)'>\")")
	(title "right-controls []"))

([FlightPro_Class140004] of  CloFunction

	(source "(set! (.-innerHTML (by-id id)) msg)")
	(title "set-html! [id msg]"))

([FlightPro_Class140005] of  CloFunction

	(source "(.getElementById js/document id)")
	(title "by-id  [id]"))

([FlightPro_Class140007] of  CloFunction

	(source "(let [{:keys [coord course speed altitude]} @carr]\n  (set-html! \"course\" (str \"Course: \" course))\n  (set-html! \"speed\" (str \"Speed: \" speed))\n  (set-html! \"altitude\" (str \"Altitude: \" altitude))\n  (set-html! \"lat\" (str \"Latitude: \" (format \"%.4f\" (first coord))))\n  (set-html! \"lon\" (str \"Longitude: \" (format \"%.4f\" (second coord)))))")
	(title "show-flight-data [carr]"))

([FlightPro_Class140008] of  CloFunction

	(source "(apply gstring/format fmt args)")
	(title "format [fmt & args]"))

([FlightPro_Class140019] of  CloFunction

	(source "(if (= (:mode @CARRIER) \"MANUAL\")\n  (let [crs (num-val crs)]\n    (if (<= 0 crs 360)\n      (turn-and-bank CARRIER crs))))")
	(title "course [crs]"))

([FlightPro_Class140020] of  CloFunction

	(source "(if (= call \"manual\")\n  (asp/stop-process CAM-PROC))\n(GET (str (:command URL) \"onboard?callsign=\" call)\n  {:handler (fn [response])\n   :error-handler error-handler})")
	(title "onboard [call]"))

([FlightPro_Class140021] of  CloFunction

	(source "(czm/camera :view dir)")
	(title "view [dir]"))

([FlightPro_Class140022] of  CloFunction

	(source "(let [deg (num-val deg)]\n  (if (<= -180 deg 180)\n    (czm/camera :pitch deg)))")
	(title "pitch [deg]"))

([FlightPro_Class140023] of  CloFunction

	(source "(let [deg (num-val deg)]\n  (if (<= -180 deg 180)\n    (czm/camera :roll deg)))")
	(title "roll [deg]"))

([FlightPro_Class140024] of  CloFunction

	(source "(if (= (:mode @CARRIER) \"MANUAL\")\n  (mov/accel CARRIER (num-val spd)))")
	(title "speed [spd]"))

([FlightPro_Class140025] of  CloFunction

	(source "(if (= (:mode @CARRIER) \"MANUAL\")\n  (mov/elevate CARRIER (num-val alt)))")
	(title "altitude [alt]"))

([FlightPro_Class140027] of  CloFunction

	(source "([carr altitude]\n  (vswap! carr assoc-in [:elevator :target] altitude)\n  (equalize carr :elevator set-altitude :altitude step-closer))\n([carr altitude accel]\n  (vswap! carr assoc-in [:elevator :accel] accel)\n  (elevate carr altitude))")
	(title "elevate"))

([FlightPro_Class150000] of  ClsRequired

	(cloFunctions
		[FlightPro_Class140008]
		[FlightPro_Class140005]
		[FlightPro_Class140004]
		[FlightPro_Class160012]
		[FlightPro_Class220026]
		[FlightPro_Class820000])
	(cloNamespace [FlightPro_Class180001])
	(title "Chart Controls"))

([FlightPro_Class150001] of  CSS

	(source "#map {\n    position: absolute;\n    top: 0px;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    z-index: -1;\n}\n#mousepos {\n  position:fixed;\n  bottom:10px;\n  left:10px;\n  padding:5px;\n  z-index:100;\n}\n#zoom {\n  position:fixed;\n  bottom:10px;\n  left:170px;\n  padding:5px;\n  z-index:100;\n}\n#commands-header {\n  position:fixed;\n  bottom:50px;\n  left:10px;\n  padding:5px;\n  z-index:100;\n}\n#commands {\n  position:fixed;\n  bottom:40px;\n  left:10px;\n  padding:5px;\n  z-index:100;\n}\n#element1 {\n  position:fixed;\n  bottom:40px;\n  left:160px;\n  padding:5px;\n  z-index:100;\n}\n#element2 {\n  position:fixed;\n  bottom:60px;\n  left:160px;\n  padding:5px;\n  z-index:100;\n}\n#element3 {\n  position:fixed;\n  bottom:80px;\n  left:160px;\n  padding:5px;\n  z-index:100;\n}\n#element4 {\n  position:fixed;\n  bottom:100px;\n  left:160px;\n  padding:5px;\n  z-index:100;\n}\n#element5 {\n  position:fixed;\n  bottom:120px;\n  left:160px;\n  padding:5px;\n  z-index:100;\n}#element6 {\n  position:fixed;\n  bottom:140px;\n  left:160px;\n  padding:5px;\n  z-index:100;\n}\n#questions-header {\n  position:fixed;\n  bottom:50px;\n  right:10px;\n  padding:5px;\n  z-index:100;\n}\n#questions {\n  position:fixed;\n  bottom:40px;\n  right:10px;\n  padding:5px;\n  z-index:100;\n}")
	(store-in "resources/public/css")
	(title "leaflet"))

([FlightPro_Class150002] of  ClsMain

	(asset-path "js/out")
	(butt-build "Build/cljs.compile/build")
	(cloFunctions
		[FlightPro_Class80004]
		[FlightPro_Class160003]
		[FlightPro_Class160007]
		[FlightPro_Class220000]
		[FlightPro_Class160010]
		[FlightPro_Class160008]
		[FlightPro_Class160004]
		[FlightPro_Class670311]
		[FlightPro_Class670313]
		[FlightPro_Class310002]
		[FlightPro_Class360000]
		[FlightPro_Class380003]
		[FlightPro_Class370001]
		[FlightPro_Class370000]
		[FlightPro_Class690014]
		[FlightPro_Class690015]
		[FlightPro_Class690013]
		[FlightPro_Class170005]
		[FlightPro_Class170004]
		[FlightPro_Class430000]
		[FlightPro_Class440000]
		[FlightPro_Class220027]
		[FlightPro_Class160011]
		[FlightPro_Class160002]
		[FlightPro_Class180000]
		[FlightPro_Class380000]
		[FlightPro_Class380001]
		[FlightPro_Class690008])
	(cloNamespace [FlightPro_Class150003])
	(cloVars
		[FlightPro_Class70000]
		[FlightPro_Class20005]
		[FlightPro_Class330003]
		[FlightPro_Class330004]
		[FlightPro_Class160009]
		[FlightPro_Class160005]
		[FlightPro_Class140000]
		[FlightPro_Class670312]
		[FlightPro_Class690012]
		[FlightPro_Class80002]
		[FlightPro_Class200000])
	(css [FlightPro_Class150001])
	(epilogue "(set! (.-onload js/window) (on-load-chart))")
	(html [FlightPro_Class130000])
	(options "{:verbose false}")
	(output-dir "resources/public/js/out")
	(output-to "resources/public/js/chart.js")
	(required
		[FlightPro_Class70008]
		[FlightPro_Class100023]
		[FlightPro_Class230004]
		[FlightPro_Class390002]
		[FlightPro_Class30001]
		[FlightPro_Class150000]
		[FlightPro_Class420008])
	(store-in "src/cljs")
	(title "Chart Client"))

([FlightPro_Class150003] of  CloNamespace

	(source "(:require\n  [goog.string :as gstring]\n  [goog.string.format]\n  [csasync.proc :as asp]\n  [chart.controls :as ctl]\n  [carr.move :as mov]\n  [cognitect.transit :as t]\n  [ajax.core :refer [GET]]\n  [ask.master :as am])")
	(title "chart.client"))

([FlightPro_Class160000] of  CloFunction

	(source "(let [[n s w e] @BBX]\n  (if-let [ff (json-web-data (str (:url-flights F24) \"?bounds=\" n \",\" s \",\" w \",\" e))]\n    (vreset! FLIGHTS \n      (->> ff\n        (filter #(vector? (second %)))\n        ;;(filter #(not (empty? (callsign (second %)))))\n        (apply concat)\n        (apply hash-map)\n        (merge-my-flights @mfs/CARRIERS)\n        (merge-my-flights @MANUAL-DATA)))))")
	(title "flights-in-bbx []"))

([FlightPro_Class160002] of  CloFunction

	(source "(enable-console-print!)\n(init-chart)\n(asp/repeater receive-instructions (:instructions TIO))\n(ctl/show-chart-controls)")
	(title "on-load-chart []"))

([FlightPro_Class160003] of  CloFunction

	(source "(when-let [vmp (@VEHICLES id)]\n  (mov/move vmp)\n  (let [mp @vmp\n         mrk (:marker mp)\n         [lat lon] (:coord mp)\n         pos (js/L.LatLng. lat lon)]\n    (.setLatLng mrk pos))\n  (vswap! VEHICLES assoc id vmp))")
	(title "move-vehicle [id]"))

([FlightPro_Class160004] of  CloFunction

	(source "(delete-vehicle id)\n(let [ms (volatile! \"START\")\n       mp (assoc mp :marker (create-update-marker nil mp)\n                              :step-hrs (double (/ (:vehicles TIO) 3600000))\n	        :movst ms\n                              :mover (asp/start-process ms #(move-vehicle id) (:vehicles TIO)))\n         carr (volatile! mp)]\n    (mov/set-turn-point carr)\n    (vswap! VEHICLES assoc id carr))")
	(title "create-update-vehicle [id mp]"))

([FlightPro_Class160005] of  CloVar

	(source "(volatile! {})")
	(title "CHART"))

([FlightPro_Class160007] of  CloFunction

	(source "(when-let [veh (@VEHICLES id)]\n  (asp/stop-process (:movst @veh))\n  (.removeLayer @CHART (:marker @veh))\n  (vswap! VEHICLES dissoc id))")
	(title "delete-vehicle [id]"))

([FlightPro_Class160008] of  CloFunction

	(source "(if mrk\n  (.removeLayer @CHART mrk))\n(let [[lat lon] (:coord mp)\n       pos (js/L.LatLng. lat lon)\n       ico (js/L.icon #js{:iconUrl (URL-ICO (:status mp)) \n                                  :iconSize #js[32, 32]})\n       opt #js{:icon ico \n                    :rotationAngle (:course mp)\n                    :rotationOrigin \"center center\"\n                    :title (:callsign mp)\n                    :draggable false}\n       mrk (-> js/L (.marker pos opt))]\n    (.on mrk \"click\"\n         (fn [e]\n           (info (ffirst (filter #(= (:marker @(second %)) (.-target e)) \n                                      (seq @VEHICLES))))))\n    (.addTo mrk @CHART)\n    mrk)")
	(title "create-update-marker [mrk mp]"))

([FlightPro_Class160009] of  CloVar

	(source "{\"INTERSECT\" 	(str HOST PORT \"/img/redpln32.png\")\n \"DESCEND\" 	(str HOST PORT \"/img/greenpln32.png\")\n \"CLIMB\" 	(str HOST PORT \"/img/bluepln32.png\")\n \"LEVEL\" 	(str HOST PORT \"/img/purplepln32.png\")\n \"GROUND\" 	(str HOST PORT \"/img/greypln32.png\")\n \"COUNTER\"	(str HOST PORT \"/img/r.png\")\n \"FOLLOWING\"	(str HOST PORT \"/img/b.png\")\n \"default\"	(str HOST PORT \"/img/info.png\")\n \"landmark\"	(str HOST PORT \"/img/landmark.png\")\n \"edu\"	(str HOST PORT \"/img/edu.png\")\n \"mountain\"	(str HOST PORT \"/img/mountain.png\")\n \"river\"	(str HOST PORT \"/img/river.png\")\n \"railwaystation\" (str HOST PORT \"/img/railwaystation.png\")\n \"event\"	(str HOST PORT \"/img/event.png\")\n \"waterbody\"	(str HOST PORT \"/img/waterbody.png\")\n \"isle\"	(str HOST PORT \"/img/isle.png\")\n \"airport\"	(str HOST PORT \"/img/airport.png\")\n \"city\"	(str HOST PORT \"/img/city.png\")}")
	(title "URL-ICO"))

([FlightPro_Class160010] of  CloFunction

	(source "(GET (str (:command URL) \"info?id=\" id)\n  {:handler (fn [response])\n   :error-handler error-handler})")
	(title "info [id]"))

([FlightPro_Class160011] of  CloFunction

	(source "(println :INIT-CHART)\n(let [m (-> js/L\n              (.map \"map\")\n              (.setView (array 60.3, 25.0) 10)) ;; New York 40.8, -74.0\n        tile1 (-> js/L (.tileLayer \"http://{s}.tile.osm.org/{z}/{x}/{y}.png\"\n                                   #js{:maxZoom 20\n                                       :attribution \"Ru, OpenStreetMap &copy;\"}))\n        tile2 (-> js/L (.tileLayer \"http://{s}.google.com/vt/lyrs=s&x={x}&y={y}&z={z}\"\n                                   #js{:maxZoom 20\n                                       :subdomains #js[\"mt0\" \"mt1\" \"mt2\" \"mt3\"]\n                                       :attribution \"Ru, Google &copy;\"}))\n        tile3 (-> js/L (.tileLayer \"http://{s}.google.com/vt/lyrs=m&x={x}&y={y}&z={z}\"\n                                   #js{:maxZoom 20\n                                       :subdomains #js[\"mt0\" \"mt1\" \"mt2\" \"mt3\"]\n                                       :attribution \"Ru, Google &copy;\"}))\n        tile4 (-> js/L (.tileLayer \"http://{s}.google.com/vt/lyrs=s,h&x={x}&y={y}&z={z}\"\n                                   #js{:maxZoom 20\n                                       :subdomains #js[\"mt0\" \"mt1\" \"mt2\" \"mt3\"]\n                                       :attribution \"Ru, Google &copy;\"}))\n        tile5 (-> js/L (.tileLayer \"http://{s}.google.com/vt/lyrs=p&x={x}&y={y}&z={z}\"\n                                   #js{:maxZoom 20\n                                       :subdomains #js[\"mt0\" \"mt1\" \"mt2\" \"mt3\"]\n                                       :attribution \"Ru, Google &copy;\"}))\n        base (clj->js {\"OpenStreetMap\" tile1\n                       \"Google Satellite\" tile2\n                       \"Google Streets\" tile3\n                       \"Google Hybrid\" tile4\n                       \"Google Terrain\" tile5})\n        ctrl (-> js/L (.control.layers base nil))]\n    (try\n      (.addTo tile1 m)\n      (catch js/Error e (println e)))\n    (.addTo ctrl m)\n    (.on m \"mousemove\"\n         (fn [e] (ctl/mouse-move (.. e -latlng -lat) (.. e -latlng -lng))))\n    (.on m \"zoomend\"\n         (fn [e] (ctl/display-zoom (.getZoom m))))\n    (ctl/display-zoom (.getZoom m))\n    (vreset! CHART m))")
	(title "init-chart []"))

([FlightPro_Class160012] of  CloFunction

	(source "(set-html! \"mousepos\" (str \"lat \" (format \"%.4f\" lat) \" lon \" (format \"%.4f\" lng)))")
	(title "mouse-move [lat lng]"))

([FlightPro_Class160018] of  CloFunction

	(source "(close! chn)")
	(title "close-chan [chn]"))

([FlightPro_Class170000] of  CloVar

	(source "(volatile! nil)")
	(title "AIRPORTS"))

([FlightPro_Class170004] of  CloFunction

	(source "(GET (:instructions URL) {:handler instructions-handler\n                       :error-handler error-handler})")
	(title "receive-instructions []"))

([FlightPro_Class170005] of  CloFunction

	(source "(doseq [{:keys [instruct] :as ins} (read-transit response)]\n  ;;(println [:INSTRUCT ins])\n  (condp = instruct\n    :create-update (let [{:keys [id vehicle]} ins]\n	(create-update-vehicle id vehicle))\n    :delete (let [{:keys [id]} ins]\n	(delete-vehicle id))\n    :clear (clear-vehicles)\n    :popup (let [{:keys [id lat lon html time width height]} ins]\n	(cond\n	  id (popup id html time)\n	  (and  width height lat lon) (popup lat lon html time width height)\n	  (and lat lon) (popup lat lon html time)))\n    :trail (let [{:keys [id points options time]} ins]\n	(add-trail id points options time))\n    :map-center (let [{:keys [coord zoom]} ins]\n	(map-center coord zoom))\n    :create-placemark (let [{:keys [iname tip lat lon feature]} ins]\n	(create-placemark iname tip lat lon feature))\n    :clear-placemarks (clear-placemarks)\n    :add-link (let [{:keys [ids options]} ins]\n	(add-link ids options))\n    (println (str \"Unknown instruction: \" [instruct ins]))))")
	(title "instructions-handler [response]"))

([FlightPro_Class180000] of  CloFunction

	(source "(GET (str (:command URL) \"follow?id=\" id)\n  {:handler (fn [response])\n   :error-handler error-handler})")
	(title "follow [id]"))

([FlightPro_Class180001] of  CloNamespace

	(source "(:require\n [goog.string :as gstring]\n [goog.string.format])")
	(title "chart.controls"))

([FlightPro_Class180002] of  CloProgram

	(cloFunctions
		[FlightPro_Class190007]
		[FlightPro_Class200007]
		[FlightPro_Class200010]
		[FlightPro_Class200011]
		[FlightPro_Class200012]
		[FlightPro_Class200013]
		[FlightPro_Class200014]
		[FlightPro_Class480005]
		[FlightPro_Class160000]
		[FlightPro_Class200015]
		[FlightPro_Class200016]
		[FlightPro_Class200002]
		[FlightPro_Class220007]
		[FlightPro_Class200017]
		[FlightPro_Class210008]
		[FlightPro_Class210009]
		[FlightPro_Class210012]
		[FlightPro_Class210013]
		[FlightPro_Class260002]
		[FlightPro_Class770011]
		[FlightPro_Class770000])
	(cloNamespace [FlightPro_Class180003])
	(cloVars
		[FlightPro_Class210011]
		[FlightPro_Class210007]
		[FlightPro_Class190001]
		[FlightPro_Class170000]
		[FlightPro_Class220008]
		[FlightPro_Class210010]
		[FlightPro_Class620001])
	(title "FlightRadar24 Client"))

([FlightPro_Class180003] of  CloNamespace

	(source "(:require\n  [org.httpkit.client :as client]\n  [clj-json.core :as json]\n  [async.proc :as asp]\n  [my.flights.move :as mfs]\n  [calc.geo :refer [distance-nm]])")
	(title "fr24.client"))

([FlightPro_Class190000] of  CloFunction

	(source "(let [crt (current-time)\n       fls (seq @fls)]\n  (println \"t:\" crt \"flights:\" (count fls))\n  (doseq [[k v] fls]\n    (let [alt (fr24/altitude v)\n           [lat lon :as crd] (fr24/coord v)]\n      (rete/assert-frame \n	['Flight\n	'id k\n	'callsign (fr24/callsign v)\n	'coord crd\n	'course (fr24/course v)\n	'speed (fr24/speed v)\n	'altitude alt\n	'time crt\n	'point4d [lat lon (int (/ alt 3.28084)) (czs/iso8601curt)]\n	'age \"NEW\"\n	'status (if (> alt APT-ALT)\n                                     \"LEVEL\"\n                                     \"GROUND\")])))\n  (rete/fire)\n  true)")
	(title "process-flights [fls]"))

([FlightPro_Class190001] of  CloVar

	(source "(volatile! {})")
	(title "FLIGHTS"))

([FlightPro_Class190007] of  CloFunction

	(source "(let [r @(client/get url)\n       s (:status r)]\n  (if (= s 200)\n    (try\n      (json/parse-string (:body r))\n      (catch Exception e\n        (println [:JSON-WEB-DATA :EXCEPTION e])\n        nil))\n    (do\n      (println [:JSON-WEB-DATA :STATUS s])\n      nil)))")
	(title "json-web-data [url]"))

([FlightPro_Class2] of  ClsMain

	(asset-path "js/out")
	(butt-build "Build/cljs.compile/build")
	(cloFunctions
		[FlightPro_Class310006]
		[FlightPro_Class80004]
		[FlightPro_Class130001]
		[FlightPro_Class140020]
		[FlightPro_Class300006]
		[FlightPro_Class140021]
		[FlightPro_Class140022]
		[FlightPro_Class140023]
		[FlightPro_Class140019]
		[FlightPro_Class140024]
		[FlightPro_Class140025]
		[FlightPro_Class90001]
		[FlightPro_Class90002]
		[FlightPro_Class300000]
		[FlightPro_Class320001]
		[FlightPro_Class290000]
		[FlightPro_Class320000]
		[FlightPro_Class80003]
		[FlightPro_Class80001]
		[FlightPro_Class600003]
		[FlightPro_Class70001])
	(cloNamespace [FlightPro_Class60001])
	(cloVars
		[FlightPro_Class70000]
		[FlightPro_Class20005]
		[FlightPro_Class330003]
		[FlightPro_Class100025]
		[FlightPro_Class330004]
		[FlightPro_Class330002]
		[FlightPro_Class80002])
	(css [FlightPro_Class120000])
	(epilogue "(set! (.-onload js/window) (on-load))")
	(html [FlightPro_Class40000])
	(options "{:verbose false}")
	(output-dir "resources/public/js/out")
	(output-to "resources/public/js/main.js")
	(required
		[FlightPro_Class70008]
		[FlightPro_Class50001]
		[FlightPro_Class100023]
		[FlightPro_Class230004]
		[FlightPro_Class390002]
		[FlightPro_Class30001]
		[FlightPro_Class140001])
	(store-in "src/cljs")
	(title "View 3D Client"))

([FlightPro_Class20000] of  CloProgram

	(cloFunctions
		[FlightPro_Class20013]
		[FlightPro_Class20017]
		[FlightPro_Class20014]
		[FlightPro_Class20024]
		[FlightPro_Class20021]
		[FlightPro_Class20022]
		[FlightPro_Class20023])
	(cloNamespace [FlightPro_Class20001])
	(cloVars
		[FlightPro_Class70000]
		[FlightPro_Class20005]
		[FlightPro_Class20002]
		[FlightPro_Class20006]
		[FlightPro_Class20007])
	(title "Pro Server"))

([FlightPro_Class200000] of  CloVar

	(source "{:handler (fn [response])\n :error-handler error-handler}")
	(title "no-handler"))

([FlightPro_Class200001] of  CloFunction

	(source "(asp/pump-in (:instructions  cmd/CHN)\n	{:instruct :delete\n	 :id id})")
	(title "put-off-map [id]"))

([FlightPro_Class200002] of  CloFunction

	(source "(letfn [(mk-airports [rows]\n            (reduce #(assoc %1\n                            (get %2 \"country\")\n                            (assoc (or (get %1 (get %2 \"country\")) {})\n                              (get %2 \"name\") \n                              %2)) \n                        {} \n                        rows))]\n  (or @AIRPORTS\n       (let [aps (json-web-data (:url-airports F24))\n              aps (mk-airports (get aps \"rows\"))]\n         (vreset! AIRPORTS aps)\n         aps)))")
	(title "airports-by-country []"))

([FlightPro_Class200007] of  CloFunction

	(source "(if (string? iod)\n  (@FLIGHTS iod)\n  iod)")
	(title "dat [iod]"))

([FlightPro_Class20001] of  CloNamespace

	(source "(:require [ring.adapter.jetty :as jetty]\n              [ring.util.response :as r]\n              [compojure.core :refer [defroutes GET]]\n              [compojure.handler :as handler]\n              [compojure.route :as route]\n              [cognitect.transit :as t]\n              [async.proc :as asp]\n              [cesium.core :as czs]\n              [pro.commands :as cmd])\n(:import java.io.ByteArrayOutputStream)")
	(title "pro.server"))

([FlightPro_Class200010] of  CloFunction

	(source "(let [dd (dat iod)]\n  [(nth dd 1) (nth dd 2)])")
	(title "coord [iod]"))

([FlightPro_Class200011] of  CloFunction

	(source "(nth (dat iod) 3)")
	(title "course [iod]"))

([FlightPro_Class200012] of  CloFunction

	(source "(nth (dat iod) 5)")
	(title "speed [iod]"))

([FlightPro_Class200013] of  CloFunction

	(source "(nth (dat iod) 4)")
	(title "altitude [iod]"))

([FlightPro_Class200014] of  CloFunction

	(source "(nth (dat iod) 16)")
	(title "callsign [iod]"))

([FlightPro_Class200015] of  CloFunction

	(source "(if-let [flt (filter #(= cs (callsign (second %)))\n                         @FLIGHTS)]\n  (first flt))")
	(title "by-call [cs]"))

([FlightPro_Class200016] of  CloFunction

	(source "(if-let [[id dat] (by-call cs)]\n  id)")
	(title "id-by-call [cs]"))

([FlightPro_Class200017] of  CloFunction

	(source "(if-let [[id dat] (by-call cs)]\n  dat)")
	(title "dat-by-call [cs]"))

([FlightPro_Class20002] of  CloVar

	(source "(str (System/getProperty \"user.dir\") \"/resources/public/\")")
	(title "ROOT"))

([FlightPro_Class20004] of  CloVar

	(source "{:answer (asp/mk-chan)\n :directives (asp/mk-chan)\n :instructions (asp/mk-chan)}")
	(title "CHN"))

([FlightPro_Class20005] of  CloVar

	(source "4444")
	(title "PORT"))

([FlightPro_Class20006] of  CloVar

	(source "nil")
	(title "APP"))

([FlightPro_Class20007] of  CloVar

	(source "nil")
	(title "SERV"))

([FlightPro_Class20010] of  CloFunction

	(source "(loop [[bit ch] (alts!! [chn] :default :none) bits []]\n  (if (= bit :none)\n    bits\n    (recur (alts!! [chn] :default :none) (conj bits bit))))")
	(title "pump-out [chn]"))

([FlightPro_Class20013] of  CloFunction

	(source "(let [baos (ByteArrayOutputStream.)\n        w    (t/writer baos :json)\n        _    (t/write w x)\n        ret  (.toString baos)]\n    (.reset baos)\n    ret)")
	(title "write-transit [x]"))

([FlightPro_Class20014] of  CloFunction

	(source "(-> (r/response (write-transit (deref (future (asp/pump-out chn)))))\n       (r/header \"Access-Control-Allow-Origin\" \"*\"))")
	(title "responseN [chn]"))

([FlightPro_Class20017] of  CloFunction

	(source "(-> (r/response (write-transit (deref (future (asp/one-out chn)))))\n       (r/header \"Access-Control-Allow-Origin\" \"*\"))")
	(title "response1 [chn]"))

([FlightPro_Class20021] of  CloFunction

	(source "(defroutes app-routes\n  (GET \"/\" [] (slurp (str ROOT \"cezium.html\")))\n  (GET \"/chart\" [] (slurp (str ROOT \"leaflet.html\")))\n  (GET \"/czml/\" [] (czs/events))\n  (GET \"/question/\" [& params] (cmd/question params))\n  (GET \"/answer/\" [] (response1 (:answer cmd/CHN)))\n  (GET \"/directives/\" [] (responseN (:directives cmd/CHN)))\n  (GET \"/instructions/\" [] (responseN (:instructions cmd/CHN)))\n  (GET \"/manual-data/\" [& params] (cmd/get-manual-data params))\n  (GET \"/command/:cmd\" [cmd & params] \n    ((resolve (symbol (str \"pro.commands/\" cmd))) params))\n  (route/files \"/\" (do (println [:ROOT-FILES ROOT]) {:root ROOT}))\n  (route/resources \"/\")\n  (route/not-found \"Not Found\"))\n\n(def APP\n  (handler/site app-routes))")
	(title "init-server []"))

([FlightPro_Class20022] of  CloFunction

	(source "([]\n    (start-server PORT))\n([port]\n  (if (nil? APP)\n    (init-server))\n  (def SERV (jetty/run-jetty APP {:port port :join? false})))")
	(title "start-server"))

([FlightPro_Class20023] of  CloFunction

	(source "(when-let [serv SERV]\n  (.stop serv)\n  (def SERV nil)\n  (println \"Server stopped!\"))")
	(title "stop-server []"))

([FlightPro_Class20024] of  CloFunction

	(source "(let [address (str HOST PORT)]\n  (println \"Location:\" address)\n  (when (java.awt.Desktop/isDesktopSupported)\n    (.browse (java.awt.Desktop/getDesktop) (java.net.URI. address))))")
	(title "view3D-in-browser []"))

([FlightPro_Class20025] of  CloProgram

	(cloFunctions
		[FlightPro_Class20029]
		[FlightPro_Class20031]
		[FlightPro_Class20032]
		[FlightPro_Class20033]
		[FlightPro_Class20034]
		[FlightPro_Class20035]
		[FlightPro_Class20036]
		[FlightPro_Class20037]
		[FlightPro_Class830001])
	(cloNamespace [FlightPro_Class20026])
	(cloVars
		[FlightPro_Class20027]
		[FlightPro_Class20028])
	(title "Cesium Server"))

([FlightPro_Class20026] of  CloNamespace

	(source "(:require\n    [ring.util.response :as r]\n    [async.proc :as asp])\n(:import java.util.Calendar)")
	(title "cesium.core"))

([FlightPro_Class20027] of  CloVar

	(source "(asp/mk-chan)")
	(title "CZ-CHAN"))

([FlightPro_Class20028] of  CloVar

	(source "true")
	(title "DOC-SND"))

([FlightPro_Class20029] of  CloFunction

	(source ";;(println [:CZ-EVT typ dat])\n(asp/pump-in CZ-CHAN [typ (.trim dat)])")
	(title "send-event [typ dat]"))

([FlightPro_Class20031] of  CloFunction

	(source "(let [evt-hr (fn [[typ dat]]\n                   (str \"event: \" typ \"\\ndata: \" dat \"\\n\\n\"))\n       ee (deref (future (asp/pump-out CZ-CHAN)))\n       resp (if (seq ee)\n                 (apply str (map evt-hr ee))\n                 \"\")]\n  (-> (r/response resp)\n         (r/header \"Access-Control-Allow-Origin\" \"*\")\n         (r/header \"Content-Type\" \"text/event-stream;charset=utf-8\")))")
	(title "events []"))

([FlightPro_Class20032] of  CloFunction

	(source "(let [cld (Calendar/getInstance)\n       yar (.get cld Calendar/YEAR )\n       mon (inc (.get cld Calendar/MONTH))\n       dat (.get cld Calendar/DATE)\n       hor (.get cld Calendar/HOUR_OF_DAY)\n       min (.get cld Calendar/MINUTE)\n       sec (.get cld Calendar/SECOND)]\n    (format \"%04d-%02d-%02dT%02d:%02d:%02dZ\" yar mon dat hor min sec))")
	(title "iso8601curt []"))

([FlightPro_Class20033] of  CloFunction

	(source "(let [cld (Calendar/getInstance)\n       mil (.getTimeInMillis cld)\n       _ (.setTimeInMillis cld (+ mil (* sec 1000)))\n        yar (.get cld Calendar/YEAR )\n        mon (inc (.get cld Calendar/MONTH))\n        dat (.get cld Calendar/DATE)\n        hor (.get cld Calendar/HOUR_OF_DAY)\n        min (.get cld Calendar/MINUTE)\n        sec (.get cld Calendar/SECOND)]\n    (format \"%04d-%02d-%02dT%02d:%02d:%02dZ\" yar mon dat hor min sec))")
	(title "iso8601futt [sec]"))

([FlightPro_Class20034] of  CloFunction

	(source "(str \"{\\\"id\\\":\\\"document\\\",\\\"version\\\":\\\"1.0\\\",\\\"clock\\\":{\\\"currentTime\\\":\\\"\" (iso8601futt -16) \"\\\"}}\")")
	(title "doc []"))

([FlightPro_Class20035] of  CloFunction

	(source "(when DOC-SND\n    (send-event \"czml\" (doc))\n    (def DOC-SND false))\n  (let [p (str \"{\\\"id\\\":\\\"\"\n               label\n               \"\\\",\\\"availability\\\":\\\"\"\n               (iso8601curt) \"/\" (iso8601futt span-sec)\n               \"\\\",\\\"label\\\":{\\\"scale\\\":\" \n               scale\n               \" ,\\\"pixelOffset\\\":{\\\"cartesian2\\\":[8, -24]},\\\"text\\\":\\\"\"\n               label\n               \"\\\"},\\\"billboard\\\":{\\\"scale\\\":\"\n               scale\n               \",\\\"image\\\":\\\"\"\n               img-url\n               \"\\\"},\\\"position\\\":{\\\"cartographicDegrees\\\":[\"\n               lon\n               \", \"\n               lat\n               \", \"\n               alt\n               \"]}}\")]\n    (send-event \"czml\" p))")
	(title "location [label scale img-url lat lon alt span-sec]"))

([FlightPro_Class20036] of  CloFunction

	(source "(when DOC-SND\n    (send-event \"czml\" (doc))\n    (def DOC-SND false))\n  (let [p (str \"{\\\"id\\\":\\\"\"\n               label\n               \"\\\",\\\"label\\\":{\\\"scale\\\":\"\n               (/ scale 2)\n               \",\\\"pixelOffset\\\":{\\\"cartesian2\\\":[8, -8]},\\\"text\\\":\\\"\"\n               label\n               \"\\\"},\\\"billboard\\\":{\\\"scale\\\":\"\n               scale\n               \",\\\"image\\\":\\\"\"\n               img-url\n               \"\\\"},\\\"position\\\":{\\\"cartographicDegrees\\\":[\\\"\"\n               tim1\n               \"\\\", \"\n               lon1\n               \", \"\n               lat1\n               \", \"\n               alt1\n               \",\\\"\"\n               tim2\n               \"\\\", \"\n               lon2\n               \", \"\n               lat2\n               \", \"\n               alt2\n               \"]}}\")]\n    (send-event \"czml\" p))")
	(title "leg [label img-url scale [lat1 lon1 alt1 tim1] [lat2 lon2 alt2 tim2]]"))

([FlightPro_Class20037] of  CloFunction

	(source "(let [min-scl 0.25\n       scl (+ min-scl (* (- 1 min-scl) (- 1 (/ dist max-dist))))]\n  (location txt scl \"img/arrdn.png\" lat lon 100 40))")
	(title "point-out [txt [lat lon] dist max-dist]"))

([FlightPro_Class210000] of  CloFunction

	(source "(let [cosphi1 (Math/cos phi1)\n       sinphi1 (Math/sin phi1)\n       cosaz (Math/cos az)\n       sinaz (Math/sin az)\n       sinc (Math/sin c)\n       cosc (Math/cos c)\n       phi2 (Math/asin (+ (* sinphi1 cosc) (* cosphi1 sinc cosaz)))\n       lam2 (+ (Math/atan2 (* sinc sinaz) (- (* cosphi1 cosc) (* sinphi1 sinc cosaz))) lambda0)]\n   [phi2 lam2])")
	(title "spherical-between [^double phi1 ^double lambda0 ^double c ^double az]"))

([FlightPro_Class210001] of  CloFunction

	(source "([params]\n  (clear))\n([]\n  (fr24/stop)\n  (fr24/clear-flights)\n  (rete/reset)\n  (asp/pump-in (:instructions CHN)\n      {:instruct :clear})\n  \"\")")
	(title "clear"))

([FlightPro_Class210007] of  CloVar

	(source "(volatile! [0 0 0 0])")
	(title "BBX"))

([FlightPro_Class210008] of  CloFunction

	(source "(vreset! BBX [n s w e])")
	(title "set-bbx [n s w e]"))

([FlightPro_Class210009] of  CloFunction

	(source "(println [:FLIGHTS-PROCESS \n  (asp/start-process STATUS \n                               #(do (flights-in-bbx) (process-fn FLIGHTS) true)\n                               (:time-out F24))])")
	(title "start [process-fn]"))

([FlightPro_Class210010] of  CloVar

	(source "(volatile! \"START\")")
	(title "STATUS"))

([FlightPro_Class210011] of  CloVar

	(source "{:url-flights \"http://data-live.flightradar24.com/zones/fcgi/feed.js\"\n :url-airports \"http://www.flightradar24.com/_json/airports.php\"\n :url-flight-data \"http://data-live.flightradar24.com/clickhandler/?version=1.5&flight=\"\n :time-out 12000}")
	(title "F24"))

([FlightPro_Class210012] of  CloFunction

	(source "(asp/stop-process STATUS)")
	(title "stop []"))

([FlightPro_Class210013] of  CloFunction

	(source "(asp/running? STATUS)")
	(title "running? []"))

([FlightPro_Class220000] of  CloFunction

	(source "(doseq [veh (vals @VEHICLES)]\n  (asp/stop-process (:movst @veh))\n  (.removeLayer @CHART (:marker @veh)))\n(vreset! VEHICLES {})")
	(title "clear-vehicles []"))

([FlightPro_Class220001] of  Rule

	(lhs "(Flight time ?t\n           callsign ?cs\n           coord ?crd \n           course ?crs\n           speed ?spd\n           altitude ?alt)\n?ob1 (Onboard)\n?ob2 (Onboard callsign ?cs time 0\n	(not= ?cs \"STOP\"))")
	(rhs "(retract ?ob1)\n(modify ?ob2 time ?t)\n(es/go-onboard ?cs ?crd ?crs ?spd ?alt)")
	(salience 0)
	(title "af:SwitchOnboard"))

([FlightPro_Class220007] of  CloFunction

	(source "(json-web-data (str (:url-flight-data F24) id))")
	(title "fl-info [id]"))

([FlightPro_Class220008] of  CloVar

	(source "(volatile! {})")
	(title "FL-INFOS"))

([FlightPro_Class220026] of  CloFunction

	(source "(set-html! \"commands-header\" \"<h4>Commands</h4>\")\n(set-html! \"commands\"\n  \"<select onchange='javascript:chart.client.command(this.value)'>\n   <option value='commands'>Commands</option>\n   <option value='watch-visible'>Watch Visible Area</option>\n   <option value='move-to'>Move to Airport</option>\n   <option value='schedule'>Schedule Flight</option>\n   <option value='wikipedia'>Toggle Wikipedia</option>\n   <option value='clear'>Clear</option>\n   </select>\")\n(set-html! \"questions-header\" \"<h4>Questions</h4>\")\n(set-html! \"questions\"\n  \"<select onchange='javascript:chart.client.question(this.value)'>\n   <option value='questions'>Questions</option>\n   <option value='intersect'>Intersections</option>\n   <option value='weather-gn'>Weather GeoNames</option>\n   <option value='weather-w2'>Weather2</option>\n   <option value='nearest-airports'>Nearest Airports</option>\n   <option value='where-we-are'>Where We Are?</option>\n   </select>\")")
	(title "show-chart-controls []"))

([FlightPro_Class220027] of  CloFunction

	(source "(condp = cmd\n  \"commands\" nil\n  \"watch-visible\" (let [bnd (.getBounds @CHART)\n	          prm (str \"?n=\" (.getNorth bnd)\n		\"&s=\" (.getSouth bnd)\n		\"&w=\" (.getWest bnd)\n		\"&e=\" (.getEast bnd))]\n	       (GET (str (:command URL) cmd prm) no-handler))\n  \"move-to\" (move-to)\n  \"schedule\" (schedule)\n  (GET (str (:command URL) cmd) no-handler))\n(ctl/show-chart-controls)")
	(title "command [cmd]"))

([FlightPro_Class220030] of  CloFunction

	(source "([]\n  (let [[n s w e] @fr24/BBX]\n    (watch-visible {:n n :s s :w w :e e})))\n([params]\n  (println [:WATCH-VISIBLE params])\n  (let [{:keys [n s w e]} params]\n    (clear)\n    (fr24/set-bbx n s w e)\n    (fr24/start process-flights)\n    \"\"))")
	(title "watch-visible"))

([FlightPro_Class230000] of  CloFuncall

	(source "ext.data/COMM"))

([FlightPro_Class230001] of  CloFunction

	(source "(let [ldiff (- lambda lambda0)\n       cosphi (Math/cos phi)]\n  (Math/atan2 (* cosphi (Math/sin ldiff))\n                      (- (* (Math/cos phi1) (Math/sin phi)) \n                          (* (Math/sin phi1) cosphi (Math/cos ldiff)))))")
	(title "spherical-azimuth [^double phi1 ^double lambda0 ^double phi ^double lambda]"))

([FlightPro_Class230003] of  Rule

	(lhs "(Flight time ?t\n           callsign ?cs\n           coord ?crd \n           course ?crs\n           speed ?spd\n           altitude ?alt)\n?ob (Onboard callsign ?cs time 0)\n(not Onboard)")
	(rhs "(modify ?ob time ?t)\n(es/go-onboard ?cs ?crd ?crs ?spd ?alt)")
	(salience 0)
	(title "af:StartOnboard"))

([FlightPro_Class230004] of  ClsRequired

	(cloFunctions
		[FlightPro_Class210000]
		[FlightPro_Class240006]
		[FlightPro_Class230001]
		[FlightPro_Class250002]
		[FlightPro_Class250003]
		[FlightPro_Class250004]
		[FlightPro_Class250005]
		[FlightPro_Class250006]
		[FlightPro_Class250007]
		[FlightPro_Class250008]
		[FlightPro_Class250009]
		[FlightPro_Class390001]
		[FlightPro_Class10002]
		[FlightPro_Class730004])
	(cloNamespace [FlightPro_Class240005])
	(title "Geo"))

([FlightPro_Class230005] of  CloFunction

	(source "(if (= @fr24/STATUS \"RUN\")\n  (watch-visible))")
	(title "update-watch-area []"))

([FlightPro_Class240000] of  CloVar

	(source "(/ Math.PI 10800)")
	(title "NMRAD"))

([FlightPro_Class240001] of  CloFunction

	(source "(let [car @carr]\n  (set-turn-point carr (:coord car) crs (:speed car))\n  (vswap! carr assoc :course crs))")
	(title "set-course [carr crs]"))

([FlightPro_Class240002] of  CloFunction

	(source "(let [car @carr]\n  (set-turn-point carr (:coord car) (:course car) spd)\n  (vswap! carr assoc :speed spd))")
	(title "set-speed [carr spd]"))

([FlightPro_Class240005] of  CloNamespace

	(title "calc.geo"))

([FlightPro_Class240006] of  CloFunction

	(source "(let [pdiff (Math/sin (/ (- phi phi1) 2.0))\n       ldiff (Math/sin (/ (- lambda lambda0) 2.0))\n       rval (Math/sqrt (+ (* pdiff pdiff) (* (Math/cos phi1) (Math/cos phi) ldiff ldiff)))]\n   (* 2.0 (Math/asin rval)))")
	(title "spherical-distance [^double phi1 ^double lambda0 ^double phi ^double lambda]"))

([FlightPro_Class250000] of  CloFunction

	(source ";; Calculates end point of turn\n(if (not= crs1 crs2)\n  (let [step (* crs-stp crs-acl)\n         tioh (/ crs-tio 3600000)]\n    (loop [crs crs1 point ipoint]\n      (if (< (Math/abs (- crs crs2)) step)\n        point\n        (recur (geo/norm-crs (course-closer crs crs2 step)) \n                  (geo/future-pos point crs spd tioh)))))\n  ipoint)")
	(title "turn-end-point [ipoint spd crs1 [crs2 crs-acl] crs-stp crs-tio]"))

([FlightPro_Class250001] of  CloFunction

	(source "(let [lnd (:landing spp)\n       tcrd (:finish-crd spp)\n       crs (:finish-run spp)		;; landing course\n       rcrs (geo/rev-bear crs)		;; reverse landing course\n       rgen (geo/rev-bear (:general-crs spp))	;; reverse general course\n       [x crsa] (:final-turn-course lnd)	;; landing course accel\n       [spd y spda] (:speed lnd)		;; final turn speed\n       omd (:outer-marker-distance lnd)\n       rudd (:rudder @mfs/CARRIER)\n       ftcrd (mfs/turn-end-point 	\n	(geo/future-pos tcrd rcrs omd 1) ;; outer-marker coordinates\n	spd \n	rcrs	\n	[rgen crsa] \n	(:step rudd) \n	(:time-out rudd))] \n    (merge lnd  {:final-turn-crd	ftcrd\n	:landing-crs	[crs crsa] 	\n     	:lannding-spd	[spd spda]}))")
	(title "landing-plan [spp]"))

([FlightPro_Class250002] of  CloFunction

	(source "(let [phi (Math/toRadians lat)\n       lam (Math/toRadians lon)\n       dir (Math/toRadians crs)\n       way (* spd tim)\n       way (Math/toRadians (/ way 60))\n       [phi2 lam2] (spherical-between phi lam way dir)]\n   [(Math/toDegrees phi2) (Math/toDegrees lam2)])")
	(title "future-pos [[lat lon] crs spd tim]"))

([FlightPro_Class250003] of  CloFunction

	(source "(let [fi1 (Math/toRadians la1)\n       ld1 (Math/toRadians lo1)\n       fi2 (Math/toRadians la2)\n       ld2 (Math/toRadians lo2)\n       rad (spherical-distance fi1 ld1 fi2 ld2)]\n   (* (Math/toDegrees rad) 60))")
	(title "distance-nm [[la1 lo1] [la2 lo2]]"))

([FlightPro_Class250004] of  CloFunction

	(source "(let [fi1 (Math/toRadians la1)\n       ld1 (Math/toRadians lo1)\n       fi2 (Math/toRadians la2)\n       ld2 (Math/toRadians lo2)\n       rad (spherical-azimuth fi1 ld1 fi2 ld2)\n       deg (Math/toDegrees rad)]\n  (cond\n    (< deg 0) (+ deg 360.0)\n    (> deg 360.0) (- deg 360.0)\n    true deg))")
	(title "bear-deg [[la1 lo1] [la2 lo2]]"))

([FlightPro_Class250005] of  CloFunction

	(source "(let [denom (- (* (- y4 y3) (- x2 x1)) (* (- x4 x3) (- y2 y1)))]\n  (if (not (== denom 0.0))\n      (let [ua (/ (- (* (- x4 x3) (- y1 y3)) (* (- y4 y3) (- x1 x3))) denom)\n             ub (/ (- (* (- x2 x1) (- y1 y3)) (* (- y2 y1) (- x1 x3))) denom)]\n        (if (and (<= 0.0 ua 1.0) (<= 0.0 ub 1.0))\n            [(+ y1 (* ua (- y2 y1))) (+ x1 (* ua (- x2 x1)))]))))")
	(title "seg-intersect [x1 y1 x2 y2 x3 y3 x4 y4]"))

([FlightPro_Class250006] of  CloFunction

	(source "(let [[la3 lo3] (future-pos [la1 lo1] crs1 spd1 tim)\n       [la4 lo4] (future-pos [la2 lo2] crs2 spd2 tim)]\n   (seg-intersect lo1 la1 lo3 la3 lo2 la2 lo4 la4))")
	(title "future-intersect [[la1 lo1] crs1 spd1 [la2 lo2] crs2 spd2 tim]"))

([FlightPro_Class250007] of  CloFunction

	(source "(let [rb (+ b 180)]\n  (if (> rb 360) (- rb 360) rb))")
	(title "rev-bear [b]"))

([FlightPro_Class250008] of  CloFunction

	(source "(let [bea (bear-deg [lat1 lon1] [lat2 lon2])\n       ca1 (- bea crs)]\n  (cond\n    (> ca1 180) (- ca1 360)\n    (< ca1 -180) (+ ca1 360)\n    true ca1))")
	(title "course-angle [crs [lat1 lon1] [lat2 lon2]]"))

([FlightPro_Class250009] of  CloFunction

	(source "(let [ca (course-angle crs crd1 crd2)]\n   (or (> ca 90) (< ca -90)))")
	(title "abaft [crs crd1 crd2]"))

([FlightPro_Class250010] of  Rule

	(lhs "?ob (Onboard time ?t0 callsign ?cs)\n(Flight age \"CURRENT\" time ?t1 callsign ?cs\n	(<= ?t0 ?t1))\n(Flight age \"NEW\"\n           callsign ?cs\n           course ?crs2 \n           coord ?crd2 \n           speed ?spd2 \n           altitude ?alt2\n           status ?s2\n           time ?t2)")
	(rhs "(modify ?ob time ?t2)\n(es/fly-onboard-to ?cs ?crs2 ?crd2 ?spd2 ?alt2 (- ?t2 ?t1))")
	(salience 0)
	(title "af:FlyOnboardTo"))

([FlightPro_Class250011] of  CloFunction

	(source "(if (not ONB-PAUSE)\n  (let [crd3 (geo/future-pos crd2 crs2 spd2 (/ per 3600))\n         per3 (* 2 per)]\n    (asp/pump-in (:directives cmd/CHN)\n	{:directive :fly-onboard\n	 :callsign csn\n	 :vehicle {\n	   :coord crd2\n	   :altitude (if (= alt2 0) cmd/APT-ALT alt2)\n	   :speed spd2\n	   :course crs2}\n	 :period per3})))")
	(title "fly-onboard-to [csn crs2 crd2 spd2 alt2 per]"))

([FlightPro_Class260000] of  CloFunction

	(source "(println \"Loading Clojure Programs...\")\n(if-let [wps (ClojureTab/findAnnotated (cls-instances \"WorkingPrograms\") nil)]\n  (loop [i 1 pins (svs wps \"cloPrograms\")]\n    (when (seq pins)\n      (println (str \" 1.\" i \" \" (sv (first pins) \"title\") \" = \" (ClojureTab/loadProgram (first pins)) ))\n      (recur (inc i) (rest pins))))\n  (println \"  Annotated instance of WorkingPrograms not found!\"))\n(println\"Starting Pro Server...\")\n(eval '(pro.server/start-server))\n(println\"Starting My Flights Movement...\")\n(eval '(my.flights.move/start-movement))\n(println\"Starting Expert System...\")\n(eval '(ru.rules/run-engine \"Flights Pro Run\"))\n(println\"Go Initial Airport...\")\n(eval '(pro.commands/go-initial-airport))")
	(title "clojure-work []"))

([FlightPro_Class260002] of  CloFunction

	(source "(vreset! FLIGHTS {})")
	(title "clear-flights []"))

([FlightPro_Class260003] of  CloFunction

	(source "(def ONB-PAUSE true)\n(asp/delayer #(def ONB-PAUSE false) 8000)\n(asp/pump-in (:directives cmd/CHN)\n	{:directive :carrier\n	 :callsign csg\n	 :vehicle {:coord crd\n	               :course crs\n	               :speed spd\n	               :altitude (if (= alt 0) cmd/APT-ALT alt)}})")
	(title "go-onboard [csg crd crs spd alt]"))

([FlightPro_Class270000] of  CloFunction

	(source "(println [:CMD-ONBOARD params])\n(let [cls (:callsign params)]\n  (condp = cls\n    \"manual\" (do (asp/pump-in (:directives CHN)\n	{:directive :manual})\n                     (rete/assert-frame ['Onboard 'callsign \"STOP\"]))\n   \"select\" (let [lst (vec (sort (map fr24/callsign (keys @fr24/FLIGHTS))))\n                       lst (filter #(not (empty? %)) lst)]\n                  (asp/pump-in (:directives CHN)\n	{:directive :callsigns\n	 :list lst}))\n    (rete/assert-frame ['Onboard 'callsign cls 'time 0])))\n\"\"")
	(title "onboard [params]"))

([FlightPro_Class270001] of  CloFunction

	(source "(set-html! \"onboard-fld\" \n  (str \"<select onchange='javascript:view3d.client.onboard(this.value)' style='width:96px'>\"\n          (if (empty? list)\n            (str \"<option value='callsign'>callsign</option>\n                   <option value='select'>select</option>\")\n            (str \"<option value='select'>select</option>\"\n              (apply str (for [e list]\n                                (str \"<option value='\" e \"'>\" e \"</option>\")))))\n        \"</select>\"))")
	(title "callsigns [list]"))

([FlightPro_Class270002] of  Rule

	(lhs "?fp (FlightPlan id ?id\n	status \"CRUISE\"\n	vertical-status \"OFF\"\n	cruise ?cru)")
	(rhs "(println [:ClimbStart ?id ?cru])\n(my.flights.move/control ?id my.flights.move/elevate (:altitude ?cru))\n(my.flights.move/control ?id my.flights.move/accel (:speed ?cru))\n(modify ?fp vertical-status \"CLIMB\")")
	(salience 0)
	(title "mf:ClimbStart"))

([FlightPro_Class270003] of  Rule

	(lhs "?fp (FlightPlan id ?id\n	vertical-status \"CLIMB\"\n	cruise ?cru)\n(Flight age \"CURRENT\" \n	id ?id\n	altitude ?alt\n	speed ?spd\n	((= ?alt (:altitude ?cru))\n	 (= ?spd (:spdeed ?cru))))")
	(rhs "(println [:ClimbDone ?id ?alt])\n(modify ?fp vertical-status \"LEVEL\")")
	(salience 0)
	(title "mf:ClimbDone"))

([FlightPro_Class280000] of  CloProgram

	(cloFunctions
		[FlightPro_Class620010]
		[FlightPro_Class290006]
		[FlightPro_Class200001]
		[FlightPro_Class250011]
		[FlightPro_Class260003]
		[FlightPro_Class90005]
		[FlightPro_Class490000]
		[FlightPro_Class530000]
		[FlightPro_Class500000]
		[FlightPro_Class520001]
		[FlightPro_Class620004]
		[FlightPro_Class620003]
		[FlightPro_Class490002]
		[FlightPro_Class540017]
		[FlightPro_Class250001]
		[FlightPro_Class690004]
		[FlightPro_Class690009]
		[FlightPro_Class690010])
	(cloNamespace [FlightPro_Class280001])
	(cloVars
		[FlightPro_Class70000]
		[FlightPro_Class20005]
		[FlightPro_Class160009]
		[FlightPro_Class550000]
		[FlightPro_Class590001]
		[FlightPro_Class690005]
		[FlightPro_Class690006])
	(title "ES Functions"))

([FlightPro_Class280001] of  CloNamespace

	(source "(:use protege.core)\n(:require\n  [pro.commands :as cmd]\n  [async.proc :as asp]\n  [cesium.core :as czs]\n  [calc.core :as calc]\n  [calc.geo :as geo]\n  [fr24.client :as fr24]\n  [my.flights.move :as mfs])\n(:import\n  java.util.Calendar)")
	(title "es"))

([FlightPro_Class280040] of  CloFunction

	(source "(if-let [dati (.getInstance *kb* (.substring id 2))]\n  (condp = INFO-DISPLAY\n    \"PRO\" (decorate-instance dati)\n    \"POPUP\" (do (point-out-place {:instance dati})\n	(asp/pump-in (:ins-chn @COMM) \n		(placemark-popup-instruct dati)))))")
	(title "placemark-info [id]"))

([FlightPro_Class280041] of  CloVar

	(source ";; \"POPUP\"\n \"PRO\"")
	(title "INFO-DISPLAY"))

([FlightPro_Class280085] of  POIRequest

	(lat 60.1667)
	(lng 24.9333)
	(max-rows 50)
	(poi-req-butt "Get Points Of Interest/osm.data/poi-request")
	(radius 1.0))

([FlightPro_Class280086] of  TypeClass

	(name "shop"))

([FlightPro_Class280087] of  TypeName

	(name "hifi"))

([FlightPro_Class280089] of  TypeName

	(name "convenience"))

([FlightPro_Class280091] of  TypeClass

	(name "amenity"))

([FlightPro_Class280092] of  TypeName

	(name "fast_food"))

([FlightPro_Class280094] of  TypeName

	(name "vending_machine"))

([FlightPro_Class280096] of  TypeName

	(name "art"))

([FlightPro_Class280098] of  TypeClass

	(name "man_made"))

([FlightPro_Class280099] of  TypeName

	(name "surveillance"))

([FlightPro_Class280101] of  TypeName

	(name "nightclub"))

([FlightPro_Class280105] of  TypeName

	(name "pub"))

([FlightPro_Class280107] of  TypeName

	(name "restaurant"))

([FlightPro_Class280109] of  TypeName

	(name "kiosk"))

([FlightPro_Class280113] of  TypeName

	(name "cinema"))

([FlightPro_Class280115] of  TypeName

	(name "hairdresser"))

([FlightPro_Class280118] of  TypeName

	(name "bar"))

([FlightPro_Class280120] of  TypeName

	(name "hardware"))

([FlightPro_Class280123] of  TypeName

	(name "pharmacy"))

([FlightPro_Class280125] of  TypeName

	(name "toilets"))

([FlightPro_Class280128] of  TypeName

	(name "school"))

([FlightPro_Class280131] of  TypeName

	(name "greengrocer"))

([FlightPro_Class280136] of  TypeName

	(name "post_box"))

([FlightPro_Class280139] of  TypeClass

	(name "tourism"))

([FlightPro_Class280140] of  TypeName

	(name "hotel"))

([FlightPro_Class280146] of  TypeName

	(name "second_hand"))

([FlightPro_Class280148] of  TypeName

	(name "fire_hydrant"))

([FlightPro_Class280150] of  TypeName

	(name "travel_agency"))

([FlightPro_Class280161] of  TypeName

	(name "nail_salon"))

([FlightPro_Class280164] of  CloFunction

	(source "(if (instance? Instance pois)\n  {:instruct :create-placemark\n    :iname (.getName pois)\n    :tip (sv pois \"name\")\n    :lat (sv pois \"lat\")\n    :lon (sv pois \"lng\")\n    :feature \"default\"}\n  (map pois-instruct pois))")
	(title "pois-instruct [pois]"))

([FlightPro_Class280167] of  CloFuncall

	(source "(def ins (first (cls-instances \""))

([FlightPro_Class280168] of  CloFuncall

	(source "(def ins (first (cls-instances \"POIRequest\")))"))

([FlightPro_Class280169] of  CloFuncall

	(source "(def inst (first (cls-instances \"POIRequest\")))"))

([FlightPro_Class280170] of  CloFuncall

	(source "inst"))

([FlightPro_Class280171] of  CloFuncall

	(source "(def inst (second (cls-instances \"POIRequest\")))"))

([FlightPro_Class280172] of  CloFuncall

	(source "(async.proc/pump-in (:instructions pro.commands/CHN) (pois-instruct (sv inst \"osm-respnses\")))"))

([FlightPro_Class280173] of  CloFuncall

	(source "(async.proc/pump-in (:instructions pro.commands/CHN) (pois-instruct (sv inst \"osm-responses\")))"))

([FlightPro_Class280174] of  CloFuncall

	(source "(async.proc/pump-in (:instructions pro.commands/CHN) (pois-instruct (svs inst \"osm-responses\")))"))

([FlightPro_Class280175] of  CloFuncall

	(source "(type (svs inst \"osm-responses\"))"))

([FlightPro_Class280176] of  CloFuncall

	(source "(seq? (svs inst \"osm-responses\"))"))

([FlightPro_Class280177] of  CloFuncall

	(source "(map async.proc/pump-in (:instructions pro.commands/CHN) (pois-instruct (svs inst \"osm-responses\")))"))

([FlightPro_Class280178] of  CloFuncall

	(source "(doseq [poi (pois-instruct (svs inst \"osm-responses\"))] (async.proc/pump-in (:instructions pro.commands/CHN) poi))"))

([FlightPro_Class280179] of  CloFuncall

	(source "(async.proc/pump-in (:instructions pro.commands/CHN) {:instruct :map-center :coord [60 30] :zoom 18})"))

([FlightPro_Class280180] of  CloFuncall

	(source "(async.proc/pump-in (:instructions pro.commands/CHN) {:instruct :map-center :coord [60.1667 30] :zoom 18})"))

([FlightPro_Class280181] of  CloFuncall

	(source "(async.proc/pump-in (:instructions pro.commands/CHN) {:instruct :map-center :coord [60.1667 24.9333] :zoom 19})"))

([FlightPro_Class280182] of  CloFunction

	(source "(let [mp (into {} hm)\n       lat (mp \"lat\")\n       lon (mp \"lng\")\n       zoo 18\n       chn (:ins-chn @COMM)\n       rss (mp \"osm-responses\")]\n  (asp/pump-in chn\n	{:instruct :map-center\n	 :coord [lat lon]\n	 :zoom zoo})\n  (doseq [rs rss]\n    (asp/pump-in chn (pois-instruct rs))))")
	(title "show-on-map [hm inst]"))

([FlightPro_Class280183] of  %3AINSTANCE-ANNOTATION

	(%3AANNOTATED-INSTANCE [FlightPro_Class280085])
	(%3AANNOTATION-TEXT "Current")
	(%3ACREATION-TIMESTAMP "2017.03.10 18:56:41.210 MSK")
	(%3ACREATOR "ru"))

([FlightPro_Class280184] of  CloFuncall

	(source "(pump-feature-pois nil nil \"city\" \"Helsinki"))

([FlightPro_Class280185] of  CloFuncall

	(source "(pump-feature-pois nil nil \"city\" \"Helsinki)"))

([FlightPro_Class280186] of  CloFuncall

	(source "(pump-feature-pois nil nil \"city\" \"Helsinki\")"))

([FlightPro_Class280188] of  CloFuncall

	(source "(def hel (fifos \""))

([FlightPro_Class280189] of  CloFuncall

	(source "(def hel (fifos \"WikiArticle\" \"title\" \"Helsinki\"))"))

([FlightPro_Class280190] of  CloFuncall

	(source "hel"))

([FlightPro_Class280191] of  CloFuncall

	(source "(.setDirectType hel (cls \"WikiArticleDetails\"))"))

([FlightPro_Class280192] of  CloFuncall

	(source "(.setDirectType hel (cls \"WikiArticle\"))"))

([FlightPro_Class280193] of  CloFuncall

	(source "(slt \"poi-req-but\")"))

([FlightPro_Class280194] of  CloFuncall

	(source "(.getDefaultValues (slt \"poi-req-but\"))"))

([FlightPro_Class280195] of  CloFuncall

	(source "(.getDefaultValues (slt \"poi-req-butt\"))"))

([FlightPro_Class280196] of  CloFuncall

	(source "(first (.getDefaultValues (slt \"poi-req-butt\")))"))

([FlightPro_Class280197] of  CloFuncall

	(source "(ssv hel \"poi-req-butt\" (first (.getDefaultValues (slt \"poi-req-butt\"))))"))

([FlightPro_Class280198] of  CloFunction

	(source "(condp = (typ dati)\n  \"WikiArticle\"	(invoke-later (do\n	  (.setDirectType dati (cls \"WikiArticleDetails\"))\n	  (ssv dati \"max-rows\" (int 50))\n	  (ssv dati \"radius\" (float 1))\n	  (ssv dati \"poi-req-butt\" \n	    (first (.getDefaultValues (slt \"poi-req-butt\"))))\n	  (ssv dati \"butt-show-pois\" \n	    \"Show on Map/ext.data/show-on-map\")\n	  (ssv dati \"butt-del-pois\" \n	    \"Delete POIs/ext.data/delete-pois\")\n	  (ssv dati \"butt-return\" \n	    \"Return to Flight/ext.data/ret-to-flight\")\n	  (let [frm (.show *prj* dati)]\n	    (.setLocationRelativeTo frm nil)\n	    (.setAlwaysOnTop frm true)\n	    (.setVisible frm true))))\n  false)")
	(title "decorate-instance [dati]"))

([FlightPro_Class290000] of  CloFunction

	(source "([carr]\n  (camera-move carr (/ (:camera TIO) 1000)))\n([carr period]\n  (let [car @carr\n         [lat lon] (:coord car)\n         crs (:course car)\n         alt (int (/ (:altitude car) 3.28084))\n         alt (if (< alt 20) 20 alt)]\n      (czm/fly-to lat lon alt crs period))\n  true)")
	(title "camera-move"))

([FlightPro_Class290001] of  CloFunction

	(source "(println [:CMD-FOLLOW params])\n(let [id (:id params)]\n  (if (fr24/dat id)\n    (rete/assert-frame ['Follow 'id id 'time 0])))")
	(title "follow [params]"))

([FlightPro_Class290003] of  %3AINSTANCE-ANNOTATION

	(%3ACREATION-TIMESTAMP "2016.11.24 18:22:25.919 MSK")
	(%3ACREATOR "ru"))

([FlightPro_Class290004] of  %3AINSTANCE-ANNOTATION

	(%3AANNOTATED-INSTANCE [FlightPro_Class100000])
	(%3ACREATION-TIMESTAMP "2016.11.24 18:24:16.125 MSK")
	(%3ACREATOR "ru"))

([FlightPro_Class290005] of  Rule

	(lhs "(Flight id ?id\n           callsign ?cs\n           coord ?crd\n           course ?crs\n           speed ?spd\n           status ?sts\n           age \"NEW\")")
	(rhs "(es/put-on-map ?id ?cs ?crd ?crs ?spd ?sts)")
	(salience 0)
	(title "af:PutFlightOnMap"))

([FlightPro_Class290006] of  CloFunction

	(source "(asp/pump-in (:instructions  cmd/CHN)\n	{:instruct :create-update\n	 :id id\n	 :vehicle {:callsign cs\n	               :coord crd\n	               :course crs\n	               :speed spd\n	               :status sts}})")
	(title "put-on-map [id cs crd crs spd sts]"))

([FlightPro_Class290041] of  TypeName

	(name "town"))

([FlightPro_Class290043] of  TypeClass

	(name "power"))

([FlightPro_Class290044] of  TypeName

	(name "pole"))

([FlightPro_Class290046] of  TypeName

	(name "buffer_stop"))

([FlightPro_Class290052] of  TypeName

	(name "tower"))

([FlightPro_Class3] of  CloVar

	(source "(js/Cesium.CesiumTerrainProvider.\n  #js{:url \"//assets.agi.com/stk-terrain/world\"\n        :requestWaterMask false\n        :requestVertexNormals false})")
	(title "TERR-PROV"))

([FlightPro_Class30000] of  CloFunction

	(source "(letfn [(proc-fn [cr]\n                      (let [c @cr\n                             g (get c gear)\n                             target (:target g)\n                             step (* (:accel g) (:step g))]\n                        (if (calc/approx= (param c) target step)\n                            (do (param-fn cr target)\n                                  false)\n                            (do (param-fn cr (closer (param c) target step))\n                                  true))))]\n  (vswap! carr assoc-in [gear :eqz-status] (volatile! \"STOP\"))\n  (let [g (get @carr gear)]\n    (asp/start-process (:eqz-status g) \n                                   #(proc-fn carr) \n                                   (:time-out g))))")
	(title "equalize [carr gear param-fn param closer]"))

([FlightPro_Class300000] of  CloFunction

	(source "(if (= (:mode @CARRIER) \"MANUAL\")\n  (let [car @CARRIER\n         lat (num-val lat)\n         [_ lon] (:coord car)]\n    (mov/set-turn-point CARRIER [lat lon] (:course car) (:speed car))))")
	(title "latitude [lat]"))

([FlightPro_Class300001] of  RuleSet

	(rules
		[FlightPro_Class690000]
		[FlightPro_Class690007]
		[FlightPro_Class730002]
		[FlightPro_Class750009]
		[FlightPro_Class780020]
		[FlightPro_Class810007])
	(templates [Question])
	(title "Questions"))

([FlightPro_Class300006] of  CloFunction

	(source "(if (not= callsign (:mode @CARRIER))\n  (vswap! CARRIER assoc :mode callsign))\n(let [old-crs (:course @CARRIER)\n       new-crs (:course vehicle)]\n  (vswap! CARRIER merge (dissoc vehicle :course))\n  (mov/set-turn-point CARRIER)\n  (if (not= new-crs old-crs)\n    (turn-and-bank CARRIER new-crs)))")
	(title "carrier [callsign vehicle]"))

([FlightPro_Class30001] of  ClsRequired

	(cloFunctions
		[FlightPro_Class30007]
		[FlightPro_Class30011]
		[FlightPro_Class30000]
		[FlightPro_Class130004]
		[FlightPro_Class110000])
	(cloNamespace [FlightPro_Class30002])
	(title "Dynamic"))

([FlightPro_Class30002] of  CloNamespace

	(source "(:require\n  [csasync.proc :as asp]\n  [calc.core :as calc]\n  [calc.geo :as geo])")
	(title "calc.dynamic"))

([FlightPro_Class30003] of  CloFunction

	(source "(float (+ y1 (/ (* (- y2 y1) (- x x1)) (- x2 x1))))")
	(title "linint [x [x1 y1] [x2 y2]]"))

([FlightPro_Class30004] of  CloFunction

	(source ";; left and right borders in table are exclusive\n(let [[lo hi] (split-with #(< (first %) x) table)]\n  (if (seq lo)\n    (if (seq hi)\n      (linint x (last lo) (first hi))\n      [:UB (second (last table))])\n    [:LB (second (first table))]))")
	(title "tabfun [x table]"))

([FlightPro_Class30005] of  CloFunction

	(source ";; inverse function, only for monotone(!!!) functions\n(tabfun y (map #(vector (second %)(first %)) table))")
	(title "i-mono-tabfun [y table]"))

([FlightPro_Class30006] of  CloFunction

	(source "(let [res (tabfun x table)]\n  (if (vector? res) (second res) res))")
	(title "smooth-tabfun [x table]"))

([FlightPro_Class30007] of  CloFunction

	(source "(cond\n (< from to) (+ from step)\n (> from to) (- from step)\n true to)")
	(title "step-closer [from to step]"))

([FlightPro_Class30011] of  CloFunction

	(source "(let [dif (- to from)]\n  (cond \n    (> dif 0)\n      (if (<= dif 180)\n        (+ from step)\n        (geo/norm-crs (- from step)))\n    (< dif 0) \n      (if (>= dif -180)\n        (- from step)\n        (geo/norm-crs (+ from step)))\n    true to))")
	(title "course-closer [from to step]"))

([FlightPro_Class30025] of  CloFunction

	(source "(cond\n  (> x y) (< (- x y) eps)\n  (< x y) (< (- y x) eps)\n  true true)")
	(title "approx= [x y eps]"))

([FlightPro_Class30026] of  CloFunction

	(source "([carr course]\n  (vswap! carr assoc-in [:rudder :target] course)\n  (equalize carr :rudder set-course :course course-closer))\n([carr course accel]\n  (vswap! carr assoc-in [:rudder :accel] accel)\n  (turn carr course))")
	(title "turn"))

([FlightPro_Class30027] of  CloFunction

	(source "([carr speed]\n  (vswap! carr assoc-in [:propeller :target] speed)\n  (equalize carr :propeller set-speed :speed step-closer))\n([carr speed acl]\n  (vswap! carr assoc-in [:propeller :accel] acl)\n  (accel carr speed))")
	(title "accel"))

([FlightPro_Class310000] of  CloFunction

	(source "(println [:CMD-INFO params])\n(let [id (:id params)]\n  (if (.startsWith id \"pm\")\n    (exd/placemark-info id)\n    (let [inf (or (get @MY-INFOS id) (fr24/fl-info id))\n           cal (if-let[d (fr24/dat id)]\n                   (fr24/callsign d)\n                   id)]\n      (if inf\n        (let [apt (inf \"airport\")\n               acr (inf \"aircraft\")\n               tim (inf \"time\")\n               img (get (first (get-in acr [\"images\" \"thumbnails\"])) \"src\")\n               [lat lon] (fr24/coord id)\n               dat   [[\"from\" (or (get-in apt [\"origin\" \"name\"]) \"-\")]\n	[\"to\" (or (get-in apt [\"destination\" \"name\"]) \"-\")]\n	[\"airline\" (or (get-in inf [\"airline\" \"short\"]) \"-\")]\n	[\"real-departure\" (or (get-in tim [\"real\" \"departure\"]) \"-\")]\n	[\"scheduled-arrival\" (or (get-in tim [\"scheduled\" \"arrival\"]) \"-\")]\n	[\"aircraft\" (or (get-in acr [\"model\" \"text\"]) \"-\")]\n	[\"latitude\" (or lat \"-\")]\n	[\"longitude\" (or lon \"-\")]\n	[\"course\" (or (fr24/course id) \"-\")]\n	[\"speed\" (or (fr24/speed id) \"-\")]\n	[\"altitude\" (or (fr24/altitude id) \"-\")]\n	[(str \"<input type='button' style='color:purple' value='Trail'\n		onclick='chart.client.trail(\\\"\" id \"\\\")' >\")\n	 (str \"<input type='button' style='color:blue' value='Follow'\n		onclick='chart.client.follow(\\\"\" id \"\\\")' >\")]\n	[\"\"\n	 \"<input type='button' style='color:red' value='Stop'\n		onclick='chart.client.stopfollow()' >\"]]\n                       htm (make-info-html cal img dat)]\n          (asp/pump-in (:instructions CHN)\n            {:instruct :popup\n             :id (:id params)\n             :html htm\n             :time (:popup TIM)}))))))\n\"\"")
	(title "info [params]"))

([FlightPro_Class310001] of  CloVar

	(source "{:popup 30000\n :trail 30000}")
	(title "TIM"))

([FlightPro_Class310002] of  CloFunction

	(source "([id html time]\n  (let [vmp (@VEHICLES id)\n         [lat lon] (:coord @vmp)]\n    (popup lat lon html time)))\n([lat lon html time]\n  (popup lat lon html time 240 480))\n([lat lon html time w h]\n  (let [pop (-> js/L (.popup #js{:maxWidth w :maxHeight h})\n                (.setLatLng (array lat lon))\n                (.setContent html))]\n    (.addLayer @CHART pop)\n    (if (> time 0)\n        (asp/delayer #(.removeLayer @CHART pop) time))))")
	(title "popup"))

([FlightPro_Class310003] of  CloFunction

	(source "(go (<! (timeout time))\n  (func))")
	(title "delayer [func time]"))

([FlightPro_Class310005] of  CloFunction

	(source "(let [head (str \"<h3>\" call \"</h3>\")\n       itag (str \"<img src=\\\"\" img \"\\\">\")\n       rows (for [[k v] dat]\n                 (str \"<tr><td>\" k \"</td><td>\" v \"</td></tr>\"))\n      rows (apply str rows)]\n  (str head itag \"<table>\" rows \"</table>\"))")
	(title "make-info-html [call img dat]"))

([FlightPro_Class310006] of  CloFunction

	(source "(if (number? x) x (rdr/read-string x))")
	(title "num-val [x]"))

([FlightPro_Class320000] of  CloFunction

	(source "{:coord   [(num-val (ctl/get-value \"input-lat\"))\n               (num-val (ctl/get-value \"input-lon\"))]\n :course   (num-val (ctl/get-value \"input-crs\"))\n :speed    (num-val (ctl/get-value \"input-spd\"))\n :altitude (num-val (ctl/get-value \"input-alt\"))}")
	(title "manual-vehicle []"))

([FlightPro_Class320001] of  CloFunction

	(source "(if (= (:mode @CARRIER) \"MANUAL\")\n  (let [car @CARRIER\n         lon (num-val lon)\n         [lat _] (:coord car)]\n    (mov/set-turn-point CARRIER [lat lon] (:course car) (:speed car))))")
	(title "longitude [lon]"))

([FlightPro_Class320010] of  RuleSet

	(rules
		[FlightPro_Class320011]
		[FlightPro_Class410002]
		[FlightPro_Class410001]
		[FlightPro_Class370003]
		[FlightPro_Class430010]
		[FlightPro_Class290005]
		[FlightPro_Class320013]
		[FlightPro_Class320012]
		[FlightPro_Class320013]
		[FlightPro_Class350001]
		[FlightPro_Class230003]
		[FlightPro_Class370002]
		[FlightPro_Class220001]
		[FlightPro_Class250010]
		[FlightPro_Class390000])
	(templates
		[Flight]
		[Onboard]
		[Follow])
	(title "All Flights"))

([FlightPro_Class320011] of  Rule

	(lhs "?of1 (Flight id ?id age \"OLD\" time ?t1)\n?of2 (Flight id ?id age \"OLD\" time ?t2\n	(> ?t2 ?t1))")
	(rhs "(retract ?of1)")
	(salience 1)
	(title "af:FlightHistory3"))

([FlightPro_Class320012] of  Rule

	(lhs "(Flight id ?id altitude ?a1 age \"OLD\")\n(Flight id ?id altitude ?a2 age \"CURRENT\")\n?fl (Flight id ?id altitude ?a3 age \"NEW\"\n	callsign ?cs\n	status ?s3 \n	coord ?crd3 \n	course ?crs3\n	speed ?spd3\n	((not= ?s3 \"DESCEND\")\n	 (> ?a1 ?a2 ?a3)))")
	(rhs "(modify ?fl status \"DESCEND\")\n(es/put-on-map ?id ?cs ?crd3 ?crs3 ?spd3 ?s3)")
	(salience 0)
	(title "af:DescendMark"))

([FlightPro_Class320013] of  Rule

	(lhs "(Flight id ?id altitude ?a1 age \"OLD\")\n(Flight id ?id altitude ?a2 age \"CURRENT\")\n?fl (Flight id ?id altitude ?a3 age \"NEW\"\n	callsign ?cs\n	status ?s3 \n	coord ?crd3 \n	course ?crs3\n	speed ?spd3\n	((not= ?s3 \"CLIMB\")\n	 (< ?a1 ?a2 ?a3)))")
	(rhs "(modify ?fl status \"CLIMB\")\n(es/put-on-map ?id ?cs ?crd3 ?crs3 ?spd3 ?s3)")
	(salience 0)
	(title "af:ClimbMark"))

([FlightPro_Class320014] of  Run

	(butt-ass-inss "Assert Instances/ru.rules/ass-inss")
	(butt-fire "Fire/ru.rules/fire-all-rules")
	(butt-run "Run/ru.rules/run-engine")
	(butt-step "Step/ru.rules/step-engine")
	(mode run)
	(rule-sets
		[FlightPro_Class320010]
		[FlightPro_Class410000]
		[FlightPro_Class300001])
	(steps 1)
	(title "Flights Pro Run"))

([FlightPro_Class320015] of  %3AINSTANCE-ANNOTATION

	(%3AANNOTATED-INSTANCE [FlightPro_Class320014])
	(%3ACREATION-TIMESTAMP "2016.11.23 17:10:20.165 MSK")
	(%3ACREATOR "ru"))

([FlightPro_Class320016] of  CloFunction

	(source "(let [cal @CALLS\n       onb @ONBOARD]\n  (doseq [[k v] (seq @fls)]\n    (let [cls (fr24/callsign v)\n           veh {:coord (fr24/coord v)\n                   :course (fr24/course v)\n                   :speed (fr24/speed v)\n                   :altitude (fr24/altitude v)\n                   :status \"LEVEL\"}]\n      (if (= cls onb)\n        (asp/pump-in DIR-CHN\n          {:directive :carrier\n           :callsign cls\n           :vehicle veh}))\n      (asp/pump-in INS-CHN\n        {:instruct :create-update\n         :id k\n         :vehicle veh})))\n  (if (and (empty? cal) (= onb \"select\"))\n    (let [cal (map fr24/callsign (keys @fls))]\n      (vreset! CALLS cal)\n      (async.proc/pump-in DIR-CHN \n        {:directive :callsigns :list cal}))))")
	(title "process-flights0 [fls]"))

([FlightPro_Class320022] of  CloFunction

	(source "(int (/ (System/currentTimeMillis) 1000))")
	(title "current-time []"))

([FlightPro_Class330000] of  Rule

	(lhs "?fp (FlightPlan id ?id\n	status \"INITIAL-TURN\"\n	takeoff ?tof)\n(Flight age \"CURRENT\" \n	id ?id\n	course ?crs\n	(= ?crs (first (:to-crs ?tof))))")
	(rhs "(println [:TakeoffDone ?id ?crs])\n(modify ?fp takeoff \"DONE\"\n	status \"CRUISE\")")
	(salience 0)
	(title "mf:TakeoffDone"))

([FlightPro_Class330001] of  Rule

	(lhs "?fp (FlightPlan id ?id\n	start-time ?stm\n	takeoff ?tof\n	((number? ?stm)\n	 (map? ?tof)))\n(Flight age \"CURRENT\"\n	id ?id\n	time ?tim\n	(>= ?tim ?stm))")
	(rhs "(println [:TakeoffStart ?id ?tof])\n(my.flights.move/control ?id my.flights.move/elevate (:altitude ?tof))\n(my.flights.move/control ?id my.flights.move/accel (:speed ?tof))\n(modify ?fp start-time \"PASSED\"\n	status \"TAKEOFF\")")
	(salience 0)
	(title "mf:TakeoffStart"))

([FlightPro_Class330002] of  CloVar

	(source "(volatile! \"STOP\")")
	(title "CAM-PROC"))

([FlightPro_Class330003] of  CloVar

	(source "{:base (str HOST PORT \"/\")\n :chart (str HOST PORT \"/chart/\")\n :directives (str HOST PORT \"/directives/\")\n :instructions (str HOST PORT \"/instructions/\")\n :command (str HOST PORT \"/command/\")\n :question (str HOST PORT \"/question/\")\n :answer (str HOST PORT \"/answer/\")\n :manual-data (str HOST PORT \"/manual-data/\")}")
	(title "URL"))

([FlightPro_Class330004] of  CloVar

	(source "{:carrier 1000\n :camera 2222\n :directives 911\n :instructions 979\n :vehicles 200\n :display 831\n :manual-data 6000\n :ext-data 15000\n :ext-data-popup 60000}")
	(title "TIO"))

([FlightPro_Class330005] of  CloFunction

	(source "(.-innerHTML (by-id id))")
	(title "get-html [id]"))

([FlightPro_Class330006] of  CloFunction

	(source "(.-value (by-id id))")
	(title "get-value [id]"))

([FlightPro_Class330040] of  TypeName

	(name "utility_pole"))

([FlightPro_Class330042] of  TypeName

	(name "ice_cream"))

([FlightPro_Class330045] of  TypeName

	(name "taxi"))

([FlightPro_Class330048] of  TypeName

	(name "flagpole"))

([FlightPro_Class330052] of  TypeClass

	(name "railway"))

([FlightPro_Class330053] of  TypeName

	(name "tram_stop"))

([FlightPro_Class330056] of  TypeName

	(name "supermarket"))

([FlightPro_Class330058] of  TypeName

	(name "station"))

([FlightPro_Class330062] of  TypeName

	(name "bicycle"))

([FlightPro_Class330066] of  TypeName

	(name "atm"))

([FlightPro_Class330068] of  TypeName

	(name "subway_entrance"))

([FlightPro_Class330073] of  TypeName

	(name "bank"))

([FlightPro_Class330085] of  TypeName

	(name "cafe"))

([FlightPro_Class330093] of  TypeClass

	(name "place"))

([FlightPro_Class330094] of  TypeName

	(name "locality"))

([FlightPro_Class330105] of  TypeName

	(name "alcohol"))

([FlightPro_Class330107] of  TypeClass

	(name "leisure"))

([FlightPro_Class330108] of  TypeName

	(name "sports_centre"))

([FlightPro_Class330113] of  TypeName

	(name "recycling"))

([FlightPro_Class330116] of  TypeName

	(name "hospital"))

([FlightPro_Class330118] of  TypeName

	(name "library"))

([FlightPro_Class330120] of  TypeName

	(name "survey_point"))

([FlightPro_Class340000] of  CloFunction

	(source "(println [:CMD-TERRAIN params])\n(println \"Terrain: \" TERRAIN)\nTERRAIN")
	(title "terrain [params]"))

([FlightPro_Class340002] of  Rule

	(lhs "?sd (Schedule callsign ?csn\n	time ?tim\n	from ?frm\n	to ?to)")
	(rhs "(if-let [stm (es/start-time ?tim)]\n  (let [spp (es/specific-plan es/GENPLAN ?frm ?to)]\n     (my.flights.move/add-my-flight \n	?csn ?csn (:start-crd spp) (:start-run spp) 0 (:start-alt spp))\n     (asser FlightPlan id ?csn\n	start-time stm\n	spec-plan spp\n	takeoff (es/takeoff-plan spp)\n	cruise (es/cruise-plan spp)\n	landing (es/landing-plan spp)\n	status \"READY\"\n	vertical-status \"OFF\")\n     (pro.commands/set-my-flight-info ?csn ?tim ?frm ?to)))")
	(salience 0)
	(title "mf:FlightPlan"))

([FlightPro_Class350000] of  CloFunction

	(source "(let [pts (if (not (empty? trail))\n               trail\n               (if-let [inf (fr24/fl-info id)]\n                   (mapcat #(list (% \"lat\") (% \"lng\") (% \"alt\")) (inf \"trail\"))))]\n  (if pts\n    (asp/pump-in (:instructions CHN)\n        {:instruct :trail\n         :id id\n         :points pts\n         :options {:weight 3\n                        :color \"purple\"}\n         :time (:trail TIM)})))")
	(title "do-trail [id trail]"))

([FlightPro_Class350001] of  Rule

	(lhs "?f (Follow id ?id time ?t0)\n(Flight id ?id coord ?crd1 altitude ?alt1 age \"OLD\" time ?t1\n	(<= ?t0 ?t1))\n(Flight id ?id coord ?crd2 altitude ?alt2 age \"CURRENT\")\n(Flight id ?id coord ?crd3 altitude ?alt3 age \"NEW\" time ?t3 callsign ?cs)")
	(rhs "(println [:FOLLOW ?cs])\n(let [[lat1 lon1] ?crd1\n       [lat2 lon2] ?crd2\n       [lat3 lon3] ?crd3]\n  (pro.commands/set-map-view ?crd3)\n  (pro.commands/do-trail ?id \n	[lat3 lon3 ?alt3\n	 lat2 lon2 ?alt2\n	 lat1 lon1 ?alt1])\n  (modify ?f time ?t3))")
	(salience 0)
	(title "af:FollowFlight"))

([FlightPro_Class360000] of  CloFunction

	(source "(let [ops (clj->js options)\n       pts (map #(js/L.LatLng. (first %) (second %)) (partition 3 points))\n       pts (clj->js pts)\n       trl (js/L.polyline pts ops)]\n    (.addLayer @CHART trl)\n    (if (> time 0)\n        (asp/delayer #(.removeLayer @CHART trl)\n                            time)))")
	(title "add-trail [id points options time]"))

([FlightPro_Class370000] of  CloFunction

	(source "(let [cen (js/L.LatLng. lat lon)\n        zom (or zoom (.getZoom @CHART))]\n  (.setView @CHART cen zom {})\n  (new-visible))")
	(title "map-center [[lat lon] zoom]"))

([FlightPro_Class370001] of  CloFunction

	(source "(let [[n s w e] (visible-map)\n        url (str (:command URL) \"visible?n=\" n \"&s=\" s \"&w=\" w \"&e=\" e)]\n    (GET url {:handler (fn [response])\n              :error-handler error-handler}))")
	(title "new-visible []"))

([FlightPro_Class370002] of  Rule

	(lhs "?ob1 (Onboard)\n?ob2 (Onboard callsign \"STOP\")")
	(rhs "(retract ?ob1 ?ob2)")
	(salience 0)
	(title "af:StopOnboard"))

([FlightPro_Class370003] of  Rule

	(lhs "?f1 (Follow  id ?id1 time ?t1)\n?f2 (Follow  id ?id2 time 0\n	(not= ?id1 ?id2))")
	(rhs "(retract ?f1)\n(if (= ?id2 \"STOP\")\n   (retract ?f2))")
	(salience 1)
	(title "af:StopOrSwitchFollow"))

([FlightPro_Class370004] of  CloFunction

	(source "(asp/pump-in (:instructions CHN)\n	{:instruct :map-center\n	 :coord coord})")
	(title "set-map-view [coord]"))

([FlightPro_Class380000] of  CloFunction

	(source "(GET (str (:command URL) \"stopfollow\")\n  {:handler (fn [response])\n   :error-handler error-handler})")
	(title "stopfollow []"))

([FlightPro_Class380001] of  CloFunction

	(source "(GET (str (:command URL) \"trail?id=\" id)\n  {:handler (fn [response])\n   :error-handler error-handler})")
	(title "trail [id]"))

([FlightPro_Class380002] of  CloFunction

	(source "(println [:CMD-TRAIL params])\n(do-trail (:id params) [])\n\"\"")
	(title "trail [params]"))

([FlightPro_Class380003] of  CloFunction

	(source "(let [bnd (.getBounds @CHART)]\n  [(.getNorth bnd)\n   (.getSouth bnd)\n   (.getWest bnd)\n   (.getEast bnd)])")
	(title "visible-map []"))

([FlightPro_Class380004] of  CloFunction

	(source "(println [:CMD-VISIBLE params])\n(let [{:keys [n s w e]} params\n       [n s w e] (map read-string [n s w e])]\n  (vswap! exd/COMM assoc \n	:visible [n s w e]\n	:ins-chn (:instructions CHN))\n  (if (:wiki @exd/COMM)\n    (exd/pump-wiki))\n  (fr24/set-bbx n s w e))\n\"\"")
	(title "visible [params]"))

([FlightPro_Class390000] of  Rule

	(lhs "(Onboard callsign ?cs1)\n(Flight callsign ?cs1 coord ?c1 course ?crs1 age \"NEW\")\n(Flight id ?id2 coord ?c2 altitude ?a2 age \"CURRENT\" point4d ?p2 callsign ?cs2)\n(Flight id ?id2 coord ?c3 altitude ?a3 age \"NEW\" point4d ?p3 course ?crs3 \n	(< (calc.geo/distance-nm ?c1 ?c3) 10)))")
	(rhs "(cesium.core/leg ?cs2\n	(if (calc.geo/following? ?crs1 ?crs3)\n	  (es/URL-ICO \"FOLLOWING\")\n	  (es/URL-ICO \"COUNTER\")) \n	(calc.core/smooth-tabfun (calc.geo/distance-nm ?c1 ?c3) [[0 1.0][20 0.1]])\n	?p2\n	?p3)")
	(salience 0)
	(title "af:CZML-LegGeneration"))

([FlightPro_Class390001] of  CloFunction

	(source "(let [dif (Math/abs (- crs2 crs1))]\n   (or (< dif 90) (> dif 270)))")
	(title "following? [crs1 crs2]"))

([FlightPro_Class390002] of  ClsRequired

	(cloFunctions
		[FlightPro_Class130003]
		[FlightPro_Class30025]
		[FlightPro_Class30003]
		[FlightPro_Class30004]
		[FlightPro_Class30005]
		[FlightPro_Class30006])
	(cloNamespace [FlightPro_Class400003])
	(title "Calculus"))

([FlightPro_Class390003] of  CloFunction

	(source "(println [:CMD-STOPFOLLOW params])\n(rete/assert-frame ['Follow 'id \"STOP\" 'time 0])\n\"\"")
	(title "stopfollow [params]"))

([FlightPro_Class4] of  CloVar

	(source "(js/Cesium.Viewer. \n  \"cesiumContainer\" \n  #js{:animation false})")
	(title "VIEWER"))

([FlightPro_Class40000] of  HTML

	(source "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <title>Cockpit View</title>\n    <link rel=\"stylesheet\" href=\"css/cesium.css\" />\n    <script src=\"Cesium/Cesium.js\"></script>\n    <style>\n      @import url(Cesium/Widgets/widgets.css);\n      #cesiumContainer {\n        position: absolute;\n        top: 0;\n        left: 0;\n        height: 100%;\n        width: 100%;\n        margin: 0;\n        overflow: hidden;\n        padding: 0;\n        font-family: sans-serif;\n      }\n      html {\n        height: 100%;\n      }\n      body {\n        padding: 0;\n        margin: 0;\n        overflow: hidden;\n        height: 100%;\n      }\n    </style>\n  </head>\n  <body>\n    <div id=\"cesiumContainer\"></div>\n    <div id=\"autopilot\"></div>\n    <div id=\"course\"></div><div id=\"course-fld\"></div><div id=\"accel\"></div>\n    <div id=\"speed\"></div><div id=\"speed-fld\"></div><div id=\"speed-acl\"></div>\n    <div id=\"altitude\"></div><div id=\"altitude-fld\"></div><div id=\"altitude-acl\"></div>\n    <div id=\"lat\"></div></div><div id=\"latitude-fld\"></div>\n    <div id=\"lon\"></div></div><div id=\"longitude-fld\"></div>\n    <div id=\"camera\"></div>\n    <div id=\"onboard\"></div><div id=\"onboard-fld\"></div>\n    <div id=\"view\"></div><div id=\"view-fld\"></div>\n    <div id=\"pitch\"></div><div id=\"pitch-fld\"></div>\n    <div id=\"roll\"></div><div id=\"roll-fld\"></div>\n    <script>\n      Cesium.BingMapsApi.defaultKey = 'Au5mRx6ODcM1h4EAWNyK8wWoyaTjeLuvGkacr7WRZgmAt4QtmyV03OrN1TYb-cr7';\n    </script>\n    <script type=\"text/javascript\" src=\"js/main.js\"></script>\n  </body>\n</html>")
	(store-in "resources/public")
	(title "cezium"))

([FlightPro_Class400000] of  CloProgram

	(cloFunctions
		[FlightPro_Class320022]
		[FlightPro_Class190000]
		[FlightPro_Class210001]
		[FlightPro_Class310005]
		[FlightPro_Class220030]
		[FlightPro_Class380004]
		[FlightPro_Class230005]
		[FlightPro_Class350000]
		[FlightPro_Class370004]
		[FlightPro_Class310000]
		[FlightPro_Class270000]
		[FlightPro_Class340000]
		[FlightPro_Class290001]
		[FlightPro_Class380002]
		[FlightPro_Class390003]
		[FlightPro_Class420001]
		[FlightPro_Class420000]
		[FlightPro_Class640008]
		[FlightPro_Class420021]
		[FlightPro_Class460002]
		[FlightPro_Class510000]
		[FlightPro_Class590000]
		[FlightPro_Class660024]
		[FlightPro_Class640001]
		[FlightPro_Class830000])
	(cloNamespace [FlightPro_Class400001])
	(cloVars
		[FlightPro_Class70000]
		[FlightPro_Class20005]
		[FlightPro_Class330003]
		[FlightPro_Class20004]
		[FlightPro_Class310001]
		[FlightPro_Class510001]
		[FlightPro_Class610000]
		[FlightPro_Class630000])
	(title "Pro Commands"))

([FlightPro_Class400001] of  CloNamespace

	(source "(:use protege.core)\n(:require \n  [compojure.core :refer [GET]]\n  [fr24.client :as fr24]\n  [async.proc :as asp]\n  [rete.core :as rete]\n  [cesium.core :as czs]\n  [ext.data :as exd])")
	(title "pro.commands"))

([FlightPro_Class400003] of  CloNamespace

	(title "calc.core"))

([FlightPro_Class410000] of  RuleSet

	(rules
		[FlightPro_Class340002]
		[FlightPro_Class330001]
		[FlightPro_Class520003]
		[FlightPro_Class330000]
		[FlightPro_Class270002]
		[FlightPro_Class270003]
		[FlightPro_Class500001]
		[FlightPro_Class540000]
		[FlightPro_Class550002]
		[FlightPro_Class540018]
		[FlightPro_Class540019]
		[FlightPro_Class540020]
		[FlightPro_Class560000]
		[FlightPro_Class570001])
	(templates
		[Flight]
		[FlightPlan]
		[Schedule])
	(title "My Flights"))

([FlightPro_Class410001] of  Rule

	(lhs "?nf1 (Flight id ?id age \"NEW\" time ?t1)\n?nf2 (Flight id ?id age \"NEW\" time ?t2\n	(> ?t2 ?t1))")
	(rhs "(modify ?nf1 age \"CURRENT\")")
	(salience 1)
	(title "af:FlightHistory1"))

([FlightPro_Class410002] of  Rule

	(lhs "?cf1 (Flight id ?id age \"CURRENT\" time ?t1)\n?cf2 (Flight id ?id age \"CURRENT\" time ?t2\n	(> ?t2 ?t1))")
	(rhs "(modify ?cf1 age \"OLD\")")
	(salience 1)
	(title "af:FlightHistory2"))

([FlightPro_Class410020] of  Rule

	(lhs "(Flight id ?id age \"OLD\" time ?t1)\n?f (Follow id ?id time 0)\n(not Follow)")
	(rhs "(modify ?f time ?t1)")
	(salience 0)
	(title "af:StartFollow"))

([FlightPro_Class420000] of  CloFunction

	(source ";;(println [:QUESTION pp])\n(if (= (:whom pp) \"direct\")\n  (asp/pump-in (:answer CHN) (direct-question pp))\n  (do (rete/assert-frame \n	['Question\n	 'predicate (:predicate pp)\n	 'subject (:subject pp)\n	 'object (:object pp)])\n        (rete/fire)))\n{:status 204}")
	(title "question [pp]"))

([FlightPro_Class420001] of  CloFunction

	(source "(condp = (:question pp)\n  \"countries\" (->> (fr24/airports-by-country)\n	keys\n	sort)\n  \"airports\" (->> (get (fr24/airports-by-country) (:country pp))\n	keys\n	sort)\n  true \"\")")
	(title "direct-question [pp]"))

([FlightPro_Class420008] of  ClsRequired

	(cloFunctions
		[FlightPro_Class140005]
		[FlightPro_Class140004]
		[FlightPro_Class420010]
		[FlightPro_Class440001]
		[FlightPro_Class440002]
		[FlightPro_Class420011]
		[FlightPro_Class430001]
		[FlightPro_Class430002]
		[FlightPro_Class430003]
		[FlightPro_Class460000]
		[FlightPro_Class460001]
		[FlightPro_Class420019]
		[FlightPro_Class420020]
		[FlightPro_Class450000])
	(cloNamespace [FlightPro_Class420009])
	(cloVars
		[FlightPro_Class70000]
		[FlightPro_Class20005]
		[FlightPro_Class330003]
		[FlightPro_Class80002])
	(title "Ask Master"))

([FlightPro_Class420009] of  CloNamespace

	(source "(:require \n  [ajax.core :refer [GET]]\n  [chart.controls :refer [show-chart-controls]])")
	(title "ask.master"))

([FlightPro_Class420010] of  CloFunction

	(source "(condp = typ\n    :itself (apply str (for [e lst]\n                         (str \"<option value='\" e \"'>\" e \"</option>\")))\n    :count  (apply str (for [i (range (count lst))]\n                            (str \"<option value='\" i \"'>\" (nth lst i) \"</option>\"))))")
	(title "options [lst typ]"))

([FlightPro_Class420011] of  CloFunction

	(source "(let [sel (str \"<select onchange='javascript:\" ns \".handler1(this.value)' style='width:\" wid \"px'>\"\n                 \"<option value='-1'>\" header \"</option>\"\n                 (options lst typ)\n                 \"</select>\")]\n  (set-html! \"element1\" sel))")
	(title "selector1 [ns header lst typ wid]"))

([FlightPro_Class420019] of  CloFunction

	(source "(GET (:question URL) \n    {:params params\n     :error-handler error-handler\n     :response-format :transit})")
	(title "ask-server [params]"))

([FlightPro_Class420020] of  CloFunction

	(source "(GET (:answer URL) \n  {:handler handler\n   :error-handler error-handler\n   :response-format :transit})")
	(title "get-answer [handler]"))

([FlightPro_Class420021] of  CloFunction

	(source "(println [:CMD-MOVE-TO params])\n(let [{:keys [country airport]} params]\n  (if-let [apt (get-in (fr24/airports-by-country) [country airport])]\n    (let [iata (apt \"iata\")\n           alt (apt \"alt\")\n           crd [(apt \"lat\") (apt \"lon\")]]\n      (foc-apt-ins apt)\n      (if (= TERRAIN \"yes\")\n        (def APT-ALT alt)) \n      (set-map-view crd)\n      (println :Airport country airport iata crd alt))))\n\"\"")
	(title "move-to [params]"))

([FlightPro_Class430000] of  CloFunction

	(source "([]\n  (am/ask-server {:whom \"direct\"\n	    :question \"countries\"})\n  (am/get-answer move-to))\n([cns]\n  (am/selector1 \"chart.client\" \"countries\" cns :itself 130)\n  (defn handler1 [sel]\n    (am/ask-server {:whom \"direct\"\n	       :question \"airports\"\n	       :country sel})\n    (am/get-answer #(move-to sel %))))\n([cnt aps]\n  (am/selector2 \"chart.client\" \"airports\" aps :itself 130)\n  (defn handler2 [sel]\n    (let [prm (str \"?country=\" cnt\n	\"&airport=\" sel)]\n      (GET (str (:command URL) \"move-to\" prm) no-handler)\n      (am/clear-dialog))))")
	(title "move-to"))

([FlightPro_Class430001] of  CloFunction

	(source "(let [sel (str \"<select onchange='javascript:\" ns \".handler2(this.value)' style='width:\" wid \"px'>\"\n                 \"<option value='-1'>\" header \"</option>\"\n                 (options lst typ)\n                 \"</select>\")]\n    (set-html! \"element2\" sel))")
	(title "selector2 [ns header lst typ wid]"))

([FlightPro_Class430002] of  CloFunction

	(source "(let [sel (str \"<select onchange='javascript:\" ns \".handler3(this.value)' style='width:\" wid \"px'>\"\n                 \"<option value='-1'>\" header \"</option>\"\n                 (options lst typ)\n                 \"</select>\")]\n    (set-html! \"element3\" sel))")
	(title "selector3 [ns header lst typ wid]"))

([FlightPro_Class430003] of  CloFunction

	(source "(let [sel (str \"<select onchange='javascript:\" ns \".handler4(this.value)' style='width:\" wid \"px'>\"\n                 \"<option value='-1'>\" header \"</option>\"\n                 (options lst typ)\n                 \"</select>\")]\n    (set-html! \"element4\" sel))")
	(title "selector4 [ns header lst typ wid]"))

([FlightPro_Class430010] of  Rule

	(lhs "?f1 (Flight id ?id time ?t1)\n(Flight age \"NEW\" time ?t2\n	(> (- ?t2 ?t1) 120))")
	(rhs "(es/put-off-map ?id)\n(retract ?f1)")
	(salience 0)
	(title "af:ForgetOldFlight"))

([FlightPro_Class440000] of  CloFunction

	(source "([]\n  (am/input1 \"chart.client\" \"new callsign\" 80)\n  (defn handler1 [call]\n    (am/input2 \"chart.client\" \"hh:mm\" 80)\n      (defn handler2 [tim]\n        (schedule call tim))))\n([call tim]\n  (am/ask-server {:whom \"direct\"\n	    :question \"countries\"})\n  (am/get-answer #(schedule call tim %)))\n([call tim cns1]\n  (am/selector3 \"chart.client\" \"from country\" cns1 :itself 130)\n  (defn handler3 [sel]\n    (am/ask-server {:whom \"direct\"\n	       :question \"airports\"\n	       :country sel})\n    (am/get-answer #(schedule call tim sel %))))\n([call tim cnt1 aps1]\n  (am/selector4 \"chart.client\" \"from airport\" aps1 :itself 130)\n  (defn handler4 [sel]\n    (am/ask-server {:whom \"direct\"\n	    :question \"countries\"})\n    (am/get-answer #(schedule call tim cnt1 sel %))))\n([call tim cnt1 apt1 cns2]\n  (am/selector5 \"chart.client\" \"to county\" cns2 :itself 130)\n  (defn handler5 [sel]\n    (am/ask-server {:whom \"direct\"\n	       :question \"airports\"\n	       :country sel})\n    (am/get-answer #(schedule call tim cnt1 apt1 sel %))))\n([call tim cnt1 apt1 cnt2 aps2]\n  (am/selector6 \"chart.client\" \"to airport\" aps2 :itself 130)\n  (defn handler6 [sel]\n    (let [prm (str \"?callsign=\" call\n	\"&time=\" tim\n	\"&country1=\" cnt1\n	\"&airport1=\" apt1\n	\"&country2=\" cnt2\n	\"&airport2=\" sel)]\n      (GET (str (:command URL) \"schedule\" prm) no-handler)\n      (am/clear-dialog))))")
	(title "schedule"))

([FlightPro_Class440001] of  CloFunction

	(source "(let [inp (str \"<input type='text' onchange='javascript:\" ns \".handler1(this.value)'\n	style='width:\" wid \"px' \n	value='\" header \"'>\")]\n  (set-html! \"element1\" inp))")
	(title "input1 [ns header wid]"))

([FlightPro_Class440002] of  CloFunction

	(source "(let [inp (str \"<input type='text' onchange='javascript:\" ns \".handler2(this.value)'\n	style='width:\" wid \"px' \n	value='\" header \"'>\")]\n  (set-html! \"element2\" inp))")
	(title "input2 [ns header wid]"))

([FlightPro_Class450000] of  CloFunction

	(source "(set-html! \"element1\" \"\")\n(set-html! \"element2\" \"\")\n(set-html! \"element3\" \"\")\n(set-html! \"element4\" \"\")\n(set-html! \"element5\" \"\")\n(set-html! \"element6\" \"\")\n(show-chart-controls)")
	(title "clear-dialog []"))

([FlightPro_Class460000] of  CloFunction

	(source "(let [sel (str \"<select onchange='javascript:\" ns \".handler5(this.value)' style='width:\" wid \"px'>\"\n                 \"<option value='-1'>\" header \"</option>\"\n                 (options lst typ)\n                 \"</select>\")]\n    (set-html! \"element5\" sel))")
	(title "selector5 [ns header lst typ wid]"))

([FlightPro_Class460001] of  CloFunction

	(source "(let [sel (str \"<select onchange='javascript:\" ns \".handler6(this.value)' style='width:\" wid \"px'>\"\n                 \"<option value='-1'>\" header \"</option>\"\n                 (options lst typ)\n                 \"</select>\")]\n    (set-html! \"element6\" sel))")
	(title "selector6 [ns header lst typ wid]"))

([FlightPro_Class460002] of  CloFunction

	(source "(println [:CMD-SCHEDULE params])\n(let [{:keys [callsign time country1 airport1 country2 airport2]} params\n       abc (fr24/airports-by-country)\n       apf (get-in abc [country1 airport1])\n       apt (get-in abc [country2 airport2])\n       mes \"Airport not found: \"]\n  (if (and apf apt)\n    (do (foc-apt-ins apf)\n      (foc-apt-ins apt)\n      (rete/assert-frame ['Schedule \n	'callsign callsign\n	'time time\n	'from apf\n	'to apt]))\n    (do (if (nil? apf)\n            (println mes country1 airport1))\n          (if (nil? apt)\n            (println mes country2 airport2)))))\n\"\"")
	(title "schedule [params]"))

([FlightPro_Class470000] of  CloVar

	(source "(defonce CARRIERS (volatile! {}))")
	(title "defCARRIERS"))

([FlightPro_Class470001] of  CloFunction

	(source "(letfn [(move-all [carrs]\n	(doseq [carr (vals @carrs)]\n	  (move carr)))]\n  (asp/repeater move-all CARRIERS (:carrier TIO))\n  (println (str \"  My Flights Movement Interval: \" (:carrier TIO))))")
	(title "start-movement []"))

([FlightPro_Class470002] of  CloFunction

	(source "(let [carr (volatile! (assoc (merge {} @CARRIER)\n	:mode call\n   	:coord coord\n   	:course crs\n   	:speed spd\n   	:altitude alt))]\n  (set-turn-point carr)\n  (vswap! CARRIERS assoc id carr))")
	(title "add-my-flight [id call coord crs spd alt]"))

([FlightPro_Class470003] of  CloFunction

	(source "(vswap! CARRIERS dissoc id)")
	(title "rem-my-flight [id]"))

([FlightPro_Class470004] of  CloFunction

	(source "(if-let [carr (get @CARRIERS id)]\n  (if (vector? arg)\n    (func carr (first arg) (second arg))\n    (func carr arg)))")
	(title "control [id func arg]"))

([FlightPro_Class480000] of  CloProgram

	(cloFunctions
		[FlightPro_Class100027]
		[FlightPro_Class240001]
		[FlightPro_Class240002]
		[FlightPro_Class80000]
		[FlightPro_Class480002]
		[FlightPro_Class30007]
		[FlightPro_Class30011]
		[FlightPro_Class30000]
		[FlightPro_Class30027]
		[FlightPro_Class140027]
		[FlightPro_Class30026]
		[FlightPro_Class470002]
		[FlightPro_Class470003]
		[FlightPro_Class470004]
		[FlightPro_Class470001]
		[FlightPro_Class250000]
		[FlightPro_Class520000]
		[FlightPro_Class560001])
	(cloNamespace [FlightPro_Class480001])
	(cloVars
		[FlightPro_Class480003]
		[FlightPro_Class480004]
		[FlightPro_Class330004]
		[FlightPro_Class100025]
		[FlightPro_Class470000])
	(title "My Flights Movement"))

([FlightPro_Class480001] of  CloNamespace

	(source "(:require\n  [calc.core :as calc]\n  [calc.geo :as geo]\n  [async.proc :as asp])")
	(title "my.flights.move"))

([FlightPro_Class480002] of  CloFunction

	(source "(let [car @carr\n       tur (:turn-point car)\n       hrs (:step-hrs car)\n       elt (+ (:clk tur) hrs)\n       way (* (:rdh tur) elt)\n       [phi lam] (geo/spherical-between (:phi tur) (:lam tur) way (:dir tur))]\n  (vswap! carr assoc :coord [(/ phi PID180) (/ lam PID180)]\n                                :turn-point (assoc tur :clk elt)))")
	(title "move [carr]"))

([FlightPro_Class480003] of  CloVar

	(source "(/ Math/PI 180)")
	(title "PID180"))

([FlightPro_Class480004] of  CloVar

	(source "(/ Math/PI 10800)")
	(title "NMRAD"))

([FlightPro_Class480005] of  CloFunction

	(source "(loop [mff (seq mff) ff ff]\n  (if (seq mff)\n    (let [[id mf] (first mff)\n           mf @mf\n           [lat lon] (:coord mf)]\n      (recur (rest mff) \n        (assoc ff id \n	[0 lat lon (:course mf) (:altitude mf) (:speed mf) \n	 6 7 8 9 10 11 12 13 14 15\n	 (:mode mf)])))\n    ff))")
	(title "merge-my-flights [mff ff]"))

([FlightPro_Class490000] of  CloFunction

	(source ";;(println [:START-TIME tim])\n(let [[h m :as hm] (seq (.split tim \":\"))]\n  (if (and (seq hm) (= (count hm) 2))\n    (let [h (read-string h)\n           m (if (.startsWith m \"0\") (.substring m 1) m)\n           m (read-string m)]\n      (if (and (number? h) (number? m) (<= 0 h 23) (<= 0 m 59))\n        (let [cld (Calendar/getInstance)]\n          (.set cld Calendar/HOUR_OF_DAY h)\n          (.set cld Calendar/MINUTE m)\n          (.set cld Calendar/SECOND 0)\n          (int (/ (.getTimeInMillis cld) 1000)))))))")
	(title "start-time [tim]"))

([FlightPro_Class490002] of  CloFunction

	(source "(let [tof (:takeoff spp)\n       [x crsa] (:initial-turn-course tof)]\n    (merge tof   {:from-crs 	[(:start-run spp) crsa]\n	:to-crs 	[(:general-crs spp) crsa]}))")
	(title "takeoff-plan [spp]"))

([FlightPro_Class5] of  CloVar

	(source "(js/Cesium.CzmlDataSource.)")
	(title "CZM-SRC"))

([FlightPro_Class50000] of  CloFunction

	(source "(vswap! CAMERA assoc key val)")
	(title "camera [key val]"))

([FlightPro_Class500000] of  CloFunction

	(source "(letfn [(corr1 [[x y]]\n	[x (+ y elv)])]\n  (vec (map corr1 atab)))")
	(title "corr-alt-tab [atab elv]"))

([FlightPro_Class500001] of  Rule

	(lhs "(FlightPlan id ?id\n	status \"CRUISE\"\n	landing ?lnd\n	cruise ?cru)\n(Flight age \"CURRENT\" \n	id ?id\n	coord ?crd\n	course ?crs\n	(not= ?crs (int (calc.geo/bear-deg ?crd (:final-turn-crd ?lnd)))))")
	(rhs "(let [newc (int (calc.geo/bear-deg ?crd (:final-turn-crd ?lnd)))]\n  (println [:Cruise ?id newc])\n  (my.flights.move/control ?id my.flights.move/turn [newc 1]))")
	(salience 0)
	(title "mf:Cruise"))

([FlightPro_Class50001] of  ClsRequired

	(cloFunctions
		[FlightPro_Class10002]
		[FlightPro_Class8]
		[FlightPro_Class9]
		[FlightPro_Class10001]
		[FlightPro_Class50000]
		[FlightPro_Class10003])
	(cloNamespace [FlightPro_Class1])
	(cloVars
		[FlightPro_Class3]
		[FlightPro_Class4]
		[FlightPro_Class5]
		[FlightPro_Class0])
	(documentation [FlightPro_Class60000])
	(title "Cezium Client"))

([FlightPro_Class510000] of  CloFunction

	(source "(vswap! MY-INFOS assoc csoid\n  {\"airport\" {\"origin\" {\"name\" (fapt \"name\") \"code\" {\"iata\" (fapt \"iata\")}}\n                  \"destination\" {\"name\" (tapt \"name\") \"code\" {\"iata\" (tapt \"iata\")}}}\n\n   \"aircraft\" {\"model\" {\"text\" \"Ru Lentokone\"}\n                   \"images\" {\"thumbnails\" [{\"src\" (str \"img/\" (int  (rand 7)) \".jpg\")}]}}\n\n   \"time\" {\"real\" {\"departure\" dept}\n               \"scheduled\" {\"arrival\" \"unk\"}}\n\n   \"airline\" {\"short\" \"Ru Airlines\"}})")
	(title "set-my-flight-info [csoid dept fapt tapt]"))

([FlightPro_Class510001] of  CloVar

	(source "(volatile! {\"MANUAL\"\n  {\"airport\" {\"origin\" {\"name\" \"unk\" \"code\" {\"iata\" \"unk\"}}\n                  \"destination\" {\"name\" \"unk\" \"code\" {\"iata\" \"unk\"}}}\n\n   \"aircraft\" {\"model\" {\"text\" \"Ru Lentokone\"}\n                   \"images\" {\"thumbnails\" [{\"src\" \"img/5.jpg\"}]}}\n\n   \"time\" {\"real\" {\"departure\" \"unk\"}\n               \"scheduled\" {\"arrival\" \"unk\"}}\n\n   \"airline\" {\"short\" \"Ru Airlines\"}}})")
	(title "MY-INFOS"))

([FlightPro_Class520000] of  CloFunction

	(source ";; Calculates time (hrs) and distance (nm)\n(if (= ini-spd fin-spd)\n  [0 0]\n  (let [step (* spd-stp spd-acl)\n         tioh (float (/ spd-tio 3600000))\n         [func pred] (if (> ini-spd fin-spd) [- <=] [+ >=])]\n    (loop [spd ini-spd tim 0 dist 0]\n      (if (pred spd fin-spd)\n        [tim dist]\n        (recur (func spd step) (+ tioh tim) (+ (* spd tioh) dist))))))")
	(title "speed-variation [[ini-spd x] [fin-spd spd-acl] spd-stp spd-tio]"))

([FlightPro_Class520001] of  CloFunction

	(source "(let [[a aa] alt]\n  [(+ a elv) aa])")
	(title "corr-alt [alt elv]"))

([FlightPro_Class520003] of  Rule

	(lhs "?fp (FlightPlan id ?id\n	status \"TAKEOFF\"\n	takeoff ?tof)\n(Flight age \"CURRENT\" \n	id ?id\n	altitude ?alt\n	speed ?spd\n	((>= ?alt (first (:altitude ?tof)))\n	 (>= ?spd (first (:speed ?tof)))))")
	(rhs "(println [:InitialTurnStart ?id (:to-crs ?tof) ?alt ?spd])\n(my.flights.move/control ?id my.flights.move/turn (:to-crs ?tof))\n(modify ?fp status \"INITIAL-TURN\")")
	(salience 0)
	(title "mf:InitialTurnStart"))

([FlightPro_Class530000] of  CloFunction

	(source "(let [rw (if-let [ins (fifos \"Airport\" \"iata\" iata)]\n              (let [rws (vec (svs ins \"runways\"))\n                     idx (int (rand (count rws)))]\n                (nth rws idx))\n              0)]\n  (if (> (rand 1) 0.5)\n    rw\n    (geo/norm-crs (+ rw 180))))")
	(title "runway [iata]"))

([FlightPro_Class540000] of  Rule

	(lhs "?fp (FlightPlan id ?id\n	landing ?lnd\n	cruise ?cru\n	vertical-status  ?vst\n	[(= ?vst \"CLIMB\")\n	 (= ?vst \"LEVEL\")])\n(Flight age \"CURRENT\" \n	id ?id\n	coord ?crd\n	(<= (calc.geo/distance-nm ?crd (:final-turn-crd ?lnd))\n	  (:descend-dist ?cru)))")
	(rhs "(println [:DescendStart ?id ?dnd])\n(my.flights.move/control ?id my.flights.move/elevate (:altitude ?lnd))\n(modify ?fp vertical-status \"DESCEND\")")
	(salience 0)
	(title "mf:DescendStart"))

([FlightPro_Class540017] of  CloFunction

	(source "(let [tof (:takeoff spp)\n       cru (:cruise spp)\n       lnd (:landing spp)\n       car @mfs/CARRIER\n       [ddist bdist calt cspd] \n         (adjust-cruise\n	(calc.geo/distance-nm (:start-crd spp) (:finish-crd spp))\n	(:altitude cru)\n	(:speed cru)\n	(:altitude lnd)\n	(:speed lnd) \n	(:elevator car)\n	(:propeller car)\n	(:min-alt cru)\n	(:min-spd cru))]\n    (merge cru  {:altitude calt\n	:speed cspd\n	:descend-dist ddist\n	:brake-dist bdist}))")
	(title "cruise-plan [spp]"))

([FlightPro_Class540018] of  Rule

	(lhs "?fp (FlightPlan id ?id\n	status \"CRUISE\"\n	landing ?lnd\n	cruise ?cru)\n(Flight age \"CURRENT\" \n	id ?id\n	coord ?crd\n	course ?crs\n	(calc.geo/abaft ?crs ?crd (:final-turn-crd ?lnd)))")
	(rhs "(println [:CruiseDone ?id ?crd ?cru])\n(modify ?fp cruise \"DONE\"\n	status \"FINAL-TURN\")")
	(salience 0)
	(title "mf:CruiseDone"))

([FlightPro_Class540019] of  Rule

	(lhs "(FlightPlan id ?id\n	status \"FINAL-TURN\"\n	landing ?lnd)")
	(rhs "(println [:FinalTurnStart ?id ?lnd])\n(my.flights.move/control ?id my.flights.move/accel (:lannding-spd ?lnd))\n(my.flights.move/control ?id my.flights.move/turn (:landing-crs ?lnd))")
	(salience 0)
	(title "mf:FinalTurnStart"))

([FlightPro_Class540020] of  Rule

	(lhs "?fp (FlightPlan id ?id\n	status \"FINAL-TURN\"\n	landing ?lnd)\n(Flight age \"CURRENT\" \n	id ?id\n	altitude ?alt\n	speed ?spd\n	course ?crs\n	(= ?crs (first (:landing-crs ?lnd))))")
	(rhs "(println [:LandingStart ?id ?alt ?spd ?crs])\n(modify ?fp status \"LANDING\")")
	(salience 0)
	(title "mf:LandingStart"))

([FlightPro_Class550000] of  CloVar

	(source "{:takeoff \n  {:speed [220 8]\n   :altitude [1500 6]\n   :initial-turn-course [-1 2]}\n :cruise \n  {:speed [500 1]\n   :altitude [33000 8]\n   :min-spd 220\n   :min-alt 4000}\n :landing \n  {:speed [180 1 6]\n   :altitude [2000 8]\n   :outer-marker-distance 7\n   :final-turn-course [-1 1]\n   :altitude-graph\n     [[0.1 0][0.5 15][2 600][7 2000]] ;; x - dist, y - alt\n   :spdeed-graph\n     [[0.0 0][0.1 10][0.5 100][3 120]]} ;; x - dist, y - spd\n}")
	(title "GENPLAN"))

([FlightPro_Class550002] of  Rule

	(lhs "?fp (FlightPlan id ?id\n	landing ?lnd\n	cruise ?cru\n	vertical-status \"DESCEND\")\n(Flight age \"CURRENT\" \n	id ?id\n	coord ?crd\n	(<= (calc.geo/distance-nm ?crd (:final-turn-crd ?lnd))\n	  (:brake-dist ?cru)))")
	(rhs "(println [:BrakeStart ?id ?dnd])\n(my.flights.move/control ?id my.flights.move/accel (:speed ?lnd))\n(modify ?fp vertical-status \"DESCEND&BRAKE\")")
	(salience 0)
	(title "mf:BrakeStart"))

([FlightPro_Class560000] of  Rule

	(lhs "?fp (FlightPlan id ?id\n	status \"LANDING\"\n	landing ?lnd\n	spec-plan ?spp)\n(Flight age \"CURRENT\" \n	id ?id\n	coord ?crd)")
	(rhs "(let [fcrd (:finish-crd ?spp)\n       dist (calc.geo/distance-nm ?crd fcrd)\n       bear (int (calc.geo/bear-deg ?crd fcrd))\n       alt (int (calc.core/smooth-tabfun dist (:altitude-graph ?lnd)))\n       spd (int (calc.core/smooth-tabfun dist (:spdeed-graph ?lnd)))]\n   (my.flights.move/control ?id my.flights.move/turn [bear 2])\n   (my.flights.move/control ?id my.flights.move/elevate [alt 8])\n   (my.flights.move/control ?id my.flights.move/accel [spd 10]))")
	(salience 0)
	(title "mf:OnLandingCourse"))

([FlightPro_Class560001] of  CloFunction

	(source ";; Calculates time (hrs)\n(if (= ini-alt fin-alt)\n  0\n  (let [step (* alt-stp alt-acl)\n         tioh (float (/ alt-tio 3600000))\n         adif (if (> ini-alt fin-alt) (- ini-alt fin-alt) (- fin-alt ini-alt))]\n    (* (/ adif step) tioh)))")
	(title "altitude-variation [[ini-alt x] [fin-alt alt-acl] alt-stp alt-tio]"))

([FlightPro_Class570000] of  CloFuncall

	(source "(in-ns 'ext.data)"))

([FlightPro_Class570001] of  Rule

	(lhs "?fp (FlightPlan id ?id\n	status \"LANDING\"\n	spec-plan ?spp\n	landing ?lnd)\n(Flight age \"CURRENT\" \n	id ?id\n	coord ?crd\n	course ?crs\n	speed ?spd\n                        [(= ?spd 0)\n	 (calc.geo/abaft ?crs ?crd (:finish-crd ?spp))])")
	(rhs "(println [:LandingDone ?id ?crd])\n(es/put-off-map ?id)\n(my.flights.move/rem-my-flight ?id)\n(modify ?fp status \"GROUND\" \n	landing \"DONE\")")
	(salience 1)
	(title "mf:LandingDone"))

([FlightPro_Class580001] of  CloFuncall

	(source "(typ hel)"))

([FlightPro_Class590000] of  CloFunction

	(source "(vswap! fr24/MANUAL-DATA assoc \"MANUAL\"\n          (volatile! {:mode \"MANUAL\"\n	 :coord (read-string (:coord params))\n	 :course (read-string (:course params))\n	 :speed (read-string (:speed params))\n	 :altitude (read-string (:altitude params))}))")
	(title "get-manual-data [params]"))

([FlightPro_Class590001] of  CloVar

	(source "false")
	(title "ONB-PAUSE"))

([FlightPro_Class60000] of  CloDocumentation

	(source "<html>\n  <head>\n    <style type=\"text/css\">\n      <!--\n        body { font-family: arial; font-size: 12pt }\n        p { font-family: arial; margin-top: 2; margin-right: 2; margin-bottom: 2; margin-left: 2 }\n      -->\n    </style>\n    \n  </head>\n  <body>\n    <b>Cesium Client<br></b><br>API<br><br>1. fly-to [lat lon alt crs per]<br>2. camera [key val], keys: :view, :altitude, :pitch, :roll<br><br>CZML rendering support<br><br>Initialization: (init-3D-view)</body>\n</html>"))

([FlightPro_Class600003] of  CloFunction

	(source "(let [carr @CARRIER]\n  (if (= (:mode carr) \"MANUAL\")\n    (GET (str (:manual-data URL) \n	\"?coord=\" (:coord carr)\n	\"&course=\" (:course carr)\n	\"&speed= \" (:speed carr)\n	\"&altitude=\" (:altitude carr))\n	{:handler (fn[response])\n	 :error-handler error-handler})))")
	(title "send-manual-data []"))

([FlightPro_Class60001] of  CloNamespace

	(source "(:require\n  [csasync.proc :as asp]\n  [czm.core :as czm]\n  [view3d.controls :as ctl]\n  [carr.move :as mov]\n  [calc.core :as calc]\n  [calc.dynamic :as dyn]\n  [cognitect.transit :as t]\n  [ajax.core :refer (GET)]\n  [cljs.reader :as rdr]\n  [nightlight.repl-server])")
	(title "view3d.client"))

([FlightPro_Class610000] of  CloVar

	(source "\"no\"")
	(title "TERRAIN"))

([FlightPro_Class610039] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(lang "en")
	(lat 60.2144)
	(lng 24.9506)
	(rank 86)
	(summary "Käpylä is a neighbourhood of Helsinki with 7,600 inhabitants. Administratively speaking, Käpylä is a part of the Vanhakaupunki district. It is located between Kumpula, Oulunkylä and Koskela. Käpylä has a terminus for route-1 of the Helsinki tram network (...)")
	(title "Käpylä")
	(wikipediaUrl "http://en.wikipedia.org/wiki/K%C3%A4pyl%C3%A4"))

([FlightPro_Class610040] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "FI")
	(feature "adm2nd")
	(lang "en")
	(lat 60.25)
	(lng 24.5)
	(rank 100)
	(summary "Uusimaa (Finnish) or Nyland (Swedish) (both names mean “new land”) is a region in Finland. It borders the regions Finland Proper, Tavastia Proper, Päijänne Tavastia and Kymenlaakso. Finland’s capital Helsinki and its second largest city Espoo are both located centrally in Uusimaa, making it by far (...)")
	(title "Uusimaa")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Uusimaa"))

([FlightPro_Class610043] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "FI")
	(lang "en")
	(lat 60.1238)
	(lng 24.4357)
	(rank 95)
	(summary "Kirkkonummi is a municipality of inhabitants in southern Finland. The literal meaning of the words \"Kirkkonummi\" and \"Kyrkslätt\" in English is \"church moor\". The municipality is located just outside the Helsinki Metropolitan Area, bordering the city of Espoo in the east (...)")
	(title "Kirkkonummi")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Kirkkonummi"))

([FlightPro_Class610044] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "FI")
	(lang "en")
	(lat 60.5331)
	(lng 24.1831)
	(rank 94)
	(summary "Karkkila is a town and a municipality of Finland.  (...)")
	(title "Karkkila")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Karkkila"))

([FlightPro_Class610045] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(lang "en")
	(lat 60.375)
	(lng 25.2667)
	(rank 94)
	(summary "Sipoo is a municipality of Finland. Its seat is in Nikkilä/Nickby. It is the eastern neighbour of Helsinki and is located in the Uusimaa region. The municipality has a population of and covers an area of of which is water. The population density is  (...)")
	(title "Sipoo")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Sipoo"))

([FlightPro_Class610046] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "FI")
	(lang "en")
	(lat 60.5331)
	(lng 25.6)
	(rank 93)
	(summary "Askola is a municipality of Finland. It is located in the Uusimaa region. The municipality has a population of and covers an area of of which is water. The population density is . The municipality is unilingually Finnish.  (...)")
	(title "Askola")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Askola"))

([FlightPro_Class610047] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "FI")
	(lang "en")
	(lat 60.1983)
	(lng 24.8761)
	(rank 91)
	(summary "Munkkiniemi (in slang Munkka) is a neighbourhood in Helsinki. Subdivisions within the district are Vanha Munkkiniemi, Kuusisaari, Lehtisaari, Munkkivuori, Niemenmäki and Talinranta. The land in Munkkiniemi was from the 17th century a part of Munksnäs manor (...)")
	(title "Munkkiniemi")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Munkkiniemi"))

([FlightPro_Class610049] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "JP")
	(lang "en")
	(lat 60.4167)
	(lng 24.3331)
	(rank 91)
	(summary "Vihti is a small municipality located in the Uusimaa region of province of Southern Finland, approximately northwest of the capital city Helsinki. Its seat is Nummela. The municipality has a population of and covers an area of of which is water. The population density is .  (...)")
	(title "Vihti")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Vihti"))

([FlightPro_Class610051] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(lang "en")
	(lat 60.2539)
	(lng 25.0442)
	(rank 88)
	(summary "Helsinki-Malmi Airport is an airport in the city of Helsinki, Finland, located in the district of Malmi, north north-east of the city centre. Until the opening of the Helsinki-Vantaa Airport in 1952 it was the main airport of Helsinki and all Finland (...)")
	(title "Helsinki-Malmi Airport")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Helsinki-Malmi_Airport"))

([FlightPro_Class610052] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(lang "en")
	(lat 60.1756)
	(lng 24.9342)
	(rank 87)
	(summary "The World Federation of the Deaf (WFD) is an international non-governmental organization that acts as a peak body for national associations of Deaf people, with a focus on Deaf people who use sign language and their family and friends (...)")
	(title "World Federation of the Deaf")
	(wikipediaUrl "http://en.wikipedia.org/wiki/World_Federation_of_the_Deaf"))

([FlightPro_Class610055] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(feature "landmark")
	(lang "en")
	(lat 60.1712)
	(lng 24.9525)
	(rank 87)
	(summary "The Bank of Finland is the central bank of Finland. It is the fourth oldest central bank in the world.  (...)")
	(title "Bank of Finland")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Bank_of_Finland"))

([FlightPro_Class610056] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(feature "city")
	(lang "en")
	(lat 60.1047)
	(lng 24.9741)
	(rank 87)
	(summary "Sailing/Yachting is an Olympic sport starting from the Games of the 1st Olympiad (1896 Olympics in Athens). With the exception of 1904 and possible 1916 sailing was always a part of the Olympic program. The Sailing program of 1952 consisted of a total of five sailing classes (disciplines) (...)")
	(title "Sailing at the 1952 Summer Olympics")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Sailing_at_the_1952_Summer_Olympics"))

([FlightPro_Class610057] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(feature "landmark")
	(lang "en")
	(lat 60.2103)
	(lng 25.0781)
	(rank 87)
	(summary "Itäkeskus (Finnish) or Östra centrum (Swedish) is a ground-level station on the Helsinki Metro. It serves the Itäkeskus shopping centre and surrounding areas in East Helsinki. After the Itäkeskus station, there is a fork in the metro line: one branch continues north towards Mellunmäki, while another (...)")
	(title "Itäkeskus metro station")
	(wikipediaUrl "http://en.wikipedia.org/wiki/It%C3%A4keskus_metro_station"))

([FlightPro_Class610058] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(lang "en")
	(lat 60.1831)
	(lng 24.1997)
	(rank 86)
	(summary "Siuntio is a municipality of Finland. It is located in the province of Southern Finland and is part of the Uusimaa region. The municipality has a population of and covers an area of of which is water. The population density is  (...)")
	(title "Siuntio")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Siuntio"))

([FlightPro_Class610060] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "FI")
	(feature "city")
	(lang "en")
	(lat 60.2)
	(lng 25.05)
	(rank 85)
	(summary "Herttoniemi is a neighbourhood and a suburb of Helsinki, the Finnish capital. It is located about 7 km east of the city centre and can be easily reached by metro in 10 minutes. It has an older northern suburb and a newer coastal suburb with ferry connections to the city centre (...)")
	(title "Herttoniemi")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Herttoniemi"))

([FlightPro_Class610061] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(lang "en")
	(lat 60.6331)
	(lng 25.3167)
	(rank 84)
	(summary "Mäntsälä is a municipality in the province of Southern Finland, and is part of the Uusimaa region. It has a population of and covers an area of of which is water. The population density is . Mäntsälä lies about north of Helsinki, the capital of Finland (...)")
	(title "Mäntsälä")
	(wikipediaUrl "http://en.wikipedia.org/wiki/M%C3%A4nts%C3%A4l%C3%A4"))

([FlightPro_Class610062] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(feature "landmark")
	(lang "en")
	(lat 60.1706)
	(lng 24.9406)
	(rank 84)
	(summary "Rautatientori metro station or Central railway station metro station is a station on the Helsinki Metro in Finland. The entrance is located in the Asematunneli main hall, which has an exit to the Helsinki Central Railway Station (...)")
	(title "Rautatientori metro station")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Rautatientori_metro_station"))

([FlightPro_Class610063] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "FI")
	(feature "landmark")
	(lang "en")
	(lat 60.6264)
	(lng 24.8506)
	(rank 84)
	(summary "This is a list of locomotives and multiple units that have been used in Finland. VR Group (privatised in 1995, previously Valtionrautatiet, Finnish state railways) has a monopoly on passenger traffic and is currently the only freight operator on the Finnish rail network (...)")
	(title "List of Finnish locomotives")
	(wikipediaUrl "http://en.wikipedia.org/wiki/List_of_Finnish_locomotives"))

([FlightPro_Class610064] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(feature "landmark")
	(lang "en")
	(lat 60.1694)
	(lng 24.9178)
	(rank 83)
	(summary "The Hietaniemi cemetery is located mainly in the Lapinlahti quarter and partly in the Etu-Töölö district of Helsinki, the capital of Finland. It is the location for Finnish state funeral services. The cemetery includes a large military cemetery section for soldiers from the capital fallen in the (...)")
	(title "Hietaniemi cemetery")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Hietaniemi_cemetery"))

([FlightPro_Class610066] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(feature "city")
	(lang "en")
	(lat 60.2167)
	(lng 24.8167)
	(rank 83)
	(summary "Leppävaara (Finnish) or Alberga (Swedish) is a district of Espoo, a city in Finland. A major traffic hub in the Greater Helsinki region, the Rantarata rail line and Kehä I, the busiest road in Finland, cross in Leppävaara. The Sello Shopping Centre is also located there (...)")
	(title "Leppävaara")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Lepp%C3%A4vaara"))

([FlightPro_Class610067] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(feature "landmark")
	(lang "en")
	(lat 60.18)
	(lng 24.9506)
	(rank 83)
	(summary "Hakaniemi (Finnish) or Hagnäs (Swedish) is a station on the Helsinki Metro. It serves the central Helsinki districts of Hakaniemi and Kallio. The station was among the first metro stations opened in Helsinki, on 1 June 1982, and was designed by Mirja Castrén, Juhani Jauhiainen, and Marja Nuuttila (...)")
	(title "Hakaniemi metro station")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Hakaniemi_metro_station"))

([FlightPro_Class610068] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(feature "landmark")
	(lang "en")
	(lat 60.1889)
	(lng 25.0081)
	(rank 83)
	(summary "Kulosaari (Finnish) or Brändö (Swedish) is a ground-level station on the Helsinki Metro. It serves the island district of Kulosaari in East Helsinki. The station was one of the first metro stations opened in Helsinki, on 1 June 1982, and was designed by Jaakko Ylinen and Jarmo Maunula (...)")
	(title "Kulosaari metro station")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Kulosaari_metro_station"))

([FlightPro_Class610070] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(feature "landmark")
	(lang "en")
	(lat 60.1722)
	(lng 24.9475)
	(rank 83)
	(summary "Kaisaniemi (Finnish) or Kajsaniemi (Swedish) is a station on the Helsinki Metro. It serves the central Helsinki district of Kaisaniemi. It is the only station whose name is announced in only one language: whether this is Finnish or Swedish is unknown and irrelevant, because the Finnish 'Kaisaniemi' (...)")
	(title "Kaisaniemi metro station")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Kaisaniemi_metro_station"))

([FlightPro_Class610072] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "FI")
	(feature "city")
	(lang "en")
	(lat 60.2333)
	(lng 25.0167)
	(rank 82)
	(summary "Viikki is a neighbourhood of about 5,500 inhabitants in Helsinki, Finland. It is located at the bottom of Vanhankaupunginlahti bay, some 7–10 km from the city centre. The district hosts the Viikki Campus with four of the faculties of the University of Helsinki (biosciences, pharmacy, veterinary (...)")
	(title "Viikki")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Viikki"))

([FlightPro_Class610073] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(feature "landmark")
	(lang "en")
	(lat 60.1689)
	(lng 24.9319)
	(rank 82)
	(summary "The Kamppi metro station is a station on the Helsinki Metro. In addition to serving the area around Kamppi in central Helsinki, the station is integrated with the Kamppi Center bus terminal and shopping complex (...)")
	(title "Kamppi metro station")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Kamppi_metro_station"))

([FlightPro_Class610074] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(feature "landmark")
	(lang "en")
	(lat 60.1875)
	(lng 24.9611)
	(rank 82)
	(summary "Sörnäinen (Finnish) or Sörnäs (Swedish) is a station on the Helsinki Metro. It serves the central Helsinki districts of Sörnäinen and Kallio. When heading east, Sörnäinen is the last station that is actually underground - the eastern part of the metro service is mostly above ground (part of Vuosaari (...)")
	(title "Sörnäinen metro station")
	(wikipediaUrl "http://en.wikipedia.org/wiki/S%C3%B6rn%C3%A4inen_metro_station"))

([FlightPro_Class610076] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(feature "landmark")
	(lang "en")
	(lat 60.195)
	(lng 25.0308)
	(rank 82)
	(summary "Herttoniemi (Finnish) or Hertonäs (Swedish) is a ground-level station on the Helsinki Metro. It serves the district of Herttoniemi in East Helsinki. The station was one of the first metro stations opened in Helsinki, on 1 June 1982, and was designed by Jaakko Ylinen and Jarmo Maunula (...)")
	(title "Herttoniemi metro station")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Herttoniemi_metro_station"))

([FlightPro_Class610077] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(feature "landmark")
	(lang "en")
	(lat 60.1875)
	(lng 24.9769)
	(rank 82)
	(summary "Kalasatama (Finnish) or Fiskehamnen (Swedish) is a station on the Helsinki Metro, in the capital city of Finland. The station was opened on 1 January 2007, and it serves the eastern part of the central Helsinki district of Sörnäinen (...)")
	(title "Kalasatama metro station")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Kalasatama_metro_station"))

([FlightPro_Class610078] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(feature "railwaystation")
	(lang "en")
	(lat 60.2392)
	(lng 25.1108)
	(rank 81)
	(summary "Mellunmäki (Finnish) or Mellungsbacka (Swedish) is a ground-level bridge station on the northern branch (Itäkeskus - Mellunmäki) of the Helsinki Metro. It serves the district of Mellunmäki in East Helsinki, Finland and is the terminus of the northern branch (...)")
	(title "Mellunmäki metro station")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Mellunm%C3%A4ki_metro_station"))

([FlightPro_Class610079] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "FI")
	(feature "landmark")
	(lang "en")
	(lat 60.2072)
	(lng 25.1422)
	(rank 81)
	(summary "Vuosaari (Finnish) or Nordsjö (Swedish) is a ground-level station on the southern branch (Itäkeskus - Vuosaari) of the Helsinki Metro. It serves the district of Vuosaari in East Helsinki, and is the terminus of the branch (...)")
	(title "Vuosaari metro station")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Vuosaari_metro_station"))

([FlightPro_Class610098] of  TypeName

	(name "parking"))

([FlightPro_Class610101] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "FI")
	(feature "city")
	(lang "en")
	(lat 60.1667)
	(lng 24.9333)
	(population 620982)
	(rank 100)
	(summary "Helsinki is the capital and largest city of Finland. It is in the region of Uusimaa, in southern Finland, on the shore of the Gulf of Finland, an arm of the Baltic Sea. Helsinki has a population of , an urban population of 1.2 million (31 December 2013), and a metropolitan population of 1 (...)")
	(thumbnailImg "http://www.geonames.org/img/wikipedia/21000/thumb-20063-100.jpg")
	(title "Helsinki")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Helsinki"))

([FlightPro_Class610102] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(lang "en")
	(lat 60.2333)
	(lng 25.1167)
	(rank 100)
	(summary "The Helsinki Metro , is a rapid transit system serving Helsinki, Finland. It is the world's most northern metro system, and the only one in Finland. The system was opened to the general public on 2 August 1982 after 27 years of planning (...)")
	(title "Helsinki Metro")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Helsinki_Metro"))

([FlightPro_Class610104] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "FI")
	(feature "edu")
	(lang "en")
	(lat 60.1858)
	(lng 24.8278)
	(rank 98)
	(summary "Aalto University is a university primarily located in Greater Helsinki, Finland. It was established in 2010 as a merger of three major Finnish universities: the Helsinki University of Technology (established 1849), the Helsinki School of Economics (established 1904), and the University of Art and (...)")
	(title "Aalto University")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Aalto_University"))

([FlightPro_Class610105] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(lang "en")
	(lat 60.1706)
	(lng 24.8286)
	(rank 98)
	(summary "Nokia Corporation is a Finnish multinational communications and information technology company, founded in 1865. Nokia is headquartered in Espoo, Uusimaa, in the greater Helsinki metropolitan area. In 2014, Nokia employed 61,656 people across 120 countries, conducts sales in more than 150 countries (...)")
	(title "Nokia")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Nokia"))

([FlightPro_Class610106] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "FI")
	(feature "city")
	(lang "en")
	(lat 60.2167)
	(lng 24.7333)
	(rank 98)
	(summary "Kauniainen is a small town and a municipality of inhabitants in the Helsinki Metropolitan Area, Finland. It is surrounded by the City of Espoo, in Greater Helsinki. Kauniainen was founded by a corporation in 1906, AB Grankulla, that parcelled land and created a suburb for villas; Kauniainen received (...)")
	(title "Kauniainen")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Kauniainen"))

([FlightPro_Class610107] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "FI")
	(feature "city")
	(lang "en")
	(lat 60.4031)
	(lng 25.0253)
	(rank 98)
	(summary "Tuusula is a municipality of Finland. It belongs to the Helsinki sub-region of the Uusimaa region. The municipality has a population of .  (...)")
	(title "Tuusula")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Tuusula"))

([FlightPro_Class610108] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "FI")
	(lang "en")
	(lat 60.2031)
	(lng 24.9255)
	(rank 97)
	(summary "Yleisradio Oy (Finnish), also known as Rundradion (Swedish) or the Finnish Broadcasting Company (English), abbreviated to Yle (pronounced ; previously stylised as YLE before March 2012 corporate rebrand), is Finland's national public-broadcasting company, founded in 1926 (...)")
	(title "Yle")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Yle"))

([FlightPro_Class610109] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "FI")
	(feature "city")
	(lang "en")
	(lat 60.4667)
	(lng 24.8083)
	(rank 96)
	(summary "Nurmijärvi is the most populated rural municipality of Finland, located north of the capital Helsinki. The close proximity to Helsinki has led to a considerable growth of the major villages such as Klaukkala and Rajamäki, which nowadays are considered dormitory towns of Helsinki (...)")
	(title "Nurmijärvi")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Nurmij%C3%A4rvi"))

([FlightPro_Class610110] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "FI")
	(feature "adm1st")
	(lang "en")
	(lat 60.5)
	(lng 26.0)
	(rank 96)
	(summary "Southern Finland was a province of Finland from 1997 to 2009. It bordered the provinces of Western Finland and Eastern Finland. It also bordered the Gulf of Finland and Russia.  (...)")
	(title "Southern Finland Province")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Southern_Finland_Province"))

([FlightPro_Class610111] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(feature "landmark")
	(lang "en")
	(lat 60.1725)
	(lng 24.9331)
	(rank 96)
	(summary "The Eduskunta (or , or) is the parliament of Finland. The unicameral parliament has 200 members and normally meets in the Parliament House in Helsinki. However, during the 2015–2017 renovation of the Parliament House, the parliament meets in the nearby Sibelius Academy (...)")
	(title "Parliament of Finland")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Parliament_of_Finland"))

([FlightPro_Class610112] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(feature "landmark")
	(lang "en")
	(lat 60.1683)
	(lng 24.9422)
	(rank 95)
	(summary "The Stockmann department store is a culturally significant business building and department store located in the centre of Helsinki, Finland. It is one of many department stores owned by the Stockmann corporation (...)")
	(title "Stockmann, Helsinki centre")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Stockmann%2C_Helsinki_centre"))

([FlightPro_Class610113] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "FI")
	(feature "adm2nd")
	(lang "en")
	(lat 60.5)
	(lng 26.0)
	(rank 94)
	(summary "Eastern Uusimaa was a region in Finland, until it was consolidated with the region of Uusimaa on January 1, 2011. It bordered the regions Uusimaa, Päijänne Tavastia, and Kymenlaakso.  (...)")
	(title "Eastern Uusimaa")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Eastern_Uusimaa"))

([FlightPro_Class610114] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(lang "en")
	(lat 60.1783)
	(lng 24.915)
	(rank 94)
	(summary "The Finnish Environment Institute (SYKE) is a research institute and government agency under the Ministry of the Environment, located in Helsinki, Finland. It is both a research institute, and a centre for environmental expertise (...)")
	(title "Finnish Environment Institute")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Finnish_Environment_Institute"))

([FlightPro_Class610115] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(feature "landmark")
	(lang "en")
	(lat 60.169)
	(lng 24.951)
	(rank 93)
	(summary "Aleksanterinkatu is a street in the centre of Helsinki, Finland. In the city plan by Carl Ludvig Engel, it was the Decumanus Maximus, the main east-west street in the city, crossing the Cardo, Unioninkatu (Union Street) at the corner of the Senate Square (...)")
	(title "Aleksanterinkatu")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Aleksanterinkatu"))

([FlightPro_Class610116] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(lang "en")
	(lat 60.1708)
	(lng 24.9375)
	(rank 93)
	(summary "The 2015 Veikkausliiga was the eighty-fifth season of top-tier football in Finland. HJK Helsinki were the defending champions. The season was won by SJK.  (...)")
	(title "2015 Veikkausliiga")
	(wikipediaUrl "http://en.wikipedia.org/wiki/2015_Veikkausliiga"))

([FlightPro_Class610117] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(feature "landmark")
	(lang "en")
	(lat 60.2719)
	(lng 24.9728)
	(rank 93)
	(summary "Suunto Oy is a company that manufactures and markets sports watches, dive computers, compasses and precision instruments. Headquartered in Vantaa, Finland, Suunto employs more than 300 people worldwide, and its products are sold in over 100 countries (...)")
	(title "Suunto")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Suunto"))

([FlightPro_Class610119] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(feature "landmark")
	(lang "en")
	(lat 60.1877)
	(lng 24.9227)
	(rank 92)
	(summary "Sonera Stadium (until August 2010 Finnair Stadium; also known as Töölön jalkapallostadion, \"Töölö football stadium\") is a football stadium in Helsinki, Finland. The stadium was inaugurated in 2000. It has a capacity of 10,770 spectators (...)")
	(title "Sonera Stadium")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Sonera_Stadium"))

([FlightPro_Class610120] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "FI")
	(feature "city")
	(lang "en")
	(lat 60.1833)
	(lng 24.8333)
	(rank 91)
	(summary "Otaniemi (Finnish), or Otnäs (Swedish), is a district of Espoo, Finland. It is located near the border of Helsinki, the capital of Finland. Otaniemi is the home of the Aalto University engineering schools campus, thus \"Otaniemi\" is often used as a synonym for Aalto (...)")
	(title "Otaniemi")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Otaniemi"))

([FlightPro_Class610121] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(feature "landmark")
	(lang "en")
	(lat 60.175)
	(lng 24.9319)
	(rank 90)
	(summary "The National Museum of Finland presents Finnish history from the Stone Age to the present day, through objects and cultural history. The Finnish National Romantic style building is located in central Helsinki and is a part of the National Board of Antiquities , under the Ministry of Culture and (...)")
	(title "National Museum of Finland")
	(wikipediaUrl "http://en.wikipedia.org/wiki/National_Museum_of_Finland"))

([FlightPro_Class610122] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "FI")
	(feature "city")
	(lang "en")
	(lat 60.475)
	(lng 25.375)
	(rank 90)
	(summary "Pornainen is a municipality of Finland. It is located in the province of Southern Finland and is part of the Uusimaa region. The municipality has a population of and covers an area of of which is water. The population density is . The municipality is unilingually Finnish.  (...)")
	(title "Pornainen")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Pornainen"))

([FlightPro_Class610124] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "FI")
	(feature "landmark")
	(lang "en")
	(lat 60.1747)
	(lng 24.9836)
	(rank 89)
	(summary "Korkeasaari is an island in Helsinki, Finland where the country's biggest zoo is situated. The English name of the zoo is Helsinki Zoo. The zoo is located on a rocky island, connected to the mainland via a bridge to the Helsinki district of Mustikkamaa, where there is access to the zoo all year (...)")
	(thumbnailImg "http://www.geonames.org/img/wikipedia/10000/thumb-9385-100.jpg")
	(title "Korkeasaari")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Korkeasaari"))

([FlightPro_Class610125] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "FI")
	(feature "landmark")
	(lang "en")
	(lat 60.159)
	(lng 24.949)
	(rank 89)
	(summary "is the southern-most city district of Helsinki, in Finland. The name Ullanlinna refers to the fortification line that was built at the southern edge of the area during the 18th century (no longer visible), as part of the town fortifications, which also included the fortress of  (...)")
	(title "Ullanlinna")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Ullanlinna"))

([FlightPro_Class610126] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(feature "city")
	(lang "en")
	(lat 60.2931)
	(lng 25.0439)
	(rank 89)
	(summary "Tikkurila is a district and major region of the municipality of Vantaa, Finland. Located in the eastern half of the Helsinki conurbation, some north of the capital's downtown district, it is the administrative and commercial hub of Vantaa, although Myyrmäki is a rival commercial hub within the (...)")
	(title "Tikkurila")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Tikkurila"))

([FlightPro_Class610127] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(feature "city")
	(lang "en")
	(lat 60.1864)
	(lng 24.9681)
	(rank 89)
	(summary "Sörnäinen (; Sörkkä or Sörkka in Helsinki slang) is a neighbourhood in the city of Helsinki, Finland. Sörnäinen is located a little more than one kilometre north from the coastal centre of Helsinki, near the district of Hakaniemi. The east side of Sörnäinen borders the sea (...)")
	(title "Sörnäinen")
	(wikipediaUrl "http://en.wikipedia.org/wiki/S%C3%B6rn%C3%A4inen"))

([FlightPro_Class610128] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "FI")
	(feature "landmark")
	(lang "en")
	(lat 60.1722)
	(lng 24.9475)
	(rank 89)
	(summary "University of Helsinki is a station on the Helsinki Metro. It serves the central Helsinki district of Kaisaniemi and was known by this name until the end of 2014. The station is 27 metres below ground level and 22 metres below sea level (...)")
	(title "University of Helsinki metro station")
	(wikipediaUrl "http://en.wikipedia.org/wiki/University_of_Helsinki_metro_station"))

([FlightPro_Class610129] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(feature "landmark")
	(lang "en")
	(lat 60.175)
	(lng 24.96)
	(rank 88)
	(summary "The Military Museum of Finland is the central museum of the Finnish Defence Forces and the national special museum of military history. It is located in Helsinki and it is part of the Finnish National Defence University (...)")
	(title "Military Museum of Finland")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Military_Museum_of_Finland"))

([FlightPro_Class610130] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(feature "landmark")
	(lang "en")
	(lat 60.1717)
	(lng 24.9369)
	(rank 88)
	(summary "Kiasma is a contemporary art museum located on Mannerheimintie in Helsinki, Finland. Its name kiasma, Finnish for chiasma, alludes to the basic conceptual idea of its architect, Steven Holl. The museum exhibits the contemporary art collection of the Finnish National Gallery founded in 1990 (...)")
	(title "Kiasma")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Kiasma"))

([FlightPro_Class610131] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(feature "isle")
	(lang "en")
	(lat 60.1861)
	(lng 25.0069)
	(rank 88)
	(summary "Kulosaari is an island and a suburb in Helsinki, Finland. It is also the 42nd neighbourhood of the city. Construction of villas on the island started in the beginning of the 20th century, and a bridge from Sörnäinen was opened in 1919 (...)")
	(thumbnailImg "http://www.geonames.org/img/wikipedia/139000/thumb-138317-100.jpg")
	(title "Kulosaari")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Kulosaari"))

([FlightPro_Class610132] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "FI")
	(feature "city")
	(lang "en")
	(lat 60.2503)
	(lng 25.0097)
	(population 22336)
	(rank 88)
	(summary "Oulunkylä (also known as Ogeli) is a suburb and a neighbourhood of Helsinki, the capital of Finland. It is located north from the center of the city. It has been inhabited since the 13th century. Earlier an independent municipality, it was made part of Helsinki in 1946 (...)")
	(title "Oulunkylä")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Oulunkyl%C3%A4"))

([FlightPro_Class610133] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "FI")
	(feature "city")
	(lang "en")
	(lat 60.1714)
	(lng 24.9461)
	(rank 88)
	(summary "Kluuvi is the commercial centre of Helsinki, Finland, and a neighbourhood in the Vironniemi district of Helsinki. The Helsinki Central railway station, the Helsinki main post office, the Stockmann and Sokos department stores, the Kluuvi shopping centre and the main offices of Finnish banks are (...)")
	(title "Kluuvi")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Kluuvi"))

([FlightPro_Class610134] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(feature "city")
	(lang "en")
	(lat 60.1617)
	(lng 24.9381)
	(rank 87)
	(summary "Punavuori is a neighbourhood in Helsinki, the capital of Finland. The name Punavuori (English: Red mountain) refers to red cliffs located between Sepänkatu and Punavuorenkatu. They were still visible in the 19th century, nowadays they are covered with buildings and pavement (...)")
	(title "Punavuori")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Punavuori"))

([FlightPro_Class610135] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(feature "city")
	(lang "en")
	(lat 60.162)
	(lng 24.914)
	(rank 87)
	(summary "Ruoholahti (Swedish: Gräsviken) is a quarter in Helsinki, part of the Länsisatama neighbourhood and Kampinmalmi district. The name means Grass Bay and is pronounced . Ruoholahti is located in the southwestern part of the central city area of Helsinki, close to the Lauttasaari island, and it (...)")
	(title "Ruoholahti")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Ruoholahti"))

([FlightPro_Class610136] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(lang "en")
	(lat 60.2167)
	(lng 24.95)
	(rank 87)
	(summary "Uusimaa (Swedish: Nyland), is a historical province in the south of Finland. It borders Finland Proper, Tavastia, Savonia, and Karelia. The English translation would be \"new land\". From the Middle Ages to 1809, most of the present-day Finland was a part of Sweden (...)")
	(title "Uusimaa (historical province)")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Uusimaa_%28historical_province%29"))

([FlightPro_Class610137] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(feature "isle")
	(lang "en")
	(lat 60.1456)
	(lng 25.0442)
	(rank 87)
	(summary "Santahamina is an island and neighbourhood of Eastern Helsinki, Finland. At present it is a military base housing the Guard Jaeger Regiment, making access restricted. The Finnish National Defence University (NDU) is also located on the island (...)")
	(title "Santahamina")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Santahamina"))

([FlightPro_Class610138] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(feature "landmark")
	(lang "en")
	(lat 60.1676)
	(lng 24.9548)
	(rank 87)
	(summary "The Market Square (Kauppatori in Finnish, Salutorget in Swedish) is a central square in Helsinki, Finland, and one of the most famous market places and tourist attractions in the city. The Market Square is located near the centre of Helsinki, at the eastern end of Esplanadi and bordering the Baltic (...)")
	(title "Market Square, Helsinki")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Market_Square%2C_Helsinki"))

([FlightPro_Class610139] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(feature "landmark")
	(lang "en")
	(lat 60.1703)
	(lng 24.9508)
	(rank 87)
	(summary "The National Library of Finland is the foremost research library in Finland. Administratively the library is part of the University of Helsinki. Until 1 August 2006, it was known as the Helsinki University Library. The National Library is responsible for storing the Finnish cultural heritage (...)")
	(title "National Library of Finland")
	(wikipediaUrl "http://en.wikipedia.org/wiki/National_Library_of_Finland"))

([FlightPro_Class610140] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(lang "en")
	(lat 60.3508)
	(lng 25.0778)
	(rank 87)
	(summary "Korso is a district and major region in northeastern Vantaa, Finland. The district has 7,402 inhabitants (as of 1 January 2014). Since 2007, the Korso major region has included the following nine districts: Matari, Korso, Mikkola, Metsola, Leppäkorpi, Jokivarsi, Nikinmäki, Vierumäki and Vallinoja (...)")
	(title "Korso")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Korso"))

([FlightPro_Class610141] of  PointOfInterest

	(distance 0.0)
	(lat 60.29311)
	(lng 25.043873)
	(name "R-kioski")
	(typeClass [FlightPro_Class280086])
	(typeName [FlightPro_Class280109]))

([FlightPro_Class610142] of  TypeName

	(name "florist"))

([FlightPro_Class610143] of  PointOfInterest

	(distance 0.02)
	(lat 60.293133)
	(lng 25.044176)
	(name "Kaivokukka")
	(typeClass [FlightPro_Class280086])
	(typeName [FlightPro_Class610142]))

([FlightPro_Class610144] of  PointOfInterest

	(distance 0.02)
	(lat 60.292946)
	(lng 25.043814)
	(name "Picnic")
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class330085]))

([FlightPro_Class610145] of  PointOfInterest

	(distance 0.03)
	(lat 60.29287)
	(lng 25.04379)
	(name "La Pasteria Italiana")
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class280107]))

([FlightPro_Class610146] of  PointOfInterest

	(distance 0.03)
	(lat 60.293106)
	(lng 25.04451)
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class280094]))

([FlightPro_Class610147] of  PointOfInterest

	(distance 0.03)
	(lat 60.2928)
	(lng 25.04377)
	(name "Hao King")
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class280107]))

([FlightPro_Class610148] of  TypeName

	(name "confectionery"))

([FlightPro_Class610149] of  PointOfInterest

	(distance 0.04)
	(lat 60.293404)
	(lng 25.04427)
	(name "Karkkitori")
	(typeClass [FlightPro_Class280086])
	(typeName [FlightPro_Class610148]))

([FlightPro_Class610150] of  PointOfInterest

	(distance 0.04)
	(lat 60.29271)
	(lng 25.043734)
	(name "Grande Parilla")
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class280107]))

([FlightPro_Class610151] of  PointOfInterest

	(distance 0.05)
	(lat 60.29269)
	(lng 25.043621)
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class280094]))

([FlightPro_Class610152] of  PointOfInterest

	(distance 0.05)
	(lat 60.29353)
	(lng 25.044127)
	(name "S-market")
	(typeClass [FlightPro_Class280086])
	(typeName [FlightPro_Class330056]))

([FlightPro_Class610153] of  TypeName

	(name "ticket"))

([FlightPro_Class610154] of  PointOfInterest

	(distance 0.05)
	(lat 60.292625)
	(lng 25.043653)
	(typeClass [FlightPro_Class280086])
	(typeName [FlightPro_Class610153]))

([FlightPro_Class610155] of  PointOfInterest

	(distance 0.06)
	(lat 60.29275)
	(lng 25.044615)
	(name "Tikkurila")
	(typeClass [FlightPro_Class330052])
	(typeName [FlightPro_Class330058]))

([FlightPro_Class610156] of  TypeName

	(name "bus_station"))

([FlightPro_Class610157] of  PointOfInterest

	(distance 0.08)
	(lat 60.293766)
	(lng 25.044106)
	(name "Tikkurila")
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class610156]))

([FlightPro_Class610158] of  TypeName

	(name "bicycle_parking"))

([FlightPro_Class610159] of  PointOfInterest

	(distance 0.11)
	(lat 60.29217)
	(lng 25.043476)
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class610158]))

([FlightPro_Class610160] of  PointOfInterest

	(distance 0.12)
	(lat 60.29231)
	(lng 25.042446)
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class330045]))

([FlightPro_Class610161] of  PointOfInterest

	(distance 0.12)
	(lat 60.29201)
	(lng 25.043568)
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class610158]))

([FlightPro_Class610162] of  PointOfInterest

	(distance 0.14)
	(lat 60.29189)
	(lng 25.043726)
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class280094]))

([FlightPro_Class610163] of  PointOfInterest

	(distance 0.14)
	(lat 60.29245)
	(lng 25.041706)
	(name "Vantaan 10. asema-apteekki")
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class280123]))

([FlightPro_Class610164] of  PointOfInterest

	(distance 0.14)
	(lat 60.293156)
	(lng 25.041344)
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class610098]))

([FlightPro_Class610165] of  PointOfInterest

	(distance 0.16)
	(lat 60.292027)
	(lng 25.042063)
	(name "Golden Rax Pizzabuffet Tikkurila")
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class280107]))

([FlightPro_Class610166] of  PointOfInterest

	(distance 0.17)
	(lat 60.292885)
	(lng 25.040894)
	(name "Nordea Vantaa-Tikkurila")
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class330073]))

([FlightPro_Class610167] of  PointOfInterest

	(distance 0.17)
	(lat 60.294613)
	(lng 25.043911)
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class280107]))

([FlightPro_Class610168] of  PointOfInterest

	(distance 0.18)
	(lat 60.29261)
	(lng 25.040804)
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class280125]))

([FlightPro_Class610169] of  PointOfInterest

	(distance 0.19)
	(lat 60.292984)
	(lng 25.040548)
	(name "Danske Bank")
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class330073]))

([FlightPro_Class610170] of  PointOfInterest

	(distance 0.19)
	(lat 60.29301)
	(lng 25.040487)
	(name "Otto.")
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class330066]))

([FlightPro_Class610171] of  TypeName

	(name "crossing"))

([FlightPro_Class610172] of  PointOfInterest

	(distance 0.19)
	(lat 60.29304)
	(lng 25.047365)
	(typeClass [FlightPro_Class330052])
	(typeName [FlightPro_Class610171]))

([FlightPro_Class610173] of  PointOfInterest

	(distance 0.19)
	(lat 60.292446)
	(lng 25.040625)
	(name "Hesburger Tikkurila")
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class280092]))

([FlightPro_Class610174] of  TypeName

	(name "car_wash"))

([FlightPro_Class610175] of  PointOfInterest

	(distance 0.2)
	(lat 60.29198)
	(lng 25.041132)
	(name "Autopesu Tikkuri")
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class610174]))

([FlightPro_Class610176] of  PointOfInterest

	(distance 0.2)
	(lat 60.292755)
	(lng 25.040361)
	(name "Marian konditoria")
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class330085]))

([FlightPro_Class610177] of  PointOfInterest

	(distance 0.2)
	(lat 60.2927)
	(lng 25.040325)
	(name "Thai Palace")
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class280107]))

([FlightPro_Class610178] of  TypeName

	(name "parking_entrance"))

([FlightPro_Class610179] of  PointOfInterest

	(distance 0.2)
	(lat 60.291855)
	(lng 25.04116)
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class610178]))

([FlightPro_Class610180] of  PointOfInterest

	(distance 0.21)
	(lat 60.29188)
	(lng 25.04098)
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class610178]))

([FlightPro_Class610181] of  TypeName

	(name "townhall"))

([FlightPro_Class610182] of  PointOfInterest

	(distance 0.21)
	(lat 60.293625)
	(lng 25.04021)
	(name "Vantaan kaupungintalo")
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class610181]))

([FlightPro_Class610183] of  PointOfInterest

	(distance 0.21)
	(lat 60.291893)
	(lng 25.040903)
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class610178]))

([FlightPro_Class610184] of  PointOfInterest

	(distance 0.21)
	(lat 60.294968)
	(lng 25.044752)
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class330045]))

([FlightPro_Class610185] of  PointOfInterest

	(distance 0.22)
	(lat 60.291912)
	(lng 25.040777)
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class610178]))

([FlightPro_Class610186] of  PointOfInterest

	(distance 0.25)
	(lat 60.292072)
	(lng 25.03993)
	(name "Oriental House")
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class280107]))

([FlightPro_Class610187] of  PointOfInterest

	(distance 0.27)
	(lat 60.290817)
	(lng 25.04205)
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class330045]))

([FlightPro_Class610188] of  PointOfInterest

	(distance 0.29)
	(lat 60.295475)
	(lng 25.046276)
	(typeClass [FlightPro_Class330052])
	(typeName [FlightPro_Class290046]))

([FlightPro_Class610189] of  PointOfInterest

	(distance 0.3)
	(lat 60.29062)
	(lng 25.041645)
	(name "Sokos Hotel Vantaa")
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class280101]))

([FlightPro_Class610190] of  PointOfInterest

	(distance 0.3)
	(lat 60.29062)
	(lng 25.041645)
	(name "Sokos Hotel Vantaa")
	(typeClass [FlightPro_Class280139])
	(typeName [FlightPro_Class280140]))

([FlightPro_Class610191] of  PointOfInterest

	(distance 0.32)
	(lat 60.290535)
	(lng 25.041279)
	(name "Pub Hertas")
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class280105]))

([FlightPro_Class610192] of  TypeName

	(name "waste_basket"))

([FlightPro_Class610193] of  PointOfInterest

	(distance 0.32)
	(lat 60.29053)
	(lng 25.046566)
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class610192]))

([FlightPro_Class610194] of  PointOfInterest

	(distance 0.38)
	(lat 60.289646)
	(lng 25.044235)
	(name "Vernissa-Kahvila")
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class330085]))

([FlightPro_Class610195] of  TypeName

	(name "theatre"))

([FlightPro_Class610196] of  PointOfInterest

	(distance 0.4)
	(lat 60.289543)
	(lng 25.043863)
	(name "Tikkurilan Teatteri")
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class610195]))

([FlightPro_Class610197] of  PointOfInterest

	(distance 0.4)
	(lat 60.296486)
	(lng 25.04617)
	(typeClass [FlightPro_Class330052])
	(typeName [FlightPro_Class290046]))

([FlightPro_Class610198] of  TypeName

	(name "viewpoint"))

([FlightPro_Class610199] of  PointOfInterest

	(distance 0.43)
	(lat 60.289314)
	(lng 25.04502)
	(typeClass [FlightPro_Class280139])
	(typeName [FlightPro_Class610198]))

([FlightPro_Class610200] of  TypeName

	(name "bench"))

([FlightPro_Class610201] of  PointOfInterest

	(distance 0.45)
	(lat 60.289055)
	(lng 25.044249)
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class610200]))

([FlightPro_Class610202] of  PointOfInterest

	(distance 0.46)
	(lat 60.288975)
	(lng 25.044052)
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class610200]))

([FlightPro_Class610203] of  TypeName

	(name "fountain"))

([FlightPro_Class610204] of  PointOfInterest

	(distance 0.46)
	(lat 60.288967)
	(lng 25.043512)
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class610203]))

([FlightPro_Class610205] of  Airport

	(altitude 430)
	(coord 60.6544 24.8811)
	(country "Finland")
	(iata "HYV")
	(icao "EFHV")
	(runways 0)
	(title "Hyvinkaa Airport"))

([FlightPro_Class610206] of  PointOfInterest

	(distance 0.1)
	(lat 60.199833)
	(lng 24.934229)
	(typeClass [FlightPro_Class280098])
	(typeName [FlightPro_Class330040]))

([FlightPro_Class610207] of  PointOfInterest

	(distance 0.1)
	(lat 60.19951)
	(lng 24.934057)
	(name "Pasilan asema")
	(typeClass [FlightPro_Class330052])
	(typeName [FlightPro_Class330053]))

([FlightPro_Class610208] of  PointOfInterest

	(distance 0.11)
	(lat 60.20048)
	(lng 24.934225)
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class280148]))

([FlightPro_Class610209] of  PointOfInterest

	(distance 0.11)
	(lat 60.20089)
	(lng 24.933372)
	(typeClass [FlightPro_Class280098])
	(typeName [FlightPro_Class330040]))

([FlightPro_Class610210] of  PointOfInterest

	(distance 0.11)
	(lat 60.200207)
	(lng 24.934532)
	(name "Eestin herkut")
	(typeClass [FlightPro_Class280086])
	(typeName [FlightPro_Class280089]))

([FlightPro_Class610211] of  PointOfInterest

	(distance 0.12)
	(lat 60.200436)
	(lng 24.93447)
	(name "Ratakivi")
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class280107]))

([FlightPro_Class610212] of  PointOfInterest

	(distance 0.13)
	(lat 60.19889)
	(lng 24.933018)
	(name "Marian konditoria")
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class330085]))

([FlightPro_Class610213] of  PointOfInterest

	(distance 0.13)
	(lat 60.198833)
	(lng 24.932674)
	(name "Baguette & Co.")
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class280092]))

([FlightPro_Class610214] of  PointOfInterest

	(distance 0.13)
	(lat 60.199883)
	(lng 24.93485)
	(typeClass [FlightPro_Class280098])
	(typeName [FlightPro_Class280099]))

([FlightPro_Class610215] of  PointOfInterest

	(distance 0.13)
	(lat 60.200897)
	(lng 24.934061)
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class280148]))

([FlightPro_Class610216] of  PointOfInterest

	(distance 0.13)
	(lat 60.199154)
	(lng 24.934214)
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class610158]))

([FlightPro_Class610217] of  PointOfInterest

	(distance 0.13)
	(lat 60.19888)
	(lng 24.933418)
	(name "R-kioski")
	(typeClass [FlightPro_Class280086])
	(typeName [FlightPro_Class280109]))

([FlightPro_Class610218] of  PointOfInterest

	(distance 0.14)
	(lat 60.200806)
	(lng 24.934357)
	(name "South China")
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class280107]))

([FlightPro_Class610219] of  PointOfInterest

	(distance 0.14)
	(lat 60.19902)
	(lng 24.934008)
	(typeClass [FlightPro_Class280086])
	(typeName [FlightPro_Class610142]))

([FlightPro_Class610220] of  PointOfInterest

	(distance 0.14)
	(lat 60.198727)
	(lng 24.932692)
	(name "Piccolo pizza")
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class280092]))

([FlightPro_Class610221] of  PointOfInterest

	(distance 0.14)
	(lat 60.198814)
	(lng 24.933533)
	(name "Pasilan apteekki")
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class280123]))

([FlightPro_Class610222] of  TypeName

	(name "grit_bin"))

([FlightPro_Class610223] of  PointOfInterest

	(distance 0.14)
	(lat 60.19954)
	(lng 24.934935)
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class610222]))

([FlightPro_Class610224] of  PointOfInterest

	(distance 0.15)
	(lat 60.199013)
	(lng 24.934214)
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class280148]))

([FlightPro_Class610225] of  PointOfInterest

	(distance 0.15)
	(lat 60.199013)
	(lng 24.93428)
	(name "Pasilan asema")
	(typeClass [FlightPro_Class330052])
	(typeName [FlightPro_Class330053]))

([FlightPro_Class610226] of  PointOfInterest

	(distance 0.15)
	(lat 60.20096)
	(lng 24.934353)
	(typeClass [FlightPro_Class280098])
	(typeName [FlightPro_Class330040]))

([FlightPro_Class610227] of  PointOfInterest

	(distance 0.15)
	(lat 60.199245)
	(lng 24.934803)
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class280148]))

([FlightPro_Class610228] of  PointOfInterest

	(distance 0.15)
	(lat 60.19888)
	(lng 24.934097)
	(name "Cafe Express")
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class280092]))

([FlightPro_Class610229] of  PointOfInterest

	(distance 0.15)
	(lat 60.19894)
	(lng 24.934273)
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class610158]))

([FlightPro_Class610230] of  PointOfInterest

	(distance 0.15)
	(lat 60.20133)
	(lng 24.933313)
	(typeClass [FlightPro_Class280098])
	(typeName [FlightPro_Class330040]))

([FlightPro_Class610231] of  PointOfInterest

	(distance 0.16)
	(lat 60.201126)
	(lng 24.93423)
	(typeClass [FlightPro_Class280098])
	(typeName [FlightPro_Class330040]))

([FlightPro_Class610232] of  PointOfInterest

	(distance 0.16)
	(lat 60.19866)
	(lng 24.933483)
	(name "Pasila")
	(typeClass [FlightPro_Class330052])
	(typeName [FlightPro_Class330058]))

([FlightPro_Class610233] of  PointOfInterest

	(distance 0.16)
	(lat 60.201355)
	(lng 24.933525)
	(typeClass [FlightPro_Class280098])
	(typeName [FlightPro_Class330040]))

([FlightPro_Class610234] of  PointOfInterest

	(distance 0.17)
	(lat 60.19853)
	(lng 24.933184)
	(name "Hesburger Pasila")
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class280092]))

([FlightPro_Class610235] of  PointOfInterest

	(distance 0.17)
	(lat 60.198807)
	(lng 24.934425)
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class610158]))

([FlightPro_Class610236] of  PointOfInterest

	(distance 0.17)
	(lat 60.198433)
	(lng 24.932762)
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class330066]))

([FlightPro_Class610237] of  PointOfInterest

	(distance 0.18)
	(lat 60.201046)
	(lng 24.934883)
	(typeClass [FlightPro_Class280098])
	(typeName [FlightPro_Class330040]))

([FlightPro_Class610238] of  PointOfInterest

	(distance 0.18)
	(lat 60.201557)
	(lng 24.9331)
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class610158]))

([FlightPro_Class610239] of  PointOfInterest

	(distance 0.18)
	(lat 60.198555)
	(lng 24.933817)
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class330045]))

([FlightPro_Class610240] of  PointOfInterest

	(distance 0.18)
	(lat 60.19896)
	(lng 24.934948)
	(name "Pasilan asema")
	(typeClass [FlightPro_Class330052])
	(typeName [FlightPro_Class330053]))

([FlightPro_Class610241] of  PointOfInterest

	(distance 0.18)
	(lat 60.198616)
	(lng 24.934145)
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class280136]))

([FlightPro_Class610242] of  PointOfInterest

	(distance 0.19)
	(lat 60.198345)
	(lng 24.932924)
	(name "K-Market Pasila")
	(typeClass [FlightPro_Class280086])
	(typeName [FlightPro_Class280089]))

([FlightPro_Class610243] of  PointOfInterest

	(distance 0.19)
	(lat 60.19875)
	(lng 24.934755)
	(name "Veturiparkki")
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class610098]))

([FlightPro_Class610244] of  PointOfInterest

	(distance 0.19)
	(lat 60.198296)
	(lng 24.93316)
	(typeClass [FlightPro_Class280098])
	(typeName [FlightPro_Class280099]))

([FlightPro_Class610245] of  PointOfInterest

	(distance 0.2)
	(lat 60.198254)
	(lng 24.933012)
	(name "Nelmanni")
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class280107]))

([FlightPro_Class610246] of  PointOfInterest

	(distance 0.2)
	(lat 60.198357)
	(lng 24.933865)
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class280094]))

([FlightPro_Class610247] of  PointOfInterest

	(distance 0.2)
	(lat 60.198456)
	(lng 24.934366)
	(name "Danske Bank")
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class330073]))

([FlightPro_Class610248] of  PointOfInterest

	(distance 0.2)
	(lat 60.198524)
	(lng 24.934607)
	(typeClass [FlightPro_Class280098])
	(typeName [FlightPro_Class330040]))

([FlightPro_Class610249] of  TypeName

	(name "college"))

([FlightPro_Class610250] of  PointOfInterest

	(distance 0.21)
	(lat 60.201653)
	(lng 24.93421)
	(name "Haaga-Helia")
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class610249]))

([FlightPro_Class610251] of  PointOfInterest

	(distance 0.22)
	(lat 60.201813)
	(lng 24.933954)
	(name "Haaga Helia Library")
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class330118]))

([FlightPro_Class610252] of  PointOfInterest

	(distance 0.22)
	(lat 60.19824)
	(lng 24.934258)
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class610158]))

([FlightPro_Class610253] of  PointOfInterest

	(distance 0.22)
	(lat 60.198265)
	(lng 24.934404)
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class610192]))

([FlightPro_Class610254] of  PointOfInterest

	(distance 0.23)
	(lat 60.198097)
	(lng 24.934296)
	(typeClass [FlightPro_Class280098])
	(typeName [FlightPro_Class330040]))

([FlightPro_Class610255] of  PointOfInterest

	(distance 0.24)
	(lat 60.197857)
	(lng 24.93244)
	(typeClass [FlightPro_Class280098])
	(typeName [FlightPro_Class330040]))

([FlightPro_Class610256] of  PointOfInterest

	(distance 0.24)
	(lat 60.197956)
	(lng 24.933916)
	(typeClass [FlightPro_Class280098])
	(typeName [FlightPro_Class330040]))

([FlightPro_Class610257] of  PointOfInterest

	(distance 0.24)
	(lat 60.198)
	(lng 24.934343)
	(typeClass [FlightPro_Class280098])
	(typeName [FlightPro_Class330040]))

([FlightPro_Class610258] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "FI")
	(feature "city")
	(lang "en")
	(lat 60.2)
	(lng 24.9325)
	(population 8338)
	(rank 89)
	(summary "is a suburb in Helsinki, Finland. It is a central-northern neighbourhood, bordering Alppila to the south, Central Park (Keskuspuisto) to the west and Vallila to the east. The eastern and western part of Pasila are separated by a large railroad classification yard, which, as Central Pasila, is (...)")
	(thumbnailImg "http://www.geonames.org/img/wikipedia/130000/thumb-129253-100.jpg")
	(title "Pasila")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Pasila"))

([FlightPro_Class610259] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(feature "railwaystation")
	(lang "en")
	(lat 60.1994)
	(lng 24.9328)
	(rank 74)
	(summary "Pasila railway station is a railway station in Helsinki, Finland, approximately north of Helsinki Central railway station. It is the second busiest railway station in Finland, after Helsinki Central, and takes up a large part of the district of Pasila. The station was first opened in 1862 (...)")
	(title "Pasila railway station")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Pasila_railway_station"))

([FlightPro_Class610260] of  PointOfInterest

	(distance 0.06)
	(lat 60.19889)
	(lng 24.933018)
	(name "Marian konditoria")
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class330085]))

([FlightPro_Class610261] of  PointOfInterest

	(distance 0.06)
	(lat 60.198833)
	(lng 24.932674)
	(name "Baguette & Co.")
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class280092]))

([FlightPro_Class610262] of  PointOfInterest

	(distance 0.07)
	(lat 60.19888)
	(lng 24.933418)
	(name "R-kioski")
	(typeClass [FlightPro_Class280086])
	(typeName [FlightPro_Class280109]))

([FlightPro_Class610263] of  PointOfInterest

	(distance 0.07)
	(lat 60.19951)
	(lng 24.934057)
	(name "Pasilan asema")
	(typeClass [FlightPro_Class330052])
	(typeName [FlightPro_Class330053]))

([FlightPro_Class610264] of  PointOfInterest

	(distance 0.08)
	(lat 60.198727)
	(lng 24.932692)
	(name "Piccolo pizza")
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class280092]))

([FlightPro_Class610265] of  PointOfInterest

	(distance 0.08)
	(lat 60.198814)
	(lng 24.933533)
	(name "Pasilan apteekki")
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class280123]))

([FlightPro_Class610266] of  PointOfInterest

	(distance 0.08)
	(lat 60.19902)
	(lng 24.934008)
	(typeClass [FlightPro_Class280086])
	(typeName [FlightPro_Class610142]))

([FlightPro_Class610267] of  PointOfInterest

	(distance 0.08)
	(lat 60.199154)
	(lng 24.934214)
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class610158]))

([FlightPro_Class610268] of  PointOfInterest

	(distance 0.09)
	(lat 60.199013)
	(lng 24.934214)
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class280148]))

([FlightPro_Class610269] of  PointOfInterest

	(distance 0.09)
	(lat 60.19866)
	(lng 24.933483)
	(name "Pasila")
	(typeClass [FlightPro_Class330052])
	(typeName [FlightPro_Class330058]))

([FlightPro_Class610270] of  PointOfInterest

	(distance 0.09)
	(lat 60.19888)
	(lng 24.934097)
	(name "Cafe Express")
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class280092]))

([FlightPro_Class610271] of  PointOfInterest

	(distance 0.09)
	(lat 60.199833)
	(lng 24.934229)
	(typeClass [FlightPro_Class280098])
	(typeName [FlightPro_Class330040]))

([FlightPro_Class610272] of  PointOfInterest

	(distance 0.09)
	(lat 60.199013)
	(lng 24.93428)
	(name "Pasilan asema")
	(typeClass [FlightPro_Class330052])
	(typeName [FlightPro_Class330053]))

([FlightPro_Class610273] of  PointOfInterest

	(distance 0.1)
	(lat 60.19894)
	(lng 24.934273)
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class610158]))

([FlightPro_Class610274] of  PointOfInterest

	(distance 0.1)
	(lat 60.19853)
	(lng 24.933184)
	(name "Hesburger Pasila")
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class280092]))

([FlightPro_Class610275] of  PointOfInterest

	(distance 0.11)
	(lat 60.198433)
	(lng 24.932762)
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class330066]))

([FlightPro_Class610276] of  PointOfInterest

	(distance 0.11)
	(lat 60.198555)
	(lng 24.933817)
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class330045]))

([FlightPro_Class610277] of  PointOfInterest

	(distance 0.11)
	(lat 60.198807)
	(lng 24.934425)
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class610158]))

([FlightPro_Class610278] of  PointOfInterest

	(distance 0.11)
	(lat 60.199245)
	(lng 24.934803)
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class280148]))

([FlightPro_Class610279] of  PointOfInterest

	(distance 0.11)
	(lat 60.198967)
	(lng 24.934662)
	(name "Veturiparkki")
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class610098]))

([FlightPro_Class610280] of  PointOfInterest

	(distance 0.11)
	(lat 60.198616)
	(lng 24.934145)
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class280136]))

([FlightPro_Class610281] of  PointOfInterest

	(distance 0.12)
	(lat 60.198345)
	(lng 24.932924)
	(name "K-Market Pasila")
	(typeClass [FlightPro_Class280086])
	(typeName [FlightPro_Class280089]))

([FlightPro_Class610282] of  PointOfInterest

	(distance 0.12)
	(lat 60.19954)
	(lng 24.934935)
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class610222]))

([FlightPro_Class610283] of  PointOfInterest

	(distance 0.12)
	(lat 60.198296)
	(lng 24.93316)
	(typeClass [FlightPro_Class280098])
	(typeName [FlightPro_Class280099]))

([FlightPro_Class610284] of  PointOfInterest

	(distance 0.13)
	(lat 60.199883)
	(lng 24.93485)
	(typeClass [FlightPro_Class280098])
	(typeName [FlightPro_Class280099]))

([FlightPro_Class610285] of  PointOfInterest

	(distance 0.13)
	(lat 60.198254)
	(lng 24.933012)
	(name "Nelmanni")
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class280107]))

([FlightPro_Class610286] of  PointOfInterest

	(distance 0.13)
	(lat 60.19896)
	(lng 24.934948)
	(name "Pasilan asema")
	(typeClass [FlightPro_Class330052])
	(typeName [FlightPro_Class330053]))

([FlightPro_Class610287] of  PointOfInterest

	(distance 0.13)
	(lat 60.198364)
	(lng 24.933863)
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class280094]))

([FlightPro_Class610288] of  TypeName

	(name "public_building"))

([FlightPro_Class610289] of  PointOfInterest

	(distance 0.13)
	(lat 60.199127)
	(lng 24.935078)
	(name "Maanmittauslaitos")
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class610288]))

([FlightPro_Class610290] of  PointOfInterest

	(distance 0.13)
	(lat 60.200207)
	(lng 24.934532)
	(name "Eestin herkut")
	(typeClass [FlightPro_Class280086])
	(typeName [FlightPro_Class280089]))

([FlightPro_Class610291] of  PointOfInterest

	(distance 0.13)
	(lat 60.198936)
	(lng 24.935007)
	(typeClass [FlightPro_Class280098])
	(typeName [FlightPro_Class280099]))

([FlightPro_Class610292] of  PointOfInterest

	(distance 0.14)
	(lat 60.198456)
	(lng 24.934366)
	(name "Danske Bank")
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class330073]))

([FlightPro_Class610293] of  PointOfInterest

	(distance 0.14)
	(lat 60.198524)
	(lng 24.934607)
	(typeClass [FlightPro_Class280098])
	(typeName [FlightPro_Class330040]))

([FlightPro_Class610294] of  PointOfInterest

	(distance 0.14)
	(lat 60.20048)
	(lng 24.934225)
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class280148]))

([FlightPro_Class610295] of  PointOfInterest

	(distance 0.15)
	(lat 60.200436)
	(lng 24.93447)
	(name "Ratakivi")
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class280107]))

([FlightPro_Class610296] of  PointOfInterest

	(distance 0.15)
	(lat 60.198555)
	(lng 24.934864)
	(typeClass [FlightPro_Class280098])
	(typeName [FlightPro_Class330040]))

([FlightPro_Class610297] of  PointOfInterest

	(distance 0.15)
	(lat 60.19995)
	(lng 24.93531)
	(name "Ravintola Vaunu")
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class280107]))

([FlightPro_Class610298] of  PointOfInterest

	(distance 0.15)
	(lat 60.19824)
	(lng 24.934258)
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class610158]))

([FlightPro_Class610299] of  PointOfInterest

	(distance 0.15)
	(lat 60.198265)
	(lng 24.934404)
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class610192]))

([FlightPro_Class610300] of  PointOfInterest

	(distance 0.17)
	(lat 60.198097)
	(lng 24.934296)
	(typeClass [FlightPro_Class280098])
	(typeName [FlightPro_Class330040]))

([FlightPro_Class610301] of  PointOfInterest

	(distance 0.17)
	(lat 60.20089)
	(lng 24.933372)
	(typeClass [FlightPro_Class280098])
	(typeName [FlightPro_Class330040]))

([FlightPro_Class610302] of  PointOfInterest

	(distance 0.17)
	(lat 60.197857)
	(lng 24.93244)
	(typeClass [FlightPro_Class280098])
	(typeName [FlightPro_Class330040]))

([FlightPro_Class610303] of  PointOfInterest

	(distance 0.18)
	(lat 60.198)
	(lng 24.934343)
	(typeClass [FlightPro_Class280098])
	(typeName [FlightPro_Class330040]))

([FlightPro_Class610304] of  PointOfInterest

	(distance 0.18)
	(lat 60.200806)
	(lng 24.934357)
	(name "South China")
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class280107]))

([FlightPro_Class610305] of  PointOfInterest

	(distance 0.18)
	(lat 60.200897)
	(lng 24.934061)
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class280148]))

([FlightPro_Class610306] of  PointOfInterest

	(distance 0.19)
	(lat 60.20096)
	(lng 24.934353)
	(typeClass [FlightPro_Class280098])
	(typeName [FlightPro_Class330040]))

([FlightPro_Class610307] of  TypeName

	(name "utlity_pole"))

([FlightPro_Class610308] of  PointOfInterest

	(distance 0.21)
	(lat 60.201126)
	(lng 24.93423)
	(typeClass [FlightPro_Class280098])
	(typeName [FlightPro_Class610307]))

([FlightPro_Class610309] of  PointOfInterest

	(distance 0.22)
	(lat 60.20133)
	(lng 24.933313)
	(typeClass [FlightPro_Class280098])
	(typeName [FlightPro_Class330040]))

([FlightPro_Class610310] of  PointOfInterest

	(distance 0.22)
	(lat 60.201355)
	(lng 24.933525)
	(typeClass [FlightPro_Class280098])
	(typeName [FlightPro_Class330040]))

([FlightPro_Class610311] of  PointOfInterest

	(distance 0.24)
	(lat 60.201557)
	(lng 24.9331)
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class610158]))

([FlightPro_Class610313] of  CloFunction

	(source "(let [mp (into {} hm)\n       rss (mp \"osm-resourses\")]\n  (doseq [rs rss]\n    (delin rs)))")
	(title "delete-pois [hm inst]"))

([FlightPro_Class610314] of  CloFuncall

	(source "(def inst (.getInstance \"FlightPro_Class610103\"))"))

([FlightPro_Class610315] of  CloFuncall

	(source "(def inst (.getInstance *kb* \"FlightPro_Class610103\"))"))

([FlightPro_Class610316] of  CloFuncall

	(source "(in-ns 'protege.core)"))

([FlightPro_Class610317] of  CloFuncall

	(source "(ext.data/decorate-instance inst)"))

([FlightPro_Class610318] of  PointOfInterest

	(distance 0.04)
	(lat 60.17172)
	(lng 24.94072)
	(name "Nordea")
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class330073]))

([FlightPro_Class610319] of  PointOfInterest

	(distance 0.04)
	(lat 60.171898)
	(lng 24.94055)
	(name "Namaskaar India express")
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class280092]))

([FlightPro_Class610320] of  PointOfInterest

	(distance 0.05)
	(lat 60.17171)
	(lng 24.940542)
	(name "Apteekki Eliel")
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class280123]))

([FlightPro_Class610321] of  PointOfInterest

	(distance 0.05)
	(lat 60.171623)
	(lng 24.940567)
	(name "Amin's cafe")
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class330085]))

([FlightPro_Class610322] of  PointOfInterest

	(distance 0.06)
	(lat 60.171535)
	(lng 24.940567)
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class330066]))

([FlightPro_Class610323] of  PointOfInterest

	(distance 0.06)
	(lat 60.172333)
	(lng 24.94067)
	(typeClass [FlightPro_Class280098])
	(typeName [FlightPro_Class280099]))

([FlightPro_Class610324] of  PointOfInterest

	(distance 0.06)
	(lat 60.17223)
	(lng 24.940363)
	(typeClass [FlightPro_Class280098])
	(typeName [FlightPro_Class280099]))

([FlightPro_Class610325] of  PointOfInterest

	(distance 0.07)
	(lat 60.171318)
	(lng 24.941456)
	(name "Helsinki")
	(typeClass [FlightPro_Class330052])
	(typeName [FlightPro_Class330058]))

([FlightPro_Class610326] of  PointOfInterest

	(distance 0.07)
	(lat 60.171852)
	(lng 24.942478)
	(typeClass [FlightPro_Class280098])
	(typeName [FlightPro_Class280099]))

([FlightPro_Class610327] of  PointOfInterest

	(distance 0.07)
	(lat 60.171432)
	(lng 24.940577)
	(name "Ooster")
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class280105]))

([FlightPro_Class610328] of  PointOfInterest

	(distance 0.07)
	(lat 60.172344)
	(lng 24.940441)
	(name "Alepa")
	(typeClass [FlightPro_Class280086])
	(typeName [FlightPro_Class280089]))

([FlightPro_Class610329] of  PointOfInterest

	(distance 0.07)
	(lat 60.171272)
	(lng 24.940838)
	(typeClass [FlightPro_Class280098])
	(typeName [FlightPro_Class280099]))

([FlightPro_Class610330] of  PointOfInterest

	(distance 0.08)
	(lat 60.171318)
	(lng 24.940584)
	(name "Food& Jones")
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class280092]))

([FlightPro_Class610331] of  PointOfInterest

	(distance 0.08)
	(lat 60.17122)
	(lng 24.94149)
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class280136]))

([FlightPro_Class610332] of  PointOfInterest

	(distance 0.08)
	(lat 60.171207)
	(lng 24.941332)
	(name "Baguette & Co")
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class280092]))

([FlightPro_Class610333] of  PointOfInterest

	(distance 0.08)
	(lat 60.171215)
	(lng 24.94163)
	(name "Stop station")
	(typeClass [FlightPro_Class280086])
	(typeName [FlightPro_Class280109]))

([FlightPro_Class610334] of  PointOfInterest

	(distance 0.08)
	(lat 60.1712)
	(lng 24.941133)
	(name "Hesburger Rautatieasema")
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class280107]))

([FlightPro_Class610335] of  PointOfInterest

	(distance 0.08)
	(lat 60.171577)
	(lng 24.942564)
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class330045]))

([FlightPro_Class610336] of  PointOfInterest

	(distance 0.08)
	(lat 60.171307)
	(lng 24.942183)
	(typeClass [FlightPro_Class280098])
	(typeName [FlightPro_Class280099]))

([FlightPro_Class610337] of  TypeName

	(name "information"))

([FlightPro_Class610338] of  PointOfInterest

	(distance 0.08)
	(lat 60.17137)
	(lng 24.940205)
	(name "Juna-aikataulu")
	(typeClass [FlightPro_Class280139])
	(typeName [FlightPro_Class610337]))

([FlightPro_Class610339] of  PointOfInterest

	(distance 0.08)
	(lat 60.171223)
	(lng 24.942001)
	(name "Aseman wursti")
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class280092]))

([FlightPro_Class610340] of  PointOfInterest

	(distance 0.08)
	(lat 60.17121)
	(lng 24.94063)
	(name "R-Kioski")
	(typeClass [FlightPro_Class280086])
	(typeName [FlightPro_Class280109]))

([FlightPro_Class610341] of  TypeName

	(name "tickets"))

([FlightPro_Class610342] of  PointOfInterest

	(distance 0.09)
	(lat 60.17112)
	(lng 24.941423)
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class610341]))

([FlightPro_Class610343] of  PointOfInterest

	(distance 0.09)
	(lat 60.17112)
	(lng 24.941494)
	(name "R-Kioski")
	(typeClass [FlightPro_Class280086])
	(typeName [FlightPro_Class280109]))

([FlightPro_Class610344] of  PointOfInterest

	(distance 0.09)
	(lat 60.17108)
	(lng 24.941395)
	(name "Minuuttibaari")
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class280105]))

([FlightPro_Class610345] of  PointOfInterest

	(distance 0.09)
	(lat 60.171085)
	(lng 24.940968)
	(name "Robert's Coffee")
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class330085]))

([FlightPro_Class610346] of  PointOfInterest

	(distance 0.09)
	(lat 60.172466)
	(lng 24.94007)
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class330113]))

([FlightPro_Class610347] of  TypeName

	(name "car_rental"))

([FlightPro_Class610348] of  PointOfInterest

	(distance 0.09)
	(lat 60.172363)
	(lng 24.939903)
	(name "Europcar")
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class610347]))

([FlightPro_Class610349] of  PointOfInterest

	(distance 0.09)
	(lat 60.17242)
	(lng 24.939972)
	(typeClass [FlightPro_Class280098])
	(typeName [FlightPro_Class280099]))

([FlightPro_Class610350] of  PointOfInterest

	(distance 0.1)
	(lat 60.17114)
	(lng 24.942293)
	(name "The Pullman Bar")
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class280105]))

([FlightPro_Class610351] of  PointOfInterest

	(distance 0.1)
	(lat 60.172764)
	(lng 24.942059)
	(name "R-Kioski")
	(typeClass [FlightPro_Class280086])
	(typeName [FlightPro_Class280109]))

([FlightPro_Class610352] of  PointOfInterest

	(distance 0.11)
	(lat 60.170963)
	(lng 24.94156)
	(name "Otto.")
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class330066]))

([FlightPro_Class610353] of  PointOfInterest

	(distance 0.11)
	(lat 60.170933)
	(lng 24.941381)
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class280136]))

([FlightPro_Class610354] of  TypeName

	(name "bureau_de_change"))

([FlightPro_Class610355] of  PointOfInterest

	(distance 0.12)
	(lat 60.170906)
	(lng 24.941954)
	(name "Forex")
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class610354]))

([FlightPro_Class610356] of  PointOfInterest

	(distance 0.12)
	(lat 60.170837)
	(lng 24.94151)
	(typeClass [FlightPro_Class330052])
	(typeName [FlightPro_Class330068]))

([FlightPro_Class610357] of  PointOfInterest

	(distance 0.12)
	(lat 60.170795)
	(lng 24.941355)
	(name "R-Kioski")
	(typeClass [FlightPro_Class280086])
	(typeName [FlightPro_Class280109]))

([FlightPro_Class610358] of  PointOfInterest

	(distance 0.12)
	(lat 60.170906)
	(lng 24.942286)
	(name "Burger King")
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class280107]))

([FlightPro_Class610359] of  PointOfInterest

	(distance 0.13)
	(lat 60.170795)
	(lng 24.941843)
	(typeClass [FlightPro_Class280098])
	(typeName [FlightPro_Class280099]))

([FlightPro_Class610360] of  TypeName

	(name "artwork"))

([FlightPro_Class610361] of  PointOfInterest

	(distance 0.13)
	(lat 60.170715)
	(lng 24.941257)
	(typeClass [FlightPro_Class280139])
	(typeName [FlightPro_Class610360]))

([FlightPro_Class610362] of  PointOfInterest

	(distance 0.13)
	(lat 60.17071)
	(lng 24.941217)
	(typeClass [FlightPro_Class280139])
	(typeName [FlightPro_Class610360]))

([FlightPro_Class610363] of  PointOfInterest

	(distance 0.13)
	(lat 60.170727)
	(lng 24.941755)
	(typeClass [FlightPro_Class280139])
	(typeName [FlightPro_Class610360]))

([FlightPro_Class610364] of  PointOfInterest

	(distance 0.13)
	(lat 60.17073)
	(lng 24.941797)
	(typeClass [FlightPro_Class280139])
	(typeName [FlightPro_Class610360]))

([FlightPro_Class610365] of  PointOfInterest

	(distance 0.13)
	(lat 60.170708)
	(lng 24.940872)
	(typeClass [FlightPro_Class330052])
	(typeName [FlightPro_Class330068]))

([FlightPro_Class610366] of  PointOfInterest

	(distance 0.14)
	(lat 60.170727)
	(lng 24.940647)
	(typeClass [FlightPro_Class280098])
	(typeName [FlightPro_Class330048]))

([FlightPro_Class610367] of  PointOfInterest

	(distance 0.14)
	(lat 60.170753)
	(lng 24.942123)
	(typeClass [FlightPro_Class330052])
	(typeName [FlightPro_Class330068]))

([FlightPro_Class610368] of  PointOfInterest

	(distance 0.15)
	(lat 60.170593)
	(lng 24.941746)
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class280094]))

([FlightPro_Class610369] of  PointOfInterest

	(distance 0.15)
	(lat 60.17059)
	(lng 24.940744)
	(name "K-Market Kotikontu")
	(typeClass [FlightPro_Class280086])
	(typeName [FlightPro_Class280089]))

([FlightPro_Class610370] of  PointOfInterest

	(distance 0.15)
	(lat 60.170567)
	(lng 24.940647)
	(typeClass [FlightPro_Class280091])
	(typeName [FlightPro_Class280094]))

([FlightPro_Class610371] of  TypeName

	(name "music"))

([FlightPro_Class610372] of  PointOfInterest

	(distance 0.16)
	(lat 60.1705)
	(lng 24.940987)
	(name "Levykauppa Äx")
	(typeClass [FlightPro_Class280086])
	(typeName [FlightPro_Class610371]))

([FlightPro_Class610373] of  PointOfInterest

	(distance 0.17)
	(lat 60.170357)
	(lng 24.941252)
	(name "Rautatieasema")
	(typeClass [FlightPro_Class330052])
	(typeName [FlightPro_Class330053]))

([FlightPro_Class610374] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(countryCode "RU")
	(feature "railwaystation")
	(lang "en")
	(lat 60.1719)
	(lng 24.9413)
	(rank 98)
	(summary "Helsinki Central railway station is a widely recognised landmark in Kluuvi, part of central Helsinki, Finland, and the focal point of public transport in the Greater Helsinki area. The station is used by approximately 200,000 passengers per day, making it Finland's most-visited building (...)")
	(thumbnailImg "http://www.geonames.org/img/wikipedia/147000/thumb-146731-100.jpg")
	(title "Helsinki Central railway station")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Helsinki_Central_railway_station"))

([FlightPro_Class610375] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(feature "landmark")
	(lang "en")
	(lat 60.1722)
	(lng 24.9437)
	(rank 90)
	(summary "The Finnish National Theatre , founded in 1872 in the city of Pori, is a theatre located in central Helsinki on the northern side of the Helsinki Central Railway Station Square. The Finnish National Theatre is the oldest Finnish speaking professional theatre in Finland (...)")
	(title "Finnish National Theatre")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Finnish_National_Theatre"))

([FlightPro_Class610376] of  WikiArticle

	(button-open-site "Open Site/wiki.gis/open-site")
	(feature "landmark")
	(lang "en")
	(lat 60.1711)
	(lng 24.9439)
	(rank 82)
	(summary "Helsinki Railway Square is an open square immediately to the east of the Helsinki Central railway station in central Helsinki in Finland. The square serves as Helsinki's secondary bus station along with the main Kamppi Center bus station (...)")
	(title "Helsinki Railway Square")
	(wikipediaUrl "http://en.wikipedia.org/wiki/Helsinki_Railway_Square"))

([FlightPro_Class620001] of  CloVar

	(source "(volatile! {})")
	(title "MANUAL-DATA"))

([FlightPro_Class620003] of  CloFunction

	(source "(let [tof (:takeoff gen)\n       cru (:cruise gen)\n       lnd (:landing gen)\n       fcrd [(fapt \"lat\") (fapt \"lon\")]\n       tcrd [(tapt \"lat\") (tapt \"lon\")]\n       falt (if (= cmd/TERRAIN \"yes\") (fapt \"alt\") 0)\n       talt (if (= cmd/TERRAIN \"yes\") (tapt \"alt\") 0)\n       spp (assoc gen :takeoff (merge tof\n		{:altitude (corr-alt (:altitude tof) falt)})\n	        :landing (merge lnd\n		{:altitude (corr-alt (:altitude lnd) talt)\n		 :altitude-graph (corr-alt-tab (:altitude-graph lnd) talt)}))]\n    (merge spp {:general-crs	(int (geo/bear-deg fcrd tcrd))\n	:general-dist	(int (geo/distance-nm fcrd tcrd))\n	:start-crd 	fcrd\n	:finish-crd 	tcrd\n	:start-alt 	falt\n	:finish-alt 	talt\n	:start-run 	(runway (fapt \"iata\"))\n	:finish-run 	(runway (tapt \"iata\"))}))")
	(title "specific-plan [gen fapt tapt]"))

([FlightPro_Class620004] of  CloFunction

	(source ";; return [cruise-altitude cruise-speed altitude-distance altitude-speed]\n(loop [alt cru-alt spd cru-spd ad 0 sd 0]\n  (if (and (> (first alt) min-alt) (> (first spd) min-spd))\n    (let [[stim sdis] (mfs/speed-variation spd spd-lnd (:step prop) (:time-out prop))\n           atim (mfs/altitude-variation alt alt-lnd (:step elev) (:time-out elev))\n           adis (if (<= atim stim)\n                    sdis\n                    (+ sdis (* (- atim stim) (first spd))))]\n      (if (< (* 2 adis) gen-dist)\n        [adis sdis alt spd]\n        (let [[a aa] alt\n               [s sa] spd]\n          (recur [(round (int (* 0.8 a)) 1000) aa] [(round (int (* 0.8 s)) 10) sa] adis sdis))))\n    [ad sd alt spd]))")
	(title "adjust-cruise [gen-dist cru-alt cru-spd alt-lnd spd-lnd elev prop min-alt min-spd]"))

([FlightPro_Class620010] of  CloFunction

	(source "(let [md (mod x p)\n       r (- x md)]\n  (if (< md (/ p 2))\n    r\n    (+ r p)))")
	(title "round [x p]"))

([FlightPro_Class630000] of  CloVar

	(source "0")
	(title "APT-ALT"))

([FlightPro_Class640000] of  %3AINSTANCE-ANNOTATION

	(%3AANNOTATED-INSTANCE [FlightPro_Class650001])
	(%3AANNOTATION-TEXT "Initial Airport")
	(%3ACREATION-TIMESTAMP "2017.02.23 13:01:19.048 MSK")
	(%3ACREATOR "ru"))

([FlightPro_Class640001] of  CloFunction

	(source "(if-let [api (fainst (cls-instances \"Airport\") \"Initial Airport\")]\n  (move-to {:country (sv api \"country\")\n	:airport (sv api \"title\")})\n  (println \"Annotated Initial Airport not found!\"))")
	(title "go-initial-airport []"))

([FlightPro_Class640008] of  CloFunction

	(source ";; find or create airport instance\n(invoke-later\n(let [iata (apt \"iata\")]\n  (if (not (fifos \"Airport\" \"iata\" iata))\n    (let [ins (crin \"Airport\")]\n      (ssv ins \"title\" (apt \"name\"))\n      (ssv ins \"iata\" iata)\n      (ssv ins \"icao\" (apt \"icao\"))\n      (ssv ins \"country\" (apt \"country\"))\n      (ssv ins \"altitude\" (apt \"alt\"))\n      (ssvs ins \"coord\" [(float (apt \"lat\"))\n	          (float (apt \"lon\"))]))))\n)")
	(title "foc-apt-ins [apt]"))

([FlightPro_Class650000] of  NearbySearch

	(button-clear-articles "Clear Articles/wiki.gis/clear-articles")
	(button-nearby "submit/wiki.gis/submit-nearby")
	(language English-en)
	(lat 60.3)
	(lng 25.0)
	(max-responses 5)
	(radius-km 10))

([FlightPro_Class650001] of  Airport

	(altitude 179)
	(coord 60.31722 24.96333)
	(country "Finland")
	(iata "HEL")
	(icao "EFHK")
	(runways 47 153)
	(title "Helsinki Vantaa Airport"))

([FlightPro_Class650002] of  Airport

	(altitude 14)
	(coord 40.63975 -73.7789)
	(country "United States")
	(iata "JFK")
	(icao "KJFK")
	(runways 121 31)
	(title "New York John F. Kennedy International Airport"))

([FlightPro_Class650003] of  Airport

	(altitude 21)
	(coord 40.77725 -73.8726)
	(country "United States")
	(iata "LGA")
	(icao "KLGA")
	(runways 32 122)
	(title "New York LaGuardia Airport"))

([FlightPro_Class650004] of  Airport

	(altitude 18)
	(coord 40.6925 -74.1686)
	(country "United States")
	(iata "EWR")
	(icao "KEWR")
	(runways 26 95)
	(title "New York Newark Liberty International Airport"))

([FlightPro_Class650005] of  Airport

	(altitude 36)
	(coord 39.87194 -75.2411)
	(country "United States")
	(iata "PHL")
	(icao "KPHL")
	(runways 75 159)
	(title "Philadelphia International Airport"))

([FlightPro_Class650006] of  Airport

	(altitude 8)
	(coord 25.79325 -80.2905)
	(country "United States")
	(iata "MIA")
	(icao "KMIA")
	(runways 87 119)
	(title "Miami International Airport"))

([FlightPro_Class650007] of  Airport

	(altitude 83)
	(coord 51.4775 -0.46138)
	(country "United Kingdom")
	(iata "LHR")
	(icao "EGLL")
	(runways 90)
	(title "London Heathrow Airport"))

([FlightPro_Class650008] of  Airport

	(altitude 364)
	(coord 50.02642 8.543125)
	(country "Germany")
	(iata "FRA")
	(icao "EDDF")
	(runways 70 179)
	(title "Frankfurt Airport"))

([FlightPro_Class650009] of  Airport

	(altitude 78)
	(coord 59.80029 30.2625)
	(country "Russia")
	(iata "LED")
	(icao "ULLI")
	(runways 106)
	(title "St. Petersburg Pulkovo Airport"))

([FlightPro_Class650010] of  Airport

	(altitude 622)
	(coord 55.97264 37.41458)
	(country "Russia")
	(iata "SVO")
	(icao "UUEE")
	(runways 75)
	(title "Moscow Sheremetyevo International Airport"))

([FlightPro_Class650011] of  Airport

	(altitude 118)
	(coord 45.03468 39.17053)
	(country "Russia")
	(iata "KRR")
	(icao "URKK")
	(runways 52)
	(title "Krasnodar International Airport"))

([FlightPro_Class650012] of  Airport

	(altitude 89)
	(coord 43.44992 39.95658)
	(country "Russia")
	(iata "AER")
	(icao "URSS")
	(runways 28 65)
	(title "Sochi International Airport"))

([FlightPro_Class650013] of  Airport

	(altitude 1225)
	(coord -17.6447 -63.1353)
	(country "Bolivia")
	(iata "VVI")
	(icao "SLVR")
	(runways 147)
	(title "Santa Cruz Viru Viru International Airport"))

([FlightPro_Class650014] of  Airport

	(altitude 1371)
	(coord -17.8115 -63.1714)
	(country "Bolivia")
	(iata "SRZ")
	(icao "SLET")
	(runways 144)
	(title "Santa Cruz El Trompillo Airport"))

([FlightPro_Class650015] of  Airport

	(altitude 8360)
	(coord -17.421 -66.1771)
	(country "Bolivia")
	(iata "CBB")
	(icao "SLCB")
	(runways 38 132)
	(title "Cochabamba Jorge Wilstermann International Airport"))

([FlightPro_Class650016] of  Airport

	(altitude 13325)
	(coord -16.5133 -68.1922)
	(country "Bolivia")
	(iata "LPB")
	(icao "SLLP")
	(runways 92)
	(title "La Paz El Alto International Airport"))

([FlightPro_Class650017] of  Airport

	(altitude 151)
	(coord 61.88516 34.15474)
	(country "Russia")
	(iata "PES")
	(icao "ULPB")
	(runways 23 51)
	(title "Petrozavodsk Airport"))

([FlightPro_Class660000] of  CloFunction

	(source "(let [[n s w e] (:visible @COMM)\n       [lat lon] (our-center n s w e)\n       [n0 s0 w0 e0] (:wiki-bbx @COMM)]\n  (if (or (> s0 lat)\n           (< n0 lat)\n           (< e0 lon)\n           (> w0 lon))\n     (invoke-later\n       (let [bbi (foc \"BBX\" \"title\" \"Current\")\n              rqi (fainst (cls-instances \"BBXWiki\") \"Current BBXWiki Request\")]\n         (if (and bbi rqi)\n           (do\n             (ssvs bbi \"wsen\" (vec (map float [w s e n])))\n             (ssv rqi \"bbx\" bbi)\n             (ssvs rqi \"responses\" [])\n             (with-timeout (:ext-data TIO)\n	(wig/submit-bbx (itm rqi 0) rqi))\n             (let [rr (svs rqi \"responses\")\n                    chn (:ins-chn @COMM)]\n               (when (seq rr)\n	(asp/pump-in chn {:instruct :clear-placemarks})\n	(doseq [r rr]\n	  (point-out-place {:instance r})\n	  (asp/pump-in chn (placemark-instruct {:instance r})))\n	(vswap! COMM assoc :wiki-bbx [n s w e]))))\n           (println \"Instance of \\\"Current BBXWiki Request\\\" not found!\"))))))")
	(title "pump-wiki []"))

([FlightPro_Class660006] of  BBXWiki

	(bbx [FlightPro_Class670008])
	(button-bbx "submit/wiki.gis/submit-bbx")
	(button-clear-articles "Clear Articles/wiki.gis/clear-articles")
	(language English-en)
	(max-responses 40)
	(responses
		[FlightPro_Class610374]
		[FlightPro_Class610375]
		[FlightPro_Class610376]))

([FlightPro_Class660024] of  CloFunction

	(source "(println [:CMD-WIKIPEDIA params])\n(if (:wiki @exd/COMM)\n  (do (vswap! exd/COMM assoc :wiki false)\n    (asp/pump-in (:instructions CHN)\n	 {:instruct :clear-placemarks}))\n  (let [[n s w e] (map str (:visible @exd/COMM))]\n    (vswap! exd/COMM assoc :wiki-bbx [0 0 0 0]) \n    (vswap! exd/COMM assoc :wiki true)\n    (visible {:n n :s s :w w :e e})))\n(println \"Wikipedia: \" (:wiki @exd/COMM)) \n\"\"")
	(title "wikipedia [params]"))

([FlightPro_Class660025] of  CloVar

	(source "(defonce COMM\n  (volatile! \n    {:visible [0 0 0 0]\n     :wiki-bbx [0 0 0 0]\n     :wiki false\n     :ins-chn 7}))")
	(title "defCOMM"))

([FlightPro_Class670000] of  CloProgram

	(cloFunctions
		[FlightPro_Class670006]
		[FlightPro_Class670265]
		[FlightPro_Class670266]
		[FlightPro_Class740002]
		[FlightPro_Class740003]
		[FlightPro_Class700000]
		[FlightPro_Class280198]
		[FlightPro_Class280040]
		[FlightPro_Class750004]
		[FlightPro_Class750005]
		[FlightPro_Class660000]
		[FlightPro_Class730003]
		[FlightPro_Class780021]
		[FlightPro_Class810000]
		[FlightPro_Class280164]
		[FlightPro_Class280182]
		[FlightPro_Class610313])
	(cloNamespace [FlightPro_Class670001])
	(cloVars
		[FlightPro_Class330004]
		[FlightPro_Class750000]
		[FlightPro_Class810006]
		[FlightPro_Class280041]
		[FlightPro_Class660025])
	(title "External Data"))

([FlightPro_Class670001] of  CloNamespace

	(source "(:use protege.core)\n(:require \n  [wiki.gis :as wig]\n  [cesium.core :as cz]\n  [calc.geo :as geo]\n  [async.proc :as asp]\n  [geo.names :as gn]\n  [fr24.client :as fr24]\n  [osm.data :as osm])\n(:import\n  edu.stanford.smi.protege.model.Instance)")
	(title "ext.data"))

([FlightPro_Class670004] of  %3AINSTANCE-ANNOTATION

	(%3AANNOTATED-INSTANCE [FlightPro_Class660006])
	(%3AANNOTATION-TEXT "Current BBXWiki Request")
	(%3ACREATION-TIMESTAMP "2017.02.17 14:12:37.199 MSK")
	(%3ACREATOR "ru"))

([FlightPro_Class670006] of  CloMacro

	(source "`(let [f# (future (do ~@body))\n         v# (gensym)\n         result# (deref f# ~msec v#)]\n    (if (= v# result#)\n      (do\n        (println :FUTURE-CANCELLING)\n        (future-cancel f#)\n        (println :FUTURE-CANCELLED)\n        nil)\n      result#))")
	(title "with-timeout [msec & body]"))

([FlightPro_Class670008] of  BBX

	(title "Current")
	(wsen 24.937908 60.17062 24.944689 60.17318))

([FlightPro_Class670265] of  CloFunction

	(source "(let [{:keys [instance airport feature]} parmap]\n  {:instruct :create-placemark\n    :iname (or (some-> instance .getName) (some-> airport (get \"iata\")))\n    :tip (or (some-> instance (sv \"title\")) (some-> airport (get \"name\")))\n    :lat (or (some-> instance (sv \"lat\")) (some-> airport (get \"lat\")))\n    :lon (or (some-> instance (sv \"lng\")) (some-> airport (get \"lon\")))\n    :feature (or (some-> instance (sv \"feature\")) (some-> feature))})")
	(title "placemark-instruct [parmap]"))

([FlightPro_Class670266] of  CloFunction

	(source "(let [head (str \"<h3>\" (sv dati \"title\") \"</h3>\")\n       itag (str \"<img src=\\\"\" (sv dati \"thumbnailImg\") \"\\\">\")\n       summ (sv dati \"summary\")\n       addr (sv dati \"wikipediaUrl\")\n       wiki (str \"<a href=\\\"\" addr \"\\\">\" addr \"</a>\")\n       html (str head itag \"<br>\" summ \"<br>\" wiki)]\n  {:instruct :popup\n    :lat (sv dati \"lat\")\n    :lon (sv dati \"lng\")\n    :html html\n    :time (:ext-data-popup TIO)})")
	(title "placemark-popup-instruct [dati]"))

([FlightPro_Class670311] of  CloFunction

	(source "(let [pos (js/L.LatLng. lat lon)\n       ico (js/L.icon #js{:iconUrl (or (URL-ICO feature) \n		     (URL-ICO \"default\"))\n	           :iconSize #js[24, 24]})\n       opt #js{:icon ico\n                    :draggable false\n                    :title tip}\n       mrk (-> js/L (.marker pos opt))]\n    (.on mrk \"click\"\n         (fn [e]\n           (info (str \"pm\" iname))))\n    (.addTo mrk @CHART)\n    (vswap! PLACEMARKS assoc iname mrk))")
	(title "create-placemark [iname tip lat lon feature]"))

([FlightPro_Class670312] of  CloVar

	(source "(volatile! {})")
	(title "PLACEMARKS"))

([FlightPro_Class670313] of  CloFunction

	(source "(doseq [mrk (vals @PLACEMARKS)]\n  (.removeLayer @CHART mrk))\n(vreset! PLACEMARKS {})")
	(title "clear-placemarks []"))

([FlightPro_Class680000] of  Airport

	(altitude 52)
	(coord 27.17831 33.79943)
	(country "Egypt")
	(iata "HRG")
	(icao "HEGN")
	(runways 0)
	(title "Hurghada International Airport"))

([FlightPro_Class690000] of  Rule

	(lhs "?q (Question predicate \"intersect\")\n(Flight id ?id1\n           callsign ?cs1\n           coord ?crd1\n           course ?crs1\n           speed ?spd1\n           altitude ?a1\n           age \"CURRENT\")\n(Flight id ?id2\n           callsign ?cs2\n           coord ?crd2\n           course ?crs2\n           speed ?spd2\n           altitude ?a2\n           age \"CURRENT\"\n           ((<= (.compareTo ?id1 ?id2) 0)\n            (and (> ?spd1 0) (> ?spd2 0))\n            [(and (> ?a1 0) (> ?a2 0) (< (Math/abs (- ?a1 ?a2)) 10000))\n             (and (== ?a1 0) (== ?a2 0))]\n            (< (calc.geo/distance-nm ?crd1 ?crd2)\n               (es/max-distance ?spd1 ?spd2))))")
	(rhs "(when-let [[dmin tmin] (es/intersect? ?crd1 ?crs1 ?spd1 ?crd2 ?crs2 ?spd2 ?id1 ?id2)]\n  (println [:Dmin dmin :Tmin tmin :Who ?cs1 ?cs2])\n  (es/pom-and-link ?id1 ?crd1 ?crs1 ?spd1 ?cs1 ?id2 ?crd2 ?crs2 ?spd2 ?cs2 dmin tmin))")
	(salience 0)
	(title "qq:Check2FlightsIntersection"))

([FlightPro_Class690004] of  CloFunction

	(source "(when-let [crd3 (geo/future-intersect crd1 crs1 spd1 crd2 crs2 spd2 INTS-TIME)]\n  (let [d1 (geo/distance-nm crd1 crd3)\n         tmin (/ d1 spd1)\n         crd4 (geo/future-pos crd2 crs2 spd2 tmin)\n         dmin (geo/distance-nm crd3 crd4)]\n     (if (< dmin INTS-DMIN)\n       [dmin tmin])))")
	(title "intersect? [crd1 crs1 spd1 crd2 crs2 spd2 id1 id2]"))

([FlightPro_Class690005] of  CloVar

	(source ";; forcast time for intersection in hours (6 min)\n0.1")
	(title "INTS-TIME"))

([FlightPro_Class690006] of  CloVar

	(source ";; distance of intersection in nautical miles (~400 m)\n0.215")
	(title "INTS-DMIN"))

([FlightPro_Class690007] of  Rule

	(lhs "?q (Question)")
	(rhs "(retract ?q)")
	(salience -1)
	(title "qq:RetractQuestion"))

([FlightPro_Class690008] of  CloFunction

	(source "(condp = q\n  \"questions\" nil\n  (am/ask-server {:whom \"es\" :predicate q}))\n(ctl/show-chart-controls)")
	(title "question [q]"))

([FlightPro_Class690009] of  CloFunction

	(source "(* (+ spd1 spd2) INTS-TIME)")
	(title "max-distance [spd1 spd2]"))

([FlightPro_Class690010] of  CloFunction

	(source "(put-on-map id1 crd1 crs1 spd1 \"INTERSECT\")\n(put-on-map id2 crd2 crs2 spd2 \"INTERSECT\")\n(asp/pump-in (:instructions  cmd/CHN)\n	{:instruct :add-link\n                         :ids [id1 id2]\n                         :options {:weight 4\n	                :title (str cs1 \" - \" cs2)\n	                :color \"red\"\n	                :dmin dmin	\n	                :tmin tmin}})")
	(title "pom-and-link [id1 crd1 crs1 spd1 cs1 id2 crd2 crs2 spd2 cs2 dmin tmin]"))

([FlightPro_Class690012] of  CloVar

	(source "(volatile! {})")
	(title "LINKS"))

([FlightPro_Class690013] of  CloFunction

	(source "(let [ops (clj->js options)\n       tmin (:tmin options)\n       del (if (number? tmin)\n               (int (* 60000 tmin))\n               30000)\n       llg (collect-llga ids)\n       lnk (js/L.polyline llg ops)]\n  (.addLayer @CHART lnk)\n  (.bindPopup lnk (linkPopup ids options))\n  (vswap! LINKS assoc ids lnk)\n  (if (> del 0)\n    (asp/delayer #(do (.removeLayer @CHART lnk)\n	     (vswap! LINKS dissoc ids)) del)))")
	(title "add-link [ids options]"))

([FlightPro_Class690014] of  CloFunction

	(source "(let [vhs (filter some? (map #(@VEHICLES %) ids))\n       mks (map #(:marker @%) vhs)\n       llgs (map #(.getLatLng %) mks)]\n  (clj->js llgs))")
	(title "collect-llga [ids]"))

([FlightPro_Class690015] of  CloFunction

	(source "(let [vhs @VEHICLES\n       alt1 (:altitude @(vhs id1))\n       alt2 (:altitude @(vhs id2))\n       adif (- alt1 alt2)\n       titl (:title ops)\n       dmin (:dmin ops )\n       tmin (:tmin ops)]\n  (str \"<h3>\" titl \"</h3>\"\n       \"<table>\"\n       \"<tr><td>Dmin</td><td>\" (if (number? dmin) (int (* 1852 dmin))) \" m</td></tr>\"\n       \"<tr><td>Tmin</td><td>\" (if (number? tmin) (int (* 60 tmin))) \" min</td></tr>\"\n       \"<tr><td>Alt-diff</td><td>\" adif \" ft</td></tr>\"\n       \"</table>\"))")
	(title "linkPopup [[id1 id2] ops]"))

([FlightPro_Class690080] of  CloFuncall
)

([FlightPro_Class7] of  CloVar

	(source "(js/EventSource. (str BSE-URL \"czml/\"))")
	(title "EVT-SRC"))

([FlightPro_Class70000] of  CloVar

	(source "\"http://localhost:\"")
	(title "HOST"))

([FlightPro_Class700000] of  CloFunction

	(source "(let [[n s w e] (:visible @COMM)\n       {:keys [instance airport]} parmap\n       lat (or (some-> instance (sv \"lat\")) (some-> airport (get \"lat\")))\n       lon (or (some-> instance (sv \"lng\")) (some-> airport (get \"lon\")))\n       nam (or (some-> instance (sv \"title\")) (some-> airport (get \"name\")))\n       iata (some-> airport (get \"iata\"))\n       txt (if airport (str nam \" (\" iata \")\") nam)\n       dis (geo/distance-nm (our-center n s w e) [lat lon])]\n  (cz/point-out txt [lat lon] dis (our-radius n s w e)))")
	(title "point-out-place [parmap]"))

([FlightPro_Class70001] of  CloFunction

	(source "(enable-console-print!)\n(GET (str (:command URL) \"terrain\")\n	{:handler (fn [response]\n		(czm/init-3D-view (:base URL) response))\n	 :error-handler error-handler})\n(GET (str (:command URL) \"new-czml-doc\")\n	{:handler (fn [response])\n	 :error-handler error-handler})\n(asp/repeater mov/move CARRIER (:carrier TIO))\n(asp/repeater ctl/show-flight-data CARRIER (:display TIO))\n(asp/repeater receive-directives (:directives TIO))\n(asp/repeater send-manual-data (:manual-data TIO))\n(ctl/show-controls)")
	(title "on-load []"))

([FlightPro_Class70002] of  CloProgram

	(cloFunctions
		[FlightPro_Class70007]
		[FlightPro_Class70004]
		[FlightPro_Class70005]
		[FlightPro_Class70006]
		[FlightPro_Class70010]
		[FlightPro_Class20010]
		[FlightPro_Class90000]
		[FlightPro_Class70011]
		[FlightPro_Class160018]
		[FlightPro_Class310003])
	(cloNamespace [FlightPro_Class70003])
	(title "Async Processing"))

([FlightPro_Class70003] of  CloNamespace

	(source "(:require \n  [clojure.core.async :refer [chan alts!! put! <! <!! go timeout close!]])")
	(title "async.proc"))

([FlightPro_Class70004] of  CloFunction

	(source "(when (not= @status \"RUN\") \n  (vreset! status \"RUN\")\n  (go (do \n          (while (and (= @status \"RUN\")\n                            (proc-fn))\n                (<! (timeout time-out)))\n          (vreset! status \"STOP\")))\n  @status)")
	(title "start-process [status proc-fn time-out]"))

([FlightPro_Class70005] of  CloFunction

	(source "(vreset! status \"FINISH\")")
	(title "stop-process [status]"))

([FlightPro_Class70006] of  CloFunction

	(source "(= @status \"RUN\")")
	(title "running? [status]"))

([FlightPro_Class70007] of  CloFunction

	(source "([func time-out]\n  (go (while true\n           (func)\n           (<! (timeout time-out)))))\n([func param time-out]\n  (go (while true\n           (func param)\n           (<! (timeout time-out)))))")
	(title "repeater"))

([FlightPro_Class70008] of  ClsRequired

	(cloFunctions
		[FlightPro_Class70007]
		[FlightPro_Class70004]
		[FlightPro_Class70005]
		[FlightPro_Class70006]
		[FlightPro_Class160018]
		[FlightPro_Class310003])
	(cloNamespace [FlightPro_Class70009])
	(title "CS Async Processing"))

([FlightPro_Class70009] of  CloNamespace

	(source "(:require \n  [cljs.core.async :refer [<! timeout close!]])\n(:require-macros \n  [cljs.core.async.macros :refer [go]])")
	(title "csasync.proc"))

([FlightPro_Class70010] of  CloFunction

	(source "(put! chn val)")
	(title "pump-in [chn val]"))

([FlightPro_Class70011] of  CloFunction

	(source "(chan)")
	(title "mk-chan []"))

([FlightPro_Class710000] of  Airport

	(altitude 57)
	(coord 60.25388 25.04416)
	(country "Finland")
	(iata "HEM")
	(icao "EFHF")
	(runways 0)
	(title "Helsinki Malmi Airport"))

([FlightPro_Class710001] of  Airport

	(altitude 219)
	(coord 58.30746 26.69042)
	(country "Estonia")
	(iata "TAY")
	(icao "EETU")
	(runways 0)
	(title "Tartu Airport"))

([FlightPro_Class720000] of  Airport

	(altitude 18)
	(coord 58.99075 22.83073)
	(country "Estonia")
	(iata "KDL")
	(icao "EEKA")
	(runways 0)
	(title "Kardla Airport"))

([FlightPro_Class730000] of  CloFunction

	(source "(set-html! \"camera\" \"<h4>Camera</h4>\")\n(set-html! \"onboard\" \"Onboard:\")\n(set-html! \"onboard-fld\" \n  \"<select onchange='javascript:view3d.client.onboard(this.value)' style='width:96px'>\n   <option value='callsign'>callsign</option>\n   <option value='manual'>manual</option>\n   <option value='select'>select</option>\")\n(set-html! \"view\" \"View:\")\n(set-html! \"view-fld\" \n  \"<select onchange='javascript:view3d.client.view(this.value)' style='width:96px'>\n   <option value='FORWARD'>FORWARD</option>\n   <option value='BACKWARD'>BACKWARD</option>\n   <option value='RIGHT'>RIGHT</option>\n   <option value='LEFT'>LEFT</option>\n   <option value='UP'>UP</option>\n   <option value='DOWN'>DOWN</option>\n   <option value='FORWARD-RIGHT'>FORWARD-RIGHT</option>\n   <option value='FORWARD-LEFT'>FORWARD-LEFT</option>\n   <option value='BACKWARD-RIGHT'>BACKWARD-RIGHT</option>\n   <option value='BACKWARD-LEFT'>BACKWARD-LEFT</option>\n   </select>\")\n(set-html! \"pitch\" \"Pitch:\")\n(set-html! \"pitch-fld\" \n  \"<input value='-20' style='width:90px'\n               onchange='javascript:view3d.client.pitch(this.value)'>\")\n(set-html! \"roll\" \"Roll:\")\n(set-html! \"roll-fld\" \n  \"<input value='0' style='width:90px'\n               onchange='javascript:view3d.client.roll(this.value)'>\")")
	(title "left-controls []"))

([FlightPro_Class730001] of  CloFunction

	(source "(left-controls)\n(right-controls)")
	(title "show-controls []"))

([FlightPro_Class730002] of  Rule

	(lhs "?q (Question predicate \"weather-gn\")")
	(rhs "(ext.data/pump-weather ext.data/gn-weather-html)")
	(salience 0)
	(title "qq:WeatherGeoNames"))

([FlightPro_Class730003] of  CloFunction

	(source "(let [[n s w e] (:visible @COMM)\n        [lat lon] (our-center n s w e)\n        html (or (fun lat lon n s w e)\n	\"Weather information unavailable!\")]\n    (asp/pump-in (:ins-chn @COMM) \n	{:instruct :popup\n	 :lat lat\n	 :lon lon\n	 :html html\n	 :time (:ext-data-popup TIO)}))")
	(title "pump-weather [fun]"))

([FlightPro_Class730004] of  CloFunction

	(source "(letfn [(smround [n]\n	(/ (float (Math/round (* n 10))) 10))]\n  (let [dlat (- lat1 lat2)\n          dlon (- lon1 lon2)\n          lad (* (if (>= dlat 0) dlat (- 0 dlat)) 60)\n          lod (* (if (>= dlon 0) dlon (- 0 dlon)) 60)\n          dia (Math/sqrt (+ (* lad lad) (* lod lod)))]\n     (if (< dia 1) (smround dia) (Math/round dia))))")
	(title "rough-distance [[lat1 lon1] [lat2 lon2]]"))

([FlightPro_Class740000] of  Airport

	(altitude 1225)
	(coord 40.91608 -81.4421)
	(country "United States")
	(iata "CAK")
	(icao "KCAK")
	(runways 0)
	(title "Akron Canton Airport"))

([FlightPro_Class740002] of  CloFunction

	(source "([]\n  (apply our-center (:visible @COMM)))\n([n s w e]\n  [(/ (+ n s) 2) (/ (+ w e) 2)])")
	(title "our-center"))

([FlightPro_Class740003] of  CloFunction

	(source "(/ (* (- n s) 60) 2)")
	(title "our-radius [n s w e]"))

([FlightPro_Class740004] of  Airport

	(altitude 67)
	(coord -34.8222 -58.5358)
	(country "Argentina")
	(iata "EZE")
	(icao "SAEZ")
	(runways 0)
	(title "Buenos Aires Ministro Pistarini International Airport"))

([FlightPro_Class740005] of  Airport

	(altitude 3479)
	(coord -15.8711 -47.9186)
	(country "Brazil")
	(iata "BSB")
	(icao "SBBR")
	(runways 0)
	(title "Brasilia International Airport"))

([FlightPro_Class750000] of  CloVar

	(source "\"http://www.myweather2.com/developer/forecast.ashx?uac=Pyih5WakI3&output=json&query=\"")
	(title "WEATHER2-API"))

([FlightPro_Class750004] of  CloFunction

	(source "(let [rsp (gn/call-geonames-weather lat lon)]\n  (if (and rsp (not (empty? rsp)))\n    (let [lat2 	(read-string (rsp \"lat\"))\n            lon2 	(read-string (rsp \"lng\"))\n            [lat3 lon3 loc] (if (and (> n lat2 s) (< w lon2 e))\n		[lat2 lon2 (format \"%.4f %.4f\" lat2 lon2)]\n		[lat lon\n		 (str (geo/rough-distance [lat lon] [lat2 lon2])\n		       \" miles to \" \n		       (gn/direction (gn/bearing lat lon lat2 lon2))\n		       \" from here\")])\n            name 	(rsp \"stationName\")\n            wcd 	(rsp \"weatherCondition\")\n            hym 	(rsp \"hymidity\")\n            tmp 	(rsp \"temperature\")\n            wind 	(rsp \"windDirection\")\n            bwnd 	(if (some? wind)\n	  (let [b (+ (read-string wind) 180)] (if (> b 360) (- b 360) b)))\n            win 	(if (some? bwnd)\n	  (gn/direction bwnd)\n	  \"n/a\")\n            wins 	(rsp \"windSpeed\")\n            tim 	(rsp \"observationTime\")\n            mess	(str name \" Weather Station<br>\"\n	  \"location: \" loc \"<br>\"\n	  \"observation time: \" tim \"<br>\"\n	  \"weather conditions: \" wcd \"<br>\"\n	  \"temperature: \" tmp \" Celsius<br>\"\n	  \"hymidity: \" hym \"<br>\"\n	  \"wind: \" win \", \" wins \" Knots\")]\n         (str \"<h3>Weather by GeoNames</h3>\" mess))))\nnil")
	(title "gn-weather-html [lat lon n s w e]"))

([FlightPro_Class750005] of  CloFunction

	(source "(letfn [(wind [w]\n	(let [e (first (w \"wind\"))]\n	  (str \"Wind: \" (e \"dir\") \", \" (e \"speed\") \" \" (e \"wind_unit\") \"<br>\")))\n           (weather [w]\n	(str \"Weather: \" (w \"weather_text\") \"<br>\" (wind w)))\n           (day [w] (str \"Date: \" (w \"date\") \"<br>\" \n	         (weather (first (w \"day\")))\n	         \"Day max temp: \" (w \"day_max_temp\") \" \" (w \"temp_unit\") \"<br>\"\n	         \"Night min temp: \" (w \"night_min_temp\") \" \" (w \"temp_unit\") \"<br>\"))]\n  (let [w2 (fr24/json-web-data (str ext.data/WEATHER2-API lat \",\" lon))]\n    (if (and w2 (not (empty? w2)))\n      (let [w (first ((w2 \"weather\") \"curren_weather\"))\n              f ((w2 \"weather\") \"forecast\")\n              d1 (first f)\n              d2 (second f)]\n         (str \"<h3>Weather by WEATHER2</h3>\"\n                \"<a href='http://www.myweather2.com'>www.myweather2.com</a><br><br>\"\n                \"<h4>Current weather</h4>\"\n                \"Temperature: \" (w \"temp\") \" \" (w \"temp_unit\") \"<br>\"\n                \"Pressure: \" (w \"pressure\") \"<br>\"\n                \"Humidity: \" (w \"humidity\") \"<br>\"\n                (weather w) \"<br>\"\n                \"<h4>Forcast</h4>\"\n                (day d1) \"<br>\"\n                (day d2))))))")
	(title "w2-weather-html [lat lon n s w e]"))

([FlightPro_Class750006] of  CloDocumentation

	(source "<html>\n  <head>\n    <style type=\"text/css\">\n      <!--\n        body { font-family: arial; font-size: 12pt }\n        p { font-family: arial; margin-top: 2; margin-right: 2; margin-bottom: 2; margin-left: 2 }\n      -->\n    </style>\n    \n  </head>\n  <body>\n          { &quot;weather&quot;: <br>        { &quot;curren_weather&quot;: <br>          [ {&quot;humidity&quot;: &quot;73&quot;, <br>              &quot;pressure&quot;: &quot;998&quot;, <br>              &quot;temp&quot;: &quot;-6&quot;, &quot;temp_unit&quot;: &quot;c&quot;, <br>              &quot;weather_code&quot;: &quot;1&quot;, <br>              &quot;weather_text&quot;: &quot;Partly cloudy&quot;,  <br>              &quot;wind&quot;: [ {&quot;dir&quot;: &quot;W&quot;, <br>                             &quot;speed&quot;: &quot;5&quot;, <br>                             &quot;wind_unit&quot;: &quot;kph&quot; } ] } ],  <br>        &quot;forecast&quot;: [ {&quot;date&quot;: &quot;2017-02-25&quot;,  <br>                              &quot;day&quot;: [ {&quot;weather_code&quot;: &quot;3&quot;, <br>                                            &quot;weather_text&quot;: &quot;Overcast skies&quot;,  <br>                                            &quot;wind&quot;: [ {&quot;dir&quot;: &quot;NW&quot;, <br>                                                           &quot;dir_degree&quot;:   &quot;314&quot;, <br>                                                           &quot;speed&quot;: &quot;22&quot;, <br>                                                           &quot;wind_unit&quot;: &quot;kph&quot;   } ] } ], <br>                             &quot;day_max_temp&quot;: &quot;-3&quot;,  <br>                             &quot;night&quot;: [ {&quot;weather_code&quot;: &quot;0&quot;, <br>                                             &quot;weather_text&quot;: &quot;Clear skies&quot;,  <br>                                             &quot;wind&quot;: [ {&quot;dir&quot;: &quot;W&quot;, <br>                                                             &quot;dir_degree&quot;:   &quot;274&quot;, <br>                                                             &quot;speed&quot;: &quot;22&quot;, <br>                                                             &quot;wind_unit&quot;:   &quot;kph&quot; } ] } ], <br>                             &quot;night_min_temp&quot;: &quot;-7&quot;, <br>                             &quot;temp_unit&quot;: &quot;c&quot; }, <br>                           {&quot;date&quot;: &quot;2017-02-26&quot;,  <br>                             &quot;day&quot;: [ {&quot;weather_code&quot;: &quot;73&quot;, <br>                                           &quot;weather_text&quot;: &quot;Moderate snow&quot;,  <br>                                           &quot;wind&quot;: [ {&quot;dir&quot;: &quot;ESE&quot;, <br>                                           &quot;dir_degree&quot;: &quot;117&quot;, <br>                                           &quot;speed&quot;: &quot;22&quot;, <br>                                           &quot;wind_unit&quot;: &quot;kph&quot; } ] } ], <br>                             &quot;day_max_temp&quot;: &quot;-1&quot;,  <br>                             &quot;night&quot;: [ {&quot;weather_code&quot;: &quot;10&quot;, <br>                                              &quot;weather_text&quot;: &quot;Mist&quot;,  <br>                                              &quot;wind&quot;: [ {&quot;dir&quot;: &quot;ENE&quot;, <br>                                                              &quot;dir_degree&quot;:   &quot;57&quot;, <br>                                                              &quot;speed&quot;: &quot;18&quot;, <br>                                                              &quot;wind_unit&quot;:   &quot;kph&quot; } ] } ], <br>                             &quot;night_min_temp&quot;: &quot;-10&quot;, <br>                             &quot;temp_unit&quot;: &quot;c&quot; } ] }}</body>\n</html>"))

([FlightPro_Class750009] of  Rule

	(lhs "?q (Question predicate \"weather-w2\")")
	(rhs "(ext.data/pump-weather ext.data/w2-weather-html)")
	(salience 0)
	(title "qq:Weather2"))

([FlightPro_Class760000] of  Airport

	(altitude 60)
	(coord 12.50138 -70.0152)
	(country "Aruba")
	(iata "AUA")
	(icao "TNCA")
	(runways 0)
	(title "Oranjestad Queen Beatrix International Airport"))

([FlightPro_Class760004] of  Airport

	(altitude 349)
	(coord 61.04455 28.14439)
	(country "Finland")
	(iata "LPP")
	(icao "EFLP")
	(runways 0)
	(title "Lappeenranta Airport"))

([FlightPro_Class760005] of  Airport

	(altitude 645)
	(coord 66.56166 25.83083)
	(country "Finland")
	(iata "RVN")
	(icao "EFRO")
	(runways 0)
	(title "Rovaniemi Airport"))

([FlightPro_Class760006] of  Airport

	(altitude 22)
	(coord 1.350189 103.9944)
	(country "Singapore")
	(iata "SIN")
	(icao "WSSS")
	(runways 0)
	(title "Singapore Changi Airport"))

([FlightPro_Class770000] of  CloFunction

	(source "(letfn [(closer [ap1 ap2]\n	(let [crd1 [(ap1 \"lat\")(ap1 \"lon\")]\n	       crd2 [(ap2 \"lat\")(ap2 \"lon\")]]\n	  (<= (distance-nm [lat lon] crd1)\n	         (distance-nm [lat lon] crd2))))]\n  (->> (airports-by-country)\n           vals\n           (mapcat vals)\n           (sort closer)\n           (take n)))")
	(title "nearest-airports [n [lat lon]]"))

([FlightPro_Class770011] of  CloFunction

	(source "(letfn [(inside [x]\n	(let [lat (x \"lat\")\n	       lon (x \"lon\")]\n	  (and (<= lat n)(>= lat s)(<= lon e)(>= lon w))))]\n  (->> (airports-by-country)\n           vals\n           (mapcat vals)\n           (filter inside)))")
	(title "airports-in-bbx [n s w e]"))

([FlightPro_Class780000] of  Airport

	(altitude 17)
	(coord 55.608387 12.645351)
	(country "Denmark")
	(iata "CPH")
	(icao "EKCH")
	(runways 0)
	(title "Copenhagen Airport"))

([FlightPro_Class780001] of  Airport

	(altitude 11)
	(coord 52.30861 4.763889)
	(country "Netherlands")
	(iata "AMS")
	(icao "EHAM")
	(runways 0)
	(title "Amsterdam Schiphol Airport"))

([FlightPro_Class780020] of  Rule

	(lhs "?q (Question predicate \"nearest-airports\")")
	(rhs "(ext.data/pump-nearest-airports 4)")
	(salience 0)
	(title "qq:NearestAirports"))

([FlightPro_Class780021] of  CloFunction

	(source "(let [ocr (our-center)\n        nas (fr24/nearest-airports k ocr)\n        dis (map #(geo/distance-nm ocr [(% \"lat\")(% \"lon\")]) nas)\n        bea (map #(geo/bear-deg ocr [(% \"lat\")(% \"lon\")]) nas)\n        html (str \"<h3>Nearest Airports</h3>\"\n	(apply str (for [i (range k)]\n	  (str (inc i) \". \" (get (nth nas i) \"name\") \", \"\n		(get (nth nas i) \"country\") \" (\"\n		(get (nth nas i) \"iata\") \"), \"\n		(format \"distance: %.1f\" (nth dis i)) \" NM, \"\n		\"direction: \" (int (nth bea i)) \"<br>\"))))\n        chn (:ins-chn @COMM)]\n  (asp/pump-in chn\n	{:instruct :popup\n	 :lat (first ocr)\n	 :lon (second ocr)\n	 :html html\n	 :width 1200\n	 :height 1000\n	 :time (:ext-data-popup TIO)})\n  (asp/pump-in chn {:instruct :clear-placemarks})\n  (doseq [apt (take k nas)]\n    (point-out-place {:airport apt})\n    (asp/pump-in chn (placemark-instruct {:airport apt :feature \"airport\"}))))")
	(title "pump-nearest-airports [k]"))

([FlightPro_Class8] of  CloFunction

	(source "(let [data (.-data e)\n       data (js/JSON.parse data)]\n  ;;(println [:CZML data])\n  (.process CZM-SRC data))")
	(title "cz-processor [e]"))

([FlightPro_Class80000] of  CloFunction

	(source "(vswap! carr assoc :altitude alt)")
	(title "set-altitude [carr alt]"))

([FlightPro_Class80001] of  CloFunction

	(source "(GET (:directives URL) {:handler directives-handler\n                       :error-handler error-handler})")
	(title "receive-directives []"))

([FlightPro_Class80002] of  CloVar

	(source "(fn [response]\n  (let [{:keys [status status-text]} response]\n    (println (str \"AJAX ERROR: \" status \" \" status-text))))")
	(title "error-handler"))

([FlightPro_Class80003] of  CloFunction

	(source "(doseq [{:keys [directive] :as dir} (read-transit response)]\n  ;;(println [:DIRECTIVE dir])\n  (condp = directive\n    :manual (do (if (= (:mode @CARRIER) \"?\")\n	    (carrier \"MANUAL\" (manual-vehicle))\n	    (vswap! CARRIER assoc :mode \"MANUAL\"))\n	(asp/start-process CAM-PROC #(camera-move CARRIER) (:camera TIO)))\n    :callsigns (let [{:keys [list]} dir]\n            (ctl/callsigns (conj list \"manual\")))\n    :carrier (let [{:keys [callsign vehicle]} dir]\n            (asp/stop-process CAM-PROC)\n            (carrier callsign vehicle)\n            (camera-move CARRIER))\n    :fly-onboard (let [{:keys [callsign vehicle period]} dir]\n            (when (not (= (:mode @CARRIER) \"MANUAL\"))\n              (carrier callsign vehicle)\n              (camera-move CARRIER period)))\n    (println (str \"Unknown directive: \" [directive dir]))))")
	(title "directives-handler [response]"))

([FlightPro_Class80004] of  CloFunction

	(source "(t/read (t/reader :json) x)")
	(title "read-transit [x]"))

([FlightPro_Class800040] of  Airport

	(altitude 161)
	(coord 60.51414 22.2628)
	(country "Finland")
	(iata "TKU")
	(icao "EFTU")
	(runways 0)
	(title "Turku Airport"))

([FlightPro_Class810000] of  CloFunction

	(source "(let [[lat lon] (our-center)\n        ocn (gn/call-geonames-ocean lat lon)\n        pro \"<html><head><meta charset=\\\"UTF-8\\\"/></meta></head>\"\n        hdr \"<h3>Where we are?</h3>\"\n        html (if (= ocn \"Land\")\n	(let [nby (gn/call-geonames-nearby lat lon)\n	       nam (nby \"name\")\n	       cty (nby \"countryName\")\n	       adm (nby \"adminName1\")\n	       cnt (nby \"continentCode\")\n	       lat1 (read-string (nby \"lat\"))\n	       lon1 (read-string (nby \"lng\"))\n                               dis (read-string (nby \"distance\"))\n	       dir (gn/direction (gn/bearing lat1 lon1 lat lon))]\n	   (str pro hdr \"We are in \" (format \"%.0f\" dis)\n		\" miles to \" dir\n		\" from the \" nam \",<br>\"\n		cty \" (\" adm \"),<br>\"  \n		(CONTINENT cnt)))\n                      (str pro hdr \"We are above the \" ocn))]\n    (asp/pump-in (:ins-chn @COMM)\n	{:instruct :popup\n	 :lat lat\n	 :lon lon\n	 :html html\n	 :width 600\n	 :height 800\n	 :time (:ext-data-popup TIO)}))")
	(title "pump-where-we-are []"))

([FlightPro_Class810006] of  CloVar

	(source "{\"AF\" \"Africa\"\n  \"AN\" \"Antarctica\"\n  \"AS\" \"Asia\"\n  \"EU\" \"Europe\"\n  \"NA\" \"North America\"\n  \"OC\" \"Oceania\"\n  \"SA\" \"South America\"}")
	(title "CONTINENT"))

([FlightPro_Class810007] of  Rule

	(lhs "?q (Question predicate \"where-we-are\")")
	(rhs "(ext.data/pump-where-we-are)")
	(salience 0)
	(title "qq:WhereWeAre"))

([FlightPro_Class820000] of  CloFunction

	(source "(set-html! \"zoom\" (str \"zoom \" z))")
	(title "display-zoom [z]"))

([FlightPro_Class830000] of  CloFunction

	(source "(println [:CMD-NEW-CZML-DOC params])\n(czs/new-doc)\n\"\"")
	(title "new-czml-doc [params]"))

([FlightPro_Class830001] of  CloFunction

	(source "(def DOC-SND true)")
	(title "new-doc []"))

([FlightPro_Class830002] of  Airport

	(altitude 1487)
	(coord 48.35378 11.78608)
	(country "Germany")
	(iata "MUC")
	(icao "EDDM")
	(runways 0)
	(title "Munich Airport"))

([FlightPro_Class830003] of  Airport

	(altitude 392)
	(coord 49.0113 2.537)
	(country "France")
	(iata "CDG")
	(icao "LFPG")
	(runways 0)
	(title "Paris Charles de Gaulle Airport"))

([FlightPro_Class840011] of  CloFunction

	(source "(or (> (Math/abs (- lat1 lat2)) 0.02)\n     (> (Math/abs (- lon1 lon2)) 0.02))")
	(title "obsolete [[lat1 lon1] [lat2 lon2]]"))

([FlightPro_Class9] of  CloFunction

	(source "(let [dest (js/Cesium.Cartesian3.fromDegrees lon lat alt)]\n  (.flyTo (.-camera VIEWER)\n            #js{:destination dest\n                  :orientation #js{:heading (js/Cesium.Math.toRadians hea)\n                                           :pitch   (js/Cesium.Math.toRadians pit)\n                                           :roll    (js/Cesium.Math.toRadians rol)}\n                  :duration per\n                  :easingFunction (fn [time] time)}))")
	(title "fly-control [lat lon alt hea pit rol per]"))

([FlightPro_Class90000] of  CloFunction

	(source "(loop [out []]\n  (if (empty? out)\n    (recur (<!! chn))\n    out))")
	(title "one-out [chn]"))

([FlightPro_Class90001] of  CloFunction

	(source "(if (= (:mode @CARRIER) \"MANUAL\")\n  (vswap! CARRIER assoc-in [:propeller :accel] accel))")
	(title "accel-speed [accel]"))

([FlightPro_Class90002] of  CloFunction

	(source "(if (= (:mode @CARRIER) \"MANUAL\")\n  (vswap! CARRIER assoc-in [:elevator :accel] accel))")
	(title "accel-altitude [accel]"))

([FlightPro_Class90005] of  CloFunction

	(source "(loop [n 1 y z]\n  (if (seq y)\n    (let [[onb1 cs1 t1 crd1 a1 c1 s1 gnd1] (first y)\n           [onb2 cs2 t2 crd2 a2 c2 s2 gnd2] (second y)\n           dt (if (and t1 t2) (- t2 t1) -7777)\n           da (if (and a1 a2) (- a2 a1) -7777)\n           ds (if (and s1 s2) (- s2 s1) -7777)\n           va (if (and dt da) (/ da dt) -7777)\n           vs (if (and dt ds) (/ ds dt) -7777)]\n      (protege.core/ctpl [n onb2 cs2 t2 crd2 a2 c2 s2 gnd2 \n        (read-string (format \"%.1f\" (float va)))\n        (read-string (format \"%.2f\" (float vs)))])\n      (recur (inc n) (rest y))) ))")
	(title "proc [z]"))
